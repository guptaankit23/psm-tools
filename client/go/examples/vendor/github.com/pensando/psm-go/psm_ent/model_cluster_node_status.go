/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterNodeStatus NodeStatus contains the current state of the node.
type ClusterNodeStatus struct {
	// List of current node conditions.
	Conditions *[]ClusterNodeCondition `json:"conditions,omitempty"`
	// Current lifecycle phase of the node.
	Phase *string `json:"phase,omitempty"`
	// Quorum node or not.
	Quorum *bool `json:"quorum,omitempty"`
}

// NewClusterNodeStatus instantiates a new ClusterNodeStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterNodeStatus() *ClusterNodeStatus {
	this := ClusterNodeStatus{}
	var phase string = "unknown"
	this.Phase = &phase
	return &this
}

// NewClusterNodeStatusWithDefaults instantiates a new ClusterNodeStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterNodeStatusWithDefaults() *ClusterNodeStatus {
	this := ClusterNodeStatus{}
	var phase string = "unknown"
	this.Phase = &phase
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ClusterNodeStatus) GetConditions() []ClusterNodeCondition {
	if o == nil || o.Conditions == nil {
		var ret []ClusterNodeCondition
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeStatus) GetConditionsOk() (*[]ClusterNodeCondition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ClusterNodeStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []ClusterNodeCondition and assigns it to the Conditions field.
func (o *ClusterNodeStatus) SetConditions(v []ClusterNodeCondition) {
	o.Conditions = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *ClusterNodeStatus) GetPhase() string {
	if o == nil || o.Phase == nil {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeStatus) GetPhaseOk() (*string, bool) {
	if o == nil || o.Phase == nil {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *ClusterNodeStatus) HasPhase() bool {
	if o != nil && o.Phase != nil {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *ClusterNodeStatus) SetPhase(v string) {
	o.Phase = &v
}

// GetQuorum returns the Quorum field value if set, zero value otherwise.
func (o *ClusterNodeStatus) GetQuorum() bool {
	if o == nil || o.Quorum == nil {
		var ret bool
		return ret
	}
	return *o.Quorum
}

// GetQuorumOk returns a tuple with the Quorum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeStatus) GetQuorumOk() (*bool, bool) {
	if o == nil || o.Quorum == nil {
		return nil, false
	}
	return o.Quorum, true
}

// HasQuorum returns a boolean if a field has been set.
func (o *ClusterNodeStatus) HasQuorum() bool {
	if o != nil && o.Quorum != nil {
		return true
	}

	return false
}

// SetQuorum gets a reference to the given bool and assigns it to the Quorum field.
func (o *ClusterNodeStatus) SetQuorum(v bool) {
	o.Quorum = &v
}

func (o ClusterNodeStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.Phase != nil {
		toSerialize["phase"] = o.Phase
	}
	if o.Quorum != nil {
		toSerialize["quorum"] = o.Quorum
	}
	return json.Marshal(toSerialize)
}

type NullableClusterNodeStatus struct {
	value *ClusterNodeStatus
	isSet bool
}

func (v NullableClusterNodeStatus) Get() *ClusterNodeStatus {
	return v.value
}

func (v *NullableClusterNodeStatus) Set(val *ClusterNodeStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterNodeStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterNodeStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterNodeStatus(val *ClusterNodeStatus) *NullableClusterNodeStatus {
	return &NullableClusterNodeStatus{value: val, isSet: true}
}

func (v NullableClusterNodeStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterNodeStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


