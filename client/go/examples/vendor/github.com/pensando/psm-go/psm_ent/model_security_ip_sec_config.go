/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecurityIPSecConfig These are the cluster wide IPSec parameters that are common to all IPSec SecurityAssociations.
type SecurityIPSecConfig struct {
	// Time to schedule Internet Key Exchange (IKE) reauthentication. IKE reauthentication recreates the IKE SA from scratch and re-evaluates the credentials Default 24h, set it to an empty string to disable reauthentication. Should be a valid time duration between 1h0m0s and 24h0m0s.
	IkeLifetime *string `json:"ike-lifetime,omitempty"`
	// How long a particular instance of a connection should last, from successful negotiation to expiry The connection will be re-negotiated before it expires. Post succesful re-negotation, the new connection will have new(different) keys and a new SPI Default 8h, Max 24h, set it to an empty string to disable rekeying. Should be a valid time duration between 1h0m0s and 24h0m0s.
	SaLifetime *string `json:"sa-lifetime,omitempty"`
}

// NewSecurityIPSecConfig instantiates a new SecurityIPSecConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityIPSecConfig() *SecurityIPSecConfig {
	this := SecurityIPSecConfig{}
	var ikeLifetime string = "24h"
	this.IkeLifetime = &ikeLifetime
	var saLifetime string = "8h"
	this.SaLifetime = &saLifetime
	return &this
}

// NewSecurityIPSecConfigWithDefaults instantiates a new SecurityIPSecConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityIPSecConfigWithDefaults() *SecurityIPSecConfig {
	this := SecurityIPSecConfig{}
	var ikeLifetime string = "24h"
	this.IkeLifetime = &ikeLifetime
	var saLifetime string = "8h"
	this.SaLifetime = &saLifetime
	return &this
}

// GetIkeLifetime returns the IkeLifetime field value if set, zero value otherwise.
func (o *SecurityIPSecConfig) GetIkeLifetime() string {
	if o == nil || o.IkeLifetime == nil {
		var ret string
		return ret
	}
	return *o.IkeLifetime
}

// GetIkeLifetimeOk returns a tuple with the IkeLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityIPSecConfig) GetIkeLifetimeOk() (*string, bool) {
	if o == nil || o.IkeLifetime == nil {
		return nil, false
	}
	return o.IkeLifetime, true
}

// HasIkeLifetime returns a boolean if a field has been set.
func (o *SecurityIPSecConfig) HasIkeLifetime() bool {
	if o != nil && o.IkeLifetime != nil {
		return true
	}

	return false
}

// SetIkeLifetime gets a reference to the given string and assigns it to the IkeLifetime field.
func (o *SecurityIPSecConfig) SetIkeLifetime(v string) {
	o.IkeLifetime = &v
}

// GetSaLifetime returns the SaLifetime field value if set, zero value otherwise.
func (o *SecurityIPSecConfig) GetSaLifetime() string {
	if o == nil || o.SaLifetime == nil {
		var ret string
		return ret
	}
	return *o.SaLifetime
}

// GetSaLifetimeOk returns a tuple with the SaLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityIPSecConfig) GetSaLifetimeOk() (*string, bool) {
	if o == nil || o.SaLifetime == nil {
		return nil, false
	}
	return o.SaLifetime, true
}

// HasSaLifetime returns a boolean if a field has been set.
func (o *SecurityIPSecConfig) HasSaLifetime() bool {
	if o != nil && o.SaLifetime != nil {
		return true
	}

	return false
}

// SetSaLifetime gets a reference to the given string and assigns it to the SaLifetime field.
func (o *SecurityIPSecConfig) SetSaLifetime(v string) {
	o.SaLifetime = &v
}

func (o SecurityIPSecConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IkeLifetime != nil {
		toSerialize["ike-lifetime"] = o.IkeLifetime
	}
	if o.SaLifetime != nil {
		toSerialize["sa-lifetime"] = o.SaLifetime
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityIPSecConfig struct {
	value *SecurityIPSecConfig
	isSet bool
}

func (v NullableSecurityIPSecConfig) Get() *SecurityIPSecConfig {
	return v.value
}

func (v *NullableSecurityIPSecConfig) Set(val *SecurityIPSecConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityIPSecConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityIPSecConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityIPSecConfig(val *SecurityIPSecConfig) *NullableSecurityIPSecConfig {
	return &NullableSecurityIPSecConfig{value: val, isSet: true}
}

func (v NullableSecurityIPSecConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityIPSecConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


