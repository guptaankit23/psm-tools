/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterCPUInfo CPU information.
type ClusterCPUInfo struct {
	// Number of physical CPU cores per socket, eg: 36.
	NumCores *int32 `json:"num-cores,omitempty"`
	// Number of CPU sockets, eg: 2, 4.
	NumSockets *int32 `json:"num-sockets,omitempty"`
	// Number of threads per core, eg: 2.
	NumThreads *int32 `json:"num-threads,omitempty"`
	// CPU speed per core, eg: 2099998101.
	Speed *string `json:"speed,omitempty"`
}

// NewClusterCPUInfo instantiates a new ClusterCPUInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterCPUInfo() *ClusterCPUInfo {
	this := ClusterCPUInfo{}
	return &this
}

// NewClusterCPUInfoWithDefaults instantiates a new ClusterCPUInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterCPUInfoWithDefaults() *ClusterCPUInfo {
	this := ClusterCPUInfo{}
	return &this
}

// GetNumCores returns the NumCores field value if set, zero value otherwise.
func (o *ClusterCPUInfo) GetNumCores() int32 {
	if o == nil || o.NumCores == nil {
		var ret int32
		return ret
	}
	return *o.NumCores
}

// GetNumCoresOk returns a tuple with the NumCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCPUInfo) GetNumCoresOk() (*int32, bool) {
	if o == nil || o.NumCores == nil {
		return nil, false
	}
	return o.NumCores, true
}

// HasNumCores returns a boolean if a field has been set.
func (o *ClusterCPUInfo) HasNumCores() bool {
	if o != nil && o.NumCores != nil {
		return true
	}

	return false
}

// SetNumCores gets a reference to the given int32 and assigns it to the NumCores field.
func (o *ClusterCPUInfo) SetNumCores(v int32) {
	o.NumCores = &v
}

// GetNumSockets returns the NumSockets field value if set, zero value otherwise.
func (o *ClusterCPUInfo) GetNumSockets() int32 {
	if o == nil || o.NumSockets == nil {
		var ret int32
		return ret
	}
	return *o.NumSockets
}

// GetNumSocketsOk returns a tuple with the NumSockets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCPUInfo) GetNumSocketsOk() (*int32, bool) {
	if o == nil || o.NumSockets == nil {
		return nil, false
	}
	return o.NumSockets, true
}

// HasNumSockets returns a boolean if a field has been set.
func (o *ClusterCPUInfo) HasNumSockets() bool {
	if o != nil && o.NumSockets != nil {
		return true
	}

	return false
}

// SetNumSockets gets a reference to the given int32 and assigns it to the NumSockets field.
func (o *ClusterCPUInfo) SetNumSockets(v int32) {
	o.NumSockets = &v
}

// GetNumThreads returns the NumThreads field value if set, zero value otherwise.
func (o *ClusterCPUInfo) GetNumThreads() int32 {
	if o == nil || o.NumThreads == nil {
		var ret int32
		return ret
	}
	return *o.NumThreads
}

// GetNumThreadsOk returns a tuple with the NumThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCPUInfo) GetNumThreadsOk() (*int32, bool) {
	if o == nil || o.NumThreads == nil {
		return nil, false
	}
	return o.NumThreads, true
}

// HasNumThreads returns a boolean if a field has been set.
func (o *ClusterCPUInfo) HasNumThreads() bool {
	if o != nil && o.NumThreads != nil {
		return true
	}

	return false
}

// SetNumThreads gets a reference to the given int32 and assigns it to the NumThreads field.
func (o *ClusterCPUInfo) SetNumThreads(v int32) {
	o.NumThreads = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *ClusterCPUInfo) GetSpeed() string {
	if o == nil || o.Speed == nil {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCPUInfo) GetSpeedOk() (*string, bool) {
	if o == nil || o.Speed == nil {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *ClusterCPUInfo) HasSpeed() bool {
	if o != nil && o.Speed != nil {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *ClusterCPUInfo) SetSpeed(v string) {
	o.Speed = &v
}

func (o ClusterCPUInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumCores != nil {
		toSerialize["num-cores"] = o.NumCores
	}
	if o.NumSockets != nil {
		toSerialize["num-sockets"] = o.NumSockets
	}
	if o.NumThreads != nil {
		toSerialize["num-threads"] = o.NumThreads
	}
	if o.Speed != nil {
		toSerialize["speed"] = o.Speed
	}
	return json.Marshal(toSerialize)
}

type NullableClusterCPUInfo struct {
	value *ClusterCPUInfo
	isSet bool
}

func (v NullableClusterCPUInfo) Get() *ClusterCPUInfo {
	return v.value
}

func (v *NullableClusterCPUInfo) Set(val *ClusterCPUInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterCPUInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterCPUInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterCPUInfo(val *ClusterCPUInfo) *NullableClusterCPUInfo {
	return &NullableClusterCPUInfo{value: val, isSet: true}
}

func (v NullableClusterCPUInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterCPUInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


