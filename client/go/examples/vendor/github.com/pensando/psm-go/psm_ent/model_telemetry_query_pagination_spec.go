/*
 * Telemetry_query API reference
 *
 * Service name  
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// TelemetryQueryPaginationSpec PaginationSpec specifies how many results to include.
type TelemetryQueryPaginationSpec struct {
	// Count specifies the number of points to include. Value should be at least 1.
	Count *int32 `json:"count,omitempty"`
	// Offset specifies the starting point when using Count. Value should be at least 0.
	Offset *int32 `json:"offset,omitempty"`
}

// NewTelemetryQueryPaginationSpec instantiates a new TelemetryQueryPaginationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelemetryQueryPaginationSpec() *TelemetryQueryPaginationSpec {
	this := TelemetryQueryPaginationSpec{}
	var offset int32 = 0
	this.Offset = &offset
	return &this
}

// NewTelemetryQueryPaginationSpecWithDefaults instantiates a new TelemetryQueryPaginationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelemetryQueryPaginationSpecWithDefaults() *TelemetryQueryPaginationSpec {
	this := TelemetryQueryPaginationSpec{}
	var offset int32 = 0
	this.Offset = &offset
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *TelemetryQueryPaginationSpec) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryPaginationSpec) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *TelemetryQueryPaginationSpec) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *TelemetryQueryPaginationSpec) SetCount(v int32) {
	o.Count = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TelemetryQueryPaginationSpec) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryPaginationSpec) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TelemetryQueryPaginationSpec) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *TelemetryQueryPaginationSpec) SetOffset(v int32) {
	o.Offset = &v
}

func (o TelemetryQueryPaginationSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableTelemetryQueryPaginationSpec struct {
	value *TelemetryQueryPaginationSpec
	isSet bool
}

func (v NullableTelemetryQueryPaginationSpec) Get() *TelemetryQueryPaginationSpec {
	return v.value
}

func (v *NullableTelemetryQueryPaginationSpec) Set(val *TelemetryQueryPaginationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableTelemetryQueryPaginationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableTelemetryQueryPaginationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelemetryQueryPaginationSpec(val *TelemetryQueryPaginationSpec) *NullableTelemetryQueryPaginationSpec {
	return &NullableTelemetryQueryPaginationSpec{value: val, isSet: true}
}

func (v NullableTelemetryQueryPaginationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelemetryQueryPaginationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


