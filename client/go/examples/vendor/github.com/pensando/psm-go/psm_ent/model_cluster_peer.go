/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterPeer struct for ClusterPeer
type ClusterPeer struct {
	IpConfig *ClusterIPConfig `json:"ip-config,omitempty"`
	// MACAddress of the peer DSS.
	MacAddress *string `json:"mac-address,omitempty"`
}

// NewClusterPeer instantiates a new ClusterPeer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterPeer() *ClusterPeer {
	this := ClusterPeer{}
	return &this
}

// NewClusterPeerWithDefaults instantiates a new ClusterPeer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterPeerWithDefaults() *ClusterPeer {
	this := ClusterPeer{}
	return &this
}

// GetIpConfig returns the IpConfig field value if set, zero value otherwise.
func (o *ClusterPeer) GetIpConfig() ClusterIPConfig {
	if o == nil || o.IpConfig == nil {
		var ret ClusterIPConfig
		return ret
	}
	return *o.IpConfig
}

// GetIpConfigOk returns a tuple with the IpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPeer) GetIpConfigOk() (*ClusterIPConfig, bool) {
	if o == nil || o.IpConfig == nil {
		return nil, false
	}
	return o.IpConfig, true
}

// HasIpConfig returns a boolean if a field has been set.
func (o *ClusterPeer) HasIpConfig() bool {
	if o != nil && o.IpConfig != nil {
		return true
	}

	return false
}

// SetIpConfig gets a reference to the given ClusterIPConfig and assigns it to the IpConfig field.
func (o *ClusterPeer) SetIpConfig(v ClusterIPConfig) {
	o.IpConfig = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *ClusterPeer) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterPeer) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *ClusterPeer) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *ClusterPeer) SetMacAddress(v string) {
	o.MacAddress = &v
}

func (o ClusterPeer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IpConfig != nil {
		toSerialize["ip-config"] = o.IpConfig
	}
	if o.MacAddress != nil {
		toSerialize["mac-address"] = o.MacAddress
	}
	return json.Marshal(toSerialize)
}

type NullableClusterPeer struct {
	value *ClusterPeer
	isSet bool
}

func (v NullableClusterPeer) Get() *ClusterPeer {
	return v.value
}

func (v *NullableClusterPeer) Set(val *ClusterPeer) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterPeer) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterPeer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterPeer(val *ClusterPeer) *NullableClusterPeer {
	return &NullableClusterPeer{value: val, isSet: true}
}

func (v NullableClusterPeer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterPeer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


