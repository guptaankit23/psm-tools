/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringAlertDestinationSpec struct for MonitoringAlertDestinationSpec
type MonitoringAlertDestinationSpec struct {
	EmailExport *MonitoringEmailExport `json:"email-export,omitempty"`
	Selector *FieldsSelector `json:"selector,omitempty"`
	SnmpExport *MonitoringSNMPExport `json:"snmp-export,omitempty"`
	SyslogExport *MonitoringSyslogExport `json:"syslog-export,omitempty"`
}

// NewMonitoringAlertDestinationSpec instantiates a new MonitoringAlertDestinationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringAlertDestinationSpec() *MonitoringAlertDestinationSpec {
	this := MonitoringAlertDestinationSpec{}
	return &this
}

// NewMonitoringAlertDestinationSpecWithDefaults instantiates a new MonitoringAlertDestinationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringAlertDestinationSpecWithDefaults() *MonitoringAlertDestinationSpec {
	this := MonitoringAlertDestinationSpec{}
	return &this
}

// GetEmailExport returns the EmailExport field value if set, zero value otherwise.
func (o *MonitoringAlertDestinationSpec) GetEmailExport() MonitoringEmailExport {
	if o == nil || o.EmailExport == nil {
		var ret MonitoringEmailExport
		return ret
	}
	return *o.EmailExport
}

// GetEmailExportOk returns a tuple with the EmailExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertDestinationSpec) GetEmailExportOk() (*MonitoringEmailExport, bool) {
	if o == nil || o.EmailExport == nil {
		return nil, false
	}
	return o.EmailExport, true
}

// HasEmailExport returns a boolean if a field has been set.
func (o *MonitoringAlertDestinationSpec) HasEmailExport() bool {
	if o != nil && o.EmailExport != nil {
		return true
	}

	return false
}

// SetEmailExport gets a reference to the given MonitoringEmailExport and assigns it to the EmailExport field.
func (o *MonitoringAlertDestinationSpec) SetEmailExport(v MonitoringEmailExport) {
	o.EmailExport = &v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *MonitoringAlertDestinationSpec) GetSelector() FieldsSelector {
	if o == nil || o.Selector == nil {
		var ret FieldsSelector
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertDestinationSpec) GetSelectorOk() (*FieldsSelector, bool) {
	if o == nil || o.Selector == nil {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *MonitoringAlertDestinationSpec) HasSelector() bool {
	if o != nil && o.Selector != nil {
		return true
	}

	return false
}

// SetSelector gets a reference to the given FieldsSelector and assigns it to the Selector field.
func (o *MonitoringAlertDestinationSpec) SetSelector(v FieldsSelector) {
	o.Selector = &v
}

// GetSnmpExport returns the SnmpExport field value if set, zero value otherwise.
func (o *MonitoringAlertDestinationSpec) GetSnmpExport() MonitoringSNMPExport {
	if o == nil || o.SnmpExport == nil {
		var ret MonitoringSNMPExport
		return ret
	}
	return *o.SnmpExport
}

// GetSnmpExportOk returns a tuple with the SnmpExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertDestinationSpec) GetSnmpExportOk() (*MonitoringSNMPExport, bool) {
	if o == nil || o.SnmpExport == nil {
		return nil, false
	}
	return o.SnmpExport, true
}

// HasSnmpExport returns a boolean if a field has been set.
func (o *MonitoringAlertDestinationSpec) HasSnmpExport() bool {
	if o != nil && o.SnmpExport != nil {
		return true
	}

	return false
}

// SetSnmpExport gets a reference to the given MonitoringSNMPExport and assigns it to the SnmpExport field.
func (o *MonitoringAlertDestinationSpec) SetSnmpExport(v MonitoringSNMPExport) {
	o.SnmpExport = &v
}

// GetSyslogExport returns the SyslogExport field value if set, zero value otherwise.
func (o *MonitoringAlertDestinationSpec) GetSyslogExport() MonitoringSyslogExport {
	if o == nil || o.SyslogExport == nil {
		var ret MonitoringSyslogExport
		return ret
	}
	return *o.SyslogExport
}

// GetSyslogExportOk returns a tuple with the SyslogExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertDestinationSpec) GetSyslogExportOk() (*MonitoringSyslogExport, bool) {
	if o == nil || o.SyslogExport == nil {
		return nil, false
	}
	return o.SyslogExport, true
}

// HasSyslogExport returns a boolean if a field has been set.
func (o *MonitoringAlertDestinationSpec) HasSyslogExport() bool {
	if o != nil && o.SyslogExport != nil {
		return true
	}

	return false
}

// SetSyslogExport gets a reference to the given MonitoringSyslogExport and assigns it to the SyslogExport field.
func (o *MonitoringAlertDestinationSpec) SetSyslogExport(v MonitoringSyslogExport) {
	o.SyslogExport = &v
}

func (o MonitoringAlertDestinationSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmailExport != nil {
		toSerialize["email-export"] = o.EmailExport
	}
	if o.Selector != nil {
		toSerialize["selector"] = o.Selector
	}
	if o.SnmpExport != nil {
		toSerialize["snmp-export"] = o.SnmpExport
	}
	if o.SyslogExport != nil {
		toSerialize["syslog-export"] = o.SyslogExport
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringAlertDestinationSpec struct {
	value *MonitoringAlertDestinationSpec
	isSet bool
}

func (v NullableMonitoringAlertDestinationSpec) Get() *MonitoringAlertDestinationSpec {
	return v.value
}

func (v *NullableMonitoringAlertDestinationSpec) Set(val *MonitoringAlertDestinationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringAlertDestinationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringAlertDestinationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringAlertDestinationSpec(val *MonitoringAlertDestinationSpec) *NullableMonitoringAlertDestinationSpec {
	return &NullableMonitoringAlertDestinationSpec{value: val, isSet: true}
}

func (v NullableMonitoringAlertDestinationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringAlertDestinationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


