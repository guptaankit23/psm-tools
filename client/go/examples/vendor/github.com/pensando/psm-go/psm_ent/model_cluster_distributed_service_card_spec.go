/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterDistributedServiceCardSpec DistributedServiceCardSpec contains configuration of the DistributedServiceCard (Naples I/O subsystem).
type ClusterDistributedServiceCardSpec struct {
	// Admit allows a DistributedServiceCard to join the cluster.
	Admit *bool `json:"admit,omitempty"`
	// Controllers contains the list of remote controllers IP addresses or hostnames.
	Controllers *[]string `json:"controllers,omitempty"`
	Dscprofile *string `json:"dscprofile,omitempty"`
	// EnableFwLogging enables flow logging on the device.
	EnableFwLogging *bool `json:"enable-fw-logging,omitempty"`
	// EnableSecureBoot a true value indicates, set lifecycle fuse to enable secure boot.
	EnableSecureBoot *bool `json:"enable-secure-boot,omitempty"`
	FwlogPolicy *ClusterFwlogPolicyRef `json:"fwlog-policy,omitempty"`
	// ID is used as a user friendly identifier in logs/events.
	Id *string `json:"id,omitempty"`
	IpConfig *ClusterIPConfig `json:"ip-config,omitempty"`
	// MgmtMode defines the management mode of the DistributedServiceCard.
	MgmtMode *string `json:"mgmt-mode,omitempty"`
	// MgmtVlan defines the vlan to be used in network managed mode. The default of 0 means we use untagged-vlan for doing inband management. Value should be between 0 and 4095.
	MgmtVlan *int64 `json:"mgmt-vlan,omitempty"`
	// MgmtMode defines the management mode of the DistributedServiceCard.
	NetworkMode *string `json:"network-mode,omitempty"`
	Policer *ClusterPolicerRef `json:"policer,omitempty"`
	// RoutingConfig is the routing configuration for the underlay routed network that this DSC participates in.
	RoutingConfig *string `json:"routing-config,omitempty"`
}

// NewClusterDistributedServiceCardSpec instantiates a new ClusterDistributedServiceCardSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterDistributedServiceCardSpec() *ClusterDistributedServiceCardSpec {
	this := ClusterDistributedServiceCardSpec{}
	var enableSecureBoot bool = false
	this.EnableSecureBoot = &enableSecureBoot
	var mgmtMode string = "host"
	this.MgmtMode = &mgmtMode
	var networkMode string = "oob"
	this.NetworkMode = &networkMode
	return &this
}

// NewClusterDistributedServiceCardSpecWithDefaults instantiates a new ClusterDistributedServiceCardSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterDistributedServiceCardSpecWithDefaults() *ClusterDistributedServiceCardSpec {
	this := ClusterDistributedServiceCardSpec{}
	var enableSecureBoot bool = false
	this.EnableSecureBoot = &enableSecureBoot
	var mgmtMode string = "host"
	this.MgmtMode = &mgmtMode
	var networkMode string = "oob"
	this.NetworkMode = &networkMode
	return &this
}

// GetAdmit returns the Admit field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetAdmit() bool {
	if o == nil || o.Admit == nil {
		var ret bool
		return ret
	}
	return *o.Admit
}

// GetAdmitOk returns a tuple with the Admit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetAdmitOk() (*bool, bool) {
	if o == nil || o.Admit == nil {
		return nil, false
	}
	return o.Admit, true
}

// HasAdmit returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasAdmit() bool {
	if o != nil && o.Admit != nil {
		return true
	}

	return false
}

// SetAdmit gets a reference to the given bool and assigns it to the Admit field.
func (o *ClusterDistributedServiceCardSpec) SetAdmit(v bool) {
	o.Admit = &v
}

// GetControllers returns the Controllers field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetControllers() []string {
	if o == nil || o.Controllers == nil {
		var ret []string
		return ret
	}
	return *o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetControllersOk() (*[]string, bool) {
	if o == nil || o.Controllers == nil {
		return nil, false
	}
	return o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasControllers() bool {
	if o != nil && o.Controllers != nil {
		return true
	}

	return false
}

// SetControllers gets a reference to the given []string and assigns it to the Controllers field.
func (o *ClusterDistributedServiceCardSpec) SetControllers(v []string) {
	o.Controllers = &v
}

// GetDscprofile returns the Dscprofile field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetDscprofile() string {
	if o == nil || o.Dscprofile == nil {
		var ret string
		return ret
	}
	return *o.Dscprofile
}

// GetDscprofileOk returns a tuple with the Dscprofile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetDscprofileOk() (*string, bool) {
	if o == nil || o.Dscprofile == nil {
		return nil, false
	}
	return o.Dscprofile, true
}

// HasDscprofile returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasDscprofile() bool {
	if o != nil && o.Dscprofile != nil {
		return true
	}

	return false
}

// SetDscprofile gets a reference to the given string and assigns it to the Dscprofile field.
func (o *ClusterDistributedServiceCardSpec) SetDscprofile(v string) {
	o.Dscprofile = &v
}

// GetEnableFwLogging returns the EnableFwLogging field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetEnableFwLogging() bool {
	if o == nil || o.EnableFwLogging == nil {
		var ret bool
		return ret
	}
	return *o.EnableFwLogging
}

// GetEnableFwLoggingOk returns a tuple with the EnableFwLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetEnableFwLoggingOk() (*bool, bool) {
	if o == nil || o.EnableFwLogging == nil {
		return nil, false
	}
	return o.EnableFwLogging, true
}

// HasEnableFwLogging returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasEnableFwLogging() bool {
	if o != nil && o.EnableFwLogging != nil {
		return true
	}

	return false
}

// SetEnableFwLogging gets a reference to the given bool and assigns it to the EnableFwLogging field.
func (o *ClusterDistributedServiceCardSpec) SetEnableFwLogging(v bool) {
	o.EnableFwLogging = &v
}

// GetEnableSecureBoot returns the EnableSecureBoot field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetEnableSecureBoot() bool {
	if o == nil || o.EnableSecureBoot == nil {
		var ret bool
		return ret
	}
	return *o.EnableSecureBoot
}

// GetEnableSecureBootOk returns a tuple with the EnableSecureBoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetEnableSecureBootOk() (*bool, bool) {
	if o == nil || o.EnableSecureBoot == nil {
		return nil, false
	}
	return o.EnableSecureBoot, true
}

// HasEnableSecureBoot returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasEnableSecureBoot() bool {
	if o != nil && o.EnableSecureBoot != nil {
		return true
	}

	return false
}

// SetEnableSecureBoot gets a reference to the given bool and assigns it to the EnableSecureBoot field.
func (o *ClusterDistributedServiceCardSpec) SetEnableSecureBoot(v bool) {
	o.EnableSecureBoot = &v
}

// GetFwlogPolicy returns the FwlogPolicy field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetFwlogPolicy() ClusterFwlogPolicyRef {
	if o == nil || o.FwlogPolicy == nil {
		var ret ClusterFwlogPolicyRef
		return ret
	}
	return *o.FwlogPolicy
}

// GetFwlogPolicyOk returns a tuple with the FwlogPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetFwlogPolicyOk() (*ClusterFwlogPolicyRef, bool) {
	if o == nil || o.FwlogPolicy == nil {
		return nil, false
	}
	return o.FwlogPolicy, true
}

// HasFwlogPolicy returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasFwlogPolicy() bool {
	if o != nil && o.FwlogPolicy != nil {
		return true
	}

	return false
}

// SetFwlogPolicy gets a reference to the given ClusterFwlogPolicyRef and assigns it to the FwlogPolicy field.
func (o *ClusterDistributedServiceCardSpec) SetFwlogPolicy(v ClusterFwlogPolicyRef) {
	o.FwlogPolicy = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClusterDistributedServiceCardSpec) SetId(v string) {
	o.Id = &v
}

// GetIpConfig returns the IpConfig field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetIpConfig() ClusterIPConfig {
	if o == nil || o.IpConfig == nil {
		var ret ClusterIPConfig
		return ret
	}
	return *o.IpConfig
}

// GetIpConfigOk returns a tuple with the IpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetIpConfigOk() (*ClusterIPConfig, bool) {
	if o == nil || o.IpConfig == nil {
		return nil, false
	}
	return o.IpConfig, true
}

// HasIpConfig returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasIpConfig() bool {
	if o != nil && o.IpConfig != nil {
		return true
	}

	return false
}

// SetIpConfig gets a reference to the given ClusterIPConfig and assigns it to the IpConfig field.
func (o *ClusterDistributedServiceCardSpec) SetIpConfig(v ClusterIPConfig) {
	o.IpConfig = &v
}

// GetMgmtMode returns the MgmtMode field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetMgmtMode() string {
	if o == nil || o.MgmtMode == nil {
		var ret string
		return ret
	}
	return *o.MgmtMode
}

// GetMgmtModeOk returns a tuple with the MgmtMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetMgmtModeOk() (*string, bool) {
	if o == nil || o.MgmtMode == nil {
		return nil, false
	}
	return o.MgmtMode, true
}

// HasMgmtMode returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasMgmtMode() bool {
	if o != nil && o.MgmtMode != nil {
		return true
	}

	return false
}

// SetMgmtMode gets a reference to the given string and assigns it to the MgmtMode field.
func (o *ClusterDistributedServiceCardSpec) SetMgmtMode(v string) {
	o.MgmtMode = &v
}

// GetMgmtVlan returns the MgmtVlan field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetMgmtVlan() int64 {
	if o == nil || o.MgmtVlan == nil {
		var ret int64
		return ret
	}
	return *o.MgmtVlan
}

// GetMgmtVlanOk returns a tuple with the MgmtVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetMgmtVlanOk() (*int64, bool) {
	if o == nil || o.MgmtVlan == nil {
		return nil, false
	}
	return o.MgmtVlan, true
}

// HasMgmtVlan returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasMgmtVlan() bool {
	if o != nil && o.MgmtVlan != nil {
		return true
	}

	return false
}

// SetMgmtVlan gets a reference to the given int64 and assigns it to the MgmtVlan field.
func (o *ClusterDistributedServiceCardSpec) SetMgmtVlan(v int64) {
	o.MgmtVlan = &v
}

// GetNetworkMode returns the NetworkMode field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetNetworkMode() string {
	if o == nil || o.NetworkMode == nil {
		var ret string
		return ret
	}
	return *o.NetworkMode
}

// GetNetworkModeOk returns a tuple with the NetworkMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetNetworkModeOk() (*string, bool) {
	if o == nil || o.NetworkMode == nil {
		return nil, false
	}
	return o.NetworkMode, true
}

// HasNetworkMode returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasNetworkMode() bool {
	if o != nil && o.NetworkMode != nil {
		return true
	}

	return false
}

// SetNetworkMode gets a reference to the given string and assigns it to the NetworkMode field.
func (o *ClusterDistributedServiceCardSpec) SetNetworkMode(v string) {
	o.NetworkMode = &v
}

// GetPolicer returns the Policer field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetPolicer() ClusterPolicerRef {
	if o == nil || o.Policer == nil {
		var ret ClusterPolicerRef
		return ret
	}
	return *o.Policer
}

// GetPolicerOk returns a tuple with the Policer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetPolicerOk() (*ClusterPolicerRef, bool) {
	if o == nil || o.Policer == nil {
		return nil, false
	}
	return o.Policer, true
}

// HasPolicer returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasPolicer() bool {
	if o != nil && o.Policer != nil {
		return true
	}

	return false
}

// SetPolicer gets a reference to the given ClusterPolicerRef and assigns it to the Policer field.
func (o *ClusterDistributedServiceCardSpec) SetPolicer(v ClusterPolicerRef) {
	o.Policer = &v
}

// GetRoutingConfig returns the RoutingConfig field value if set, zero value otherwise.
func (o *ClusterDistributedServiceCardSpec) GetRoutingConfig() string {
	if o == nil || o.RoutingConfig == nil {
		var ret string
		return ret
	}
	return *o.RoutingConfig
}

// GetRoutingConfigOk returns a tuple with the RoutingConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDistributedServiceCardSpec) GetRoutingConfigOk() (*string, bool) {
	if o == nil || o.RoutingConfig == nil {
		return nil, false
	}
	return o.RoutingConfig, true
}

// HasRoutingConfig returns a boolean if a field has been set.
func (o *ClusterDistributedServiceCardSpec) HasRoutingConfig() bool {
	if o != nil && o.RoutingConfig != nil {
		return true
	}

	return false
}

// SetRoutingConfig gets a reference to the given string and assigns it to the RoutingConfig field.
func (o *ClusterDistributedServiceCardSpec) SetRoutingConfig(v string) {
	o.RoutingConfig = &v
}

func (o ClusterDistributedServiceCardSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Admit != nil {
		toSerialize["admit"] = o.Admit
	}
	if o.Controllers != nil {
		toSerialize["controllers"] = o.Controllers
	}
	if o.Dscprofile != nil {
		toSerialize["dscprofile"] = o.Dscprofile
	}
	if o.EnableFwLogging != nil {
		toSerialize["enable-fw-logging"] = o.EnableFwLogging
	}
	if o.EnableSecureBoot != nil {
		toSerialize["enable-secure-boot"] = o.EnableSecureBoot
	}
	if o.FwlogPolicy != nil {
		toSerialize["fwlog-policy"] = o.FwlogPolicy
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IpConfig != nil {
		toSerialize["ip-config"] = o.IpConfig
	}
	if o.MgmtMode != nil {
		toSerialize["mgmt-mode"] = o.MgmtMode
	}
	if o.MgmtVlan != nil {
		toSerialize["mgmt-vlan"] = o.MgmtVlan
	}
	if o.NetworkMode != nil {
		toSerialize["network-mode"] = o.NetworkMode
	}
	if o.Policer != nil {
		toSerialize["policer"] = o.Policer
	}
	if o.RoutingConfig != nil {
		toSerialize["routing-config"] = o.RoutingConfig
	}
	return json.Marshal(toSerialize)
}

type NullableClusterDistributedServiceCardSpec struct {
	value *ClusterDistributedServiceCardSpec
	isSet bool
}

func (v NullableClusterDistributedServiceCardSpec) Get() *ClusterDistributedServiceCardSpec {
	return v.value
}

func (v *NullableClusterDistributedServiceCardSpec) Set(val *ClusterDistributedServiceCardSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterDistributedServiceCardSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterDistributedServiceCardSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterDistributedServiceCardSpec(val *ClusterDistributedServiceCardSpec) *NullableClusterDistributedServiceCardSpec {
	return &NullableClusterDistributedServiceCardSpec{value: val, isSet: true}
}

func (v NullableClusterDistributedServiceCardSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterDistributedServiceCardSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


