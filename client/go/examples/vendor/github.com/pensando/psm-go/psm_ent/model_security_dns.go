/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecurityDns DNS ALG configuration.
type SecurityDns struct {
	// Drop if domain name size is > 255 bytes.
	DropLargeDomainNamePackets *bool `json:"drop-large-domain-name-packets,omitempty"`
	// Drop if label length is 64 bytes or higher.
	DropLongLabelPackets *bool `json:"drop-long-label-packets,omitempty"`
	// Drop packet if number of questions is more than one.
	DropMultiQuestionPackets *bool `json:"drop-multi-question-packets,omitempty"`
	// Maximum message length, default value is 512, maximum specified user value is 8129.
	MaxMessageLength *int64 `json:"max-message-length,omitempty"`
	// Timeout for DNS Query, default 60s. Should be a valid time duration.
	QueryResponseTimeout *string `json:"query-response-timeout,omitempty"`
}

// NewSecurityDns instantiates a new SecurityDns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityDns() *SecurityDns {
	this := SecurityDns{}
	var queryResponseTimeout string = "60s"
	this.QueryResponseTimeout = &queryResponseTimeout
	return &this
}

// NewSecurityDnsWithDefaults instantiates a new SecurityDns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityDnsWithDefaults() *SecurityDns {
	this := SecurityDns{}
	var queryResponseTimeout string = "60s"
	this.QueryResponseTimeout = &queryResponseTimeout
	return &this
}

// GetDropLargeDomainNamePackets returns the DropLargeDomainNamePackets field value if set, zero value otherwise.
func (o *SecurityDns) GetDropLargeDomainNamePackets() bool {
	if o == nil || o.DropLargeDomainNamePackets == nil {
		var ret bool
		return ret
	}
	return *o.DropLargeDomainNamePackets
}

// GetDropLargeDomainNamePacketsOk returns a tuple with the DropLargeDomainNamePackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityDns) GetDropLargeDomainNamePacketsOk() (*bool, bool) {
	if o == nil || o.DropLargeDomainNamePackets == nil {
		return nil, false
	}
	return o.DropLargeDomainNamePackets, true
}

// HasDropLargeDomainNamePackets returns a boolean if a field has been set.
func (o *SecurityDns) HasDropLargeDomainNamePackets() bool {
	if o != nil && o.DropLargeDomainNamePackets != nil {
		return true
	}

	return false
}

// SetDropLargeDomainNamePackets gets a reference to the given bool and assigns it to the DropLargeDomainNamePackets field.
func (o *SecurityDns) SetDropLargeDomainNamePackets(v bool) {
	o.DropLargeDomainNamePackets = &v
}

// GetDropLongLabelPackets returns the DropLongLabelPackets field value if set, zero value otherwise.
func (o *SecurityDns) GetDropLongLabelPackets() bool {
	if o == nil || o.DropLongLabelPackets == nil {
		var ret bool
		return ret
	}
	return *o.DropLongLabelPackets
}

// GetDropLongLabelPacketsOk returns a tuple with the DropLongLabelPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityDns) GetDropLongLabelPacketsOk() (*bool, bool) {
	if o == nil || o.DropLongLabelPackets == nil {
		return nil, false
	}
	return o.DropLongLabelPackets, true
}

// HasDropLongLabelPackets returns a boolean if a field has been set.
func (o *SecurityDns) HasDropLongLabelPackets() bool {
	if o != nil && o.DropLongLabelPackets != nil {
		return true
	}

	return false
}

// SetDropLongLabelPackets gets a reference to the given bool and assigns it to the DropLongLabelPackets field.
func (o *SecurityDns) SetDropLongLabelPackets(v bool) {
	o.DropLongLabelPackets = &v
}

// GetDropMultiQuestionPackets returns the DropMultiQuestionPackets field value if set, zero value otherwise.
func (o *SecurityDns) GetDropMultiQuestionPackets() bool {
	if o == nil || o.DropMultiQuestionPackets == nil {
		var ret bool
		return ret
	}
	return *o.DropMultiQuestionPackets
}

// GetDropMultiQuestionPacketsOk returns a tuple with the DropMultiQuestionPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityDns) GetDropMultiQuestionPacketsOk() (*bool, bool) {
	if o == nil || o.DropMultiQuestionPackets == nil {
		return nil, false
	}
	return o.DropMultiQuestionPackets, true
}

// HasDropMultiQuestionPackets returns a boolean if a field has been set.
func (o *SecurityDns) HasDropMultiQuestionPackets() bool {
	if o != nil && o.DropMultiQuestionPackets != nil {
		return true
	}

	return false
}

// SetDropMultiQuestionPackets gets a reference to the given bool and assigns it to the DropMultiQuestionPackets field.
func (o *SecurityDns) SetDropMultiQuestionPackets(v bool) {
	o.DropMultiQuestionPackets = &v
}

// GetMaxMessageLength returns the MaxMessageLength field value if set, zero value otherwise.
func (o *SecurityDns) GetMaxMessageLength() int64 {
	if o == nil || o.MaxMessageLength == nil {
		var ret int64
		return ret
	}
	return *o.MaxMessageLength
}

// GetMaxMessageLengthOk returns a tuple with the MaxMessageLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityDns) GetMaxMessageLengthOk() (*int64, bool) {
	if o == nil || o.MaxMessageLength == nil {
		return nil, false
	}
	return o.MaxMessageLength, true
}

// HasMaxMessageLength returns a boolean if a field has been set.
func (o *SecurityDns) HasMaxMessageLength() bool {
	if o != nil && o.MaxMessageLength != nil {
		return true
	}

	return false
}

// SetMaxMessageLength gets a reference to the given int64 and assigns it to the MaxMessageLength field.
func (o *SecurityDns) SetMaxMessageLength(v int64) {
	o.MaxMessageLength = &v
}

// GetQueryResponseTimeout returns the QueryResponseTimeout field value if set, zero value otherwise.
func (o *SecurityDns) GetQueryResponseTimeout() string {
	if o == nil || o.QueryResponseTimeout == nil {
		var ret string
		return ret
	}
	return *o.QueryResponseTimeout
}

// GetQueryResponseTimeoutOk returns a tuple with the QueryResponseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityDns) GetQueryResponseTimeoutOk() (*string, bool) {
	if o == nil || o.QueryResponseTimeout == nil {
		return nil, false
	}
	return o.QueryResponseTimeout, true
}

// HasQueryResponseTimeout returns a boolean if a field has been set.
func (o *SecurityDns) HasQueryResponseTimeout() bool {
	if o != nil && o.QueryResponseTimeout != nil {
		return true
	}

	return false
}

// SetQueryResponseTimeout gets a reference to the given string and assigns it to the QueryResponseTimeout field.
func (o *SecurityDns) SetQueryResponseTimeout(v string) {
	o.QueryResponseTimeout = &v
}

func (o SecurityDns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DropLargeDomainNamePackets != nil {
		toSerialize["drop-large-domain-name-packets"] = o.DropLargeDomainNamePackets
	}
	if o.DropLongLabelPackets != nil {
		toSerialize["drop-long-label-packets"] = o.DropLongLabelPackets
	}
	if o.DropMultiQuestionPackets != nil {
		toSerialize["drop-multi-question-packets"] = o.DropMultiQuestionPackets
	}
	if o.MaxMessageLength != nil {
		toSerialize["max-message-length"] = o.MaxMessageLength
	}
	if o.QueryResponseTimeout != nil {
		toSerialize["query-response-timeout"] = o.QueryResponseTimeout
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityDns struct {
	value *SecurityDns
	isSet bool
}

func (v NullableSecurityDns) Get() *SecurityDns {
	return v.value
}

func (v *NullableSecurityDns) Set(val *SecurityDns) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityDns) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityDns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityDns(val *SecurityDns) *NullableSecurityDns {
	return &NullableSecurityDns{value: val, isSet: true}
}

func (v NullableSecurityDns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityDns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


