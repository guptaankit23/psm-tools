/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkDHCPRelayPolicy struct for NetworkDHCPRelayPolicy
type NetworkDHCPRelayPolicy struct {
	RelayServers *[]NetworkDHCPServer `json:"relay-servers,omitempty"`
}

// NewNetworkDHCPRelayPolicy instantiates a new NetworkDHCPRelayPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDHCPRelayPolicy() *NetworkDHCPRelayPolicy {
	this := NetworkDHCPRelayPolicy{}
	return &this
}

// NewNetworkDHCPRelayPolicyWithDefaults instantiates a new NetworkDHCPRelayPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDHCPRelayPolicyWithDefaults() *NetworkDHCPRelayPolicy {
	this := NetworkDHCPRelayPolicy{}
	return &this
}

// GetRelayServers returns the RelayServers field value if set, zero value otherwise.
func (o *NetworkDHCPRelayPolicy) GetRelayServers() []NetworkDHCPServer {
	if o == nil || o.RelayServers == nil {
		var ret []NetworkDHCPServer
		return ret
	}
	return *o.RelayServers
}

// GetRelayServersOk returns a tuple with the RelayServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDHCPRelayPolicy) GetRelayServersOk() (*[]NetworkDHCPServer, bool) {
	if o == nil || o.RelayServers == nil {
		return nil, false
	}
	return o.RelayServers, true
}

// HasRelayServers returns a boolean if a field has been set.
func (o *NetworkDHCPRelayPolicy) HasRelayServers() bool {
	if o != nil && o.RelayServers != nil {
		return true
	}

	return false
}

// SetRelayServers gets a reference to the given []NetworkDHCPServer and assigns it to the RelayServers field.
func (o *NetworkDHCPRelayPolicy) SetRelayServers(v []NetworkDHCPServer) {
	o.RelayServers = &v
}

func (o NetworkDHCPRelayPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RelayServers != nil {
		toSerialize["relay-servers"] = o.RelayServers
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkDHCPRelayPolicy struct {
	value *NetworkDHCPRelayPolicy
	isSet bool
}

func (v NullableNetworkDHCPRelayPolicy) Get() *NetworkDHCPRelayPolicy {
	return v.value
}

func (v *NullableNetworkDHCPRelayPolicy) Set(val *NetworkDHCPRelayPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDHCPRelayPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDHCPRelayPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDHCPRelayPolicy(val *NetworkDHCPRelayPolicy) *NullableNetworkDHCPRelayPolicy {
	return &NullableNetworkDHCPRelayPolicy{value: val, isSet: true}
}

func (v NullableNetworkDHCPRelayPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDHCPRelayPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


