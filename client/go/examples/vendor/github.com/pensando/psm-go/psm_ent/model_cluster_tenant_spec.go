/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterTenantSpec spec part of tenant object.
type ClusterTenantSpec struct {
	// Tenant admin user.
	AdminUser *string `json:"admin-user,omitempty"`
}

// NewClusterTenantSpec instantiates a new ClusterTenantSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterTenantSpec() *ClusterTenantSpec {
	this := ClusterTenantSpec{}
	return &this
}

// NewClusterTenantSpecWithDefaults instantiates a new ClusterTenantSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterTenantSpecWithDefaults() *ClusterTenantSpec {
	this := ClusterTenantSpec{}
	return &this
}

// GetAdminUser returns the AdminUser field value if set, zero value otherwise.
func (o *ClusterTenantSpec) GetAdminUser() string {
	if o == nil || o.AdminUser == nil {
		var ret string
		return ret
	}
	return *o.AdminUser
}

// GetAdminUserOk returns a tuple with the AdminUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterTenantSpec) GetAdminUserOk() (*string, bool) {
	if o == nil || o.AdminUser == nil {
		return nil, false
	}
	return o.AdminUser, true
}

// HasAdminUser returns a boolean if a field has been set.
func (o *ClusterTenantSpec) HasAdminUser() bool {
	if o != nil && o.AdminUser != nil {
		return true
	}

	return false
}

// SetAdminUser gets a reference to the given string and assigns it to the AdminUser field.
func (o *ClusterTenantSpec) SetAdminUser(v string) {
	o.AdminUser = &v
}

func (o ClusterTenantSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminUser != nil {
		toSerialize["admin-user"] = o.AdminUser
	}
	return json.Marshal(toSerialize)
}

type NullableClusterTenantSpec struct {
	value *ClusterTenantSpec
	isSet bool
}

func (v NullableClusterTenantSpec) Get() *ClusterTenantSpec {
	return v.value
}

func (v *NullableClusterTenantSpec) Set(val *ClusterTenantSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterTenantSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterTenantSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterTenantSpec(val *ClusterTenantSpec) *NullableClusterTenantSpec {
	return &NullableClusterTenantSpec{value: val, isSet: true}
}

func (v NullableClusterTenantSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterTenantSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


