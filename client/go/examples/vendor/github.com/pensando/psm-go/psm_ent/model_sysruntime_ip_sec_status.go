/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeIPSecStatus IPSecStatus captures the IPSec config and status details.
type SysruntimeIPSecStatus struct {
	RuleConfigured *string `json:"rule-configured,omitempty"`
	RuleId *string `json:"rule-id,omitempty"`
	RuleStatus *string `json:"rule-status,omitempty"`
}

// NewSysruntimeIPSecStatus instantiates a new SysruntimeIPSecStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeIPSecStatus() *SysruntimeIPSecStatus {
	this := SysruntimeIPSecStatus{}
	return &this
}

// NewSysruntimeIPSecStatusWithDefaults instantiates a new SysruntimeIPSecStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeIPSecStatusWithDefaults() *SysruntimeIPSecStatus {
	this := SysruntimeIPSecStatus{}
	return &this
}

// GetRuleConfigured returns the RuleConfigured field value if set, zero value otherwise.
func (o *SysruntimeIPSecStatus) GetRuleConfigured() string {
	if o == nil || o.RuleConfigured == nil {
		var ret string
		return ret
	}
	return *o.RuleConfigured
}

// GetRuleConfiguredOk returns a tuple with the RuleConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeIPSecStatus) GetRuleConfiguredOk() (*string, bool) {
	if o == nil || o.RuleConfigured == nil {
		return nil, false
	}
	return o.RuleConfigured, true
}

// HasRuleConfigured returns a boolean if a field has been set.
func (o *SysruntimeIPSecStatus) HasRuleConfigured() bool {
	if o != nil && o.RuleConfigured != nil {
		return true
	}

	return false
}

// SetRuleConfigured gets a reference to the given string and assigns it to the RuleConfigured field.
func (o *SysruntimeIPSecStatus) SetRuleConfigured(v string) {
	o.RuleConfigured = &v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *SysruntimeIPSecStatus) GetRuleId() string {
	if o == nil || o.RuleId == nil {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeIPSecStatus) GetRuleIdOk() (*string, bool) {
	if o == nil || o.RuleId == nil {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *SysruntimeIPSecStatus) HasRuleId() bool {
	if o != nil && o.RuleId != nil {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *SysruntimeIPSecStatus) SetRuleId(v string) {
	o.RuleId = &v
}

// GetRuleStatus returns the RuleStatus field value if set, zero value otherwise.
func (o *SysruntimeIPSecStatus) GetRuleStatus() string {
	if o == nil || o.RuleStatus == nil {
		var ret string
		return ret
	}
	return *o.RuleStatus
}

// GetRuleStatusOk returns a tuple with the RuleStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeIPSecStatus) GetRuleStatusOk() (*string, bool) {
	if o == nil || o.RuleStatus == nil {
		return nil, false
	}
	return o.RuleStatus, true
}

// HasRuleStatus returns a boolean if a field has been set.
func (o *SysruntimeIPSecStatus) HasRuleStatus() bool {
	if o != nil && o.RuleStatus != nil {
		return true
	}

	return false
}

// SetRuleStatus gets a reference to the given string and assigns it to the RuleStatus field.
func (o *SysruntimeIPSecStatus) SetRuleStatus(v string) {
	o.RuleStatus = &v
}

func (o SysruntimeIPSecStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RuleConfigured != nil {
		toSerialize["rule-configured"] = o.RuleConfigured
	}
	if o.RuleId != nil {
		toSerialize["rule-id"] = o.RuleId
	}
	if o.RuleStatus != nil {
		toSerialize["rule-status"] = o.RuleStatus
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeIPSecStatus struct {
	value *SysruntimeIPSecStatus
	isSet bool
}

func (v NullableSysruntimeIPSecStatus) Get() *SysruntimeIPSecStatus {
	return v.value
}

func (v *NullableSysruntimeIPSecStatus) Set(val *SysruntimeIPSecStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeIPSecStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeIPSecStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeIPSecStatus(val *SysruntimeIPSecStatus) *NullableSysruntimeIPSecStatus {
	return &NullableSysruntimeIPSecStatus{value: val, isSet: true}
}

func (v NullableSysruntimeIPSecStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeIPSecStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


