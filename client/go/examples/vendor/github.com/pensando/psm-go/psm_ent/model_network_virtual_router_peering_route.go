/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkVirtualRouterPeeringRoute struct for NetworkVirtualRouterPeeringRoute
type NetworkVirtualRouterPeeringRoute struct {
	// Destination VirtualRouter this prefix is reachable on.
	DestVirtualRouter *string `json:"dest-virtual-router,omitempty"`
	// Should be a valid v4 or v6 CIDR block.
	Ipv4Prefix *string `json:"ipv4-prefix,omitempty"`
}

// NewNetworkVirtualRouterPeeringRoute instantiates a new NetworkVirtualRouterPeeringRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkVirtualRouterPeeringRoute() *NetworkVirtualRouterPeeringRoute {
	this := NetworkVirtualRouterPeeringRoute{}
	return &this
}

// NewNetworkVirtualRouterPeeringRouteWithDefaults instantiates a new NetworkVirtualRouterPeeringRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkVirtualRouterPeeringRouteWithDefaults() *NetworkVirtualRouterPeeringRoute {
	this := NetworkVirtualRouterPeeringRoute{}
	return &this
}

// GetDestVirtualRouter returns the DestVirtualRouter field value if set, zero value otherwise.
func (o *NetworkVirtualRouterPeeringRoute) GetDestVirtualRouter() string {
	if o == nil || o.DestVirtualRouter == nil {
		var ret string
		return ret
	}
	return *o.DestVirtualRouter
}

// GetDestVirtualRouterOk returns a tuple with the DestVirtualRouter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkVirtualRouterPeeringRoute) GetDestVirtualRouterOk() (*string, bool) {
	if o == nil || o.DestVirtualRouter == nil {
		return nil, false
	}
	return o.DestVirtualRouter, true
}

// HasDestVirtualRouter returns a boolean if a field has been set.
func (o *NetworkVirtualRouterPeeringRoute) HasDestVirtualRouter() bool {
	if o != nil && o.DestVirtualRouter != nil {
		return true
	}

	return false
}

// SetDestVirtualRouter gets a reference to the given string and assigns it to the DestVirtualRouter field.
func (o *NetworkVirtualRouterPeeringRoute) SetDestVirtualRouter(v string) {
	o.DestVirtualRouter = &v
}

// GetIpv4Prefix returns the Ipv4Prefix field value if set, zero value otherwise.
func (o *NetworkVirtualRouterPeeringRoute) GetIpv4Prefix() string {
	if o == nil || o.Ipv4Prefix == nil {
		var ret string
		return ret
	}
	return *o.Ipv4Prefix
}

// GetIpv4PrefixOk returns a tuple with the Ipv4Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkVirtualRouterPeeringRoute) GetIpv4PrefixOk() (*string, bool) {
	if o == nil || o.Ipv4Prefix == nil {
		return nil, false
	}
	return o.Ipv4Prefix, true
}

// HasIpv4Prefix returns a boolean if a field has been set.
func (o *NetworkVirtualRouterPeeringRoute) HasIpv4Prefix() bool {
	if o != nil && o.Ipv4Prefix != nil {
		return true
	}

	return false
}

// SetIpv4Prefix gets a reference to the given string and assigns it to the Ipv4Prefix field.
func (o *NetworkVirtualRouterPeeringRoute) SetIpv4Prefix(v string) {
	o.Ipv4Prefix = &v
}

func (o NetworkVirtualRouterPeeringRoute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestVirtualRouter != nil {
		toSerialize["dest-virtual-router"] = o.DestVirtualRouter
	}
	if o.Ipv4Prefix != nil {
		toSerialize["ipv4-prefix"] = o.Ipv4Prefix
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkVirtualRouterPeeringRoute struct {
	value *NetworkVirtualRouterPeeringRoute
	isSet bool
}

func (v NullableNetworkVirtualRouterPeeringRoute) Get() *NetworkVirtualRouterPeeringRoute {
	return v.value
}

func (v *NullableNetworkVirtualRouterPeeringRoute) Set(val *NetworkVirtualRouterPeeringRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkVirtualRouterPeeringRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkVirtualRouterPeeringRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkVirtualRouterPeeringRoute(val *NetworkVirtualRouterPeeringRoute) *NullableNetworkVirtualRouterPeeringRoute {
	return &NullableNetworkVirtualRouterPeeringRoute{value: val, isSet: true}
}

func (v NullableNetworkVirtualRouterPeeringRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkVirtualRouterPeeringRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


