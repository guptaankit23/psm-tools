/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkRDSpec struct for NetworkRDSpec
type NetworkRDSpec struct {
	// Address family where this config applies.
	AddressFamily *string `json:"address-family,omitempty"`
	Rd *NetworkRouteDistinguisher `json:"rd,omitempty"`
	// True indicates the system will generate the RD automatically.
	RdAuto *bool `json:"rd-auto,omitempty"`
	// Route Targets to Export.
	RtExport *[]NetworkRouteDistinguisher `json:"rt-export,omitempty"`
	// Route Targets to Import.
	RtImport *[]NetworkRouteDistinguisher `json:"rt-import,omitempty"`
}

// NewNetworkRDSpec instantiates a new NetworkRDSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRDSpec() *NetworkRDSpec {
	this := NetworkRDSpec{}
	var addressFamily string = "ipv4-unicast"
	this.AddressFamily = &addressFamily
	return &this
}

// NewNetworkRDSpecWithDefaults instantiates a new NetworkRDSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRDSpecWithDefaults() *NetworkRDSpec {
	this := NetworkRDSpec{}
	var addressFamily string = "ipv4-unicast"
	this.AddressFamily = &addressFamily
	return &this
}

// GetAddressFamily returns the AddressFamily field value if set, zero value otherwise.
func (o *NetworkRDSpec) GetAddressFamily() string {
	if o == nil || o.AddressFamily == nil {
		var ret string
		return ret
	}
	return *o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRDSpec) GetAddressFamilyOk() (*string, bool) {
	if o == nil || o.AddressFamily == nil {
		return nil, false
	}
	return o.AddressFamily, true
}

// HasAddressFamily returns a boolean if a field has been set.
func (o *NetworkRDSpec) HasAddressFamily() bool {
	if o != nil && o.AddressFamily != nil {
		return true
	}

	return false
}

// SetAddressFamily gets a reference to the given string and assigns it to the AddressFamily field.
func (o *NetworkRDSpec) SetAddressFamily(v string) {
	o.AddressFamily = &v
}

// GetRd returns the Rd field value if set, zero value otherwise.
func (o *NetworkRDSpec) GetRd() NetworkRouteDistinguisher {
	if o == nil || o.Rd == nil {
		var ret NetworkRouteDistinguisher
		return ret
	}
	return *o.Rd
}

// GetRdOk returns a tuple with the Rd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRDSpec) GetRdOk() (*NetworkRouteDistinguisher, bool) {
	if o == nil || o.Rd == nil {
		return nil, false
	}
	return o.Rd, true
}

// HasRd returns a boolean if a field has been set.
func (o *NetworkRDSpec) HasRd() bool {
	if o != nil && o.Rd != nil {
		return true
	}

	return false
}

// SetRd gets a reference to the given NetworkRouteDistinguisher and assigns it to the Rd field.
func (o *NetworkRDSpec) SetRd(v NetworkRouteDistinguisher) {
	o.Rd = &v
}

// GetRdAuto returns the RdAuto field value if set, zero value otherwise.
func (o *NetworkRDSpec) GetRdAuto() bool {
	if o == nil || o.RdAuto == nil {
		var ret bool
		return ret
	}
	return *o.RdAuto
}

// GetRdAutoOk returns a tuple with the RdAuto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRDSpec) GetRdAutoOk() (*bool, bool) {
	if o == nil || o.RdAuto == nil {
		return nil, false
	}
	return o.RdAuto, true
}

// HasRdAuto returns a boolean if a field has been set.
func (o *NetworkRDSpec) HasRdAuto() bool {
	if o != nil && o.RdAuto != nil {
		return true
	}

	return false
}

// SetRdAuto gets a reference to the given bool and assigns it to the RdAuto field.
func (o *NetworkRDSpec) SetRdAuto(v bool) {
	o.RdAuto = &v
}

// GetRtExport returns the RtExport field value if set, zero value otherwise.
func (o *NetworkRDSpec) GetRtExport() []NetworkRouteDistinguisher {
	if o == nil || o.RtExport == nil {
		var ret []NetworkRouteDistinguisher
		return ret
	}
	return *o.RtExport
}

// GetRtExportOk returns a tuple with the RtExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRDSpec) GetRtExportOk() (*[]NetworkRouteDistinguisher, bool) {
	if o == nil || o.RtExport == nil {
		return nil, false
	}
	return o.RtExport, true
}

// HasRtExport returns a boolean if a field has been set.
func (o *NetworkRDSpec) HasRtExport() bool {
	if o != nil && o.RtExport != nil {
		return true
	}

	return false
}

// SetRtExport gets a reference to the given []NetworkRouteDistinguisher and assigns it to the RtExport field.
func (o *NetworkRDSpec) SetRtExport(v []NetworkRouteDistinguisher) {
	o.RtExport = &v
}

// GetRtImport returns the RtImport field value if set, zero value otherwise.
func (o *NetworkRDSpec) GetRtImport() []NetworkRouteDistinguisher {
	if o == nil || o.RtImport == nil {
		var ret []NetworkRouteDistinguisher
		return ret
	}
	return *o.RtImport
}

// GetRtImportOk returns a tuple with the RtImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRDSpec) GetRtImportOk() (*[]NetworkRouteDistinguisher, bool) {
	if o == nil || o.RtImport == nil {
		return nil, false
	}
	return o.RtImport, true
}

// HasRtImport returns a boolean if a field has been set.
func (o *NetworkRDSpec) HasRtImport() bool {
	if o != nil && o.RtImport != nil {
		return true
	}

	return false
}

// SetRtImport gets a reference to the given []NetworkRouteDistinguisher and assigns it to the RtImport field.
func (o *NetworkRDSpec) SetRtImport(v []NetworkRouteDistinguisher) {
	o.RtImport = &v
}

func (o NetworkRDSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddressFamily != nil {
		toSerialize["address-family"] = o.AddressFamily
	}
	if o.Rd != nil {
		toSerialize["rd"] = o.Rd
	}
	if o.RdAuto != nil {
		toSerialize["rd-auto"] = o.RdAuto
	}
	if o.RtExport != nil {
		toSerialize["rt-export"] = o.RtExport
	}
	if o.RtImport != nil {
		toSerialize["rt-import"] = o.RtImport
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkRDSpec struct {
	value *NetworkRDSpec
	isSet bool
}

func (v NullableNetworkRDSpec) Get() *NetworkRDSpec {
	return v.value
}

func (v *NullableNetworkRDSpec) Set(val *NetworkRDSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRDSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRDSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRDSpec(val *NetworkRDSpec) *NullableNetworkRDSpec {
	return &NullableNetworkRDSpec{value: val, isSet: true}
}

func (v NullableNetworkRDSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRDSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


