/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkLbPolicySpec struct for NetworkLbPolicySpec
type NetworkLbPolicySpec struct {
	// load balancing algorithm.
	Algorithm *string `json:"algorithm,omitempty"`
	HealthCheck *NetworkHealthCheckSpec `json:"health-check,omitempty"`
	// session affinity.
	SessionAffinity *string `json:"session-affinity,omitempty"`
	// load balancing type.
	Type *string `json:"type,omitempty"`
}

// NewNetworkLbPolicySpec instantiates a new NetworkLbPolicySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkLbPolicySpec() *NetworkLbPolicySpec {
	this := NetworkLbPolicySpec{}
	return &this
}

// NewNetworkLbPolicySpecWithDefaults instantiates a new NetworkLbPolicySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkLbPolicySpecWithDefaults() *NetworkLbPolicySpec {
	this := NetworkLbPolicySpec{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *NetworkLbPolicySpec) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLbPolicySpec) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *NetworkLbPolicySpec) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *NetworkLbPolicySpec) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetHealthCheck returns the HealthCheck field value if set, zero value otherwise.
func (o *NetworkLbPolicySpec) GetHealthCheck() NetworkHealthCheckSpec {
	if o == nil || o.HealthCheck == nil {
		var ret NetworkHealthCheckSpec
		return ret
	}
	return *o.HealthCheck
}

// GetHealthCheckOk returns a tuple with the HealthCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLbPolicySpec) GetHealthCheckOk() (*NetworkHealthCheckSpec, bool) {
	if o == nil || o.HealthCheck == nil {
		return nil, false
	}
	return o.HealthCheck, true
}

// HasHealthCheck returns a boolean if a field has been set.
func (o *NetworkLbPolicySpec) HasHealthCheck() bool {
	if o != nil && o.HealthCheck != nil {
		return true
	}

	return false
}

// SetHealthCheck gets a reference to the given NetworkHealthCheckSpec and assigns it to the HealthCheck field.
func (o *NetworkLbPolicySpec) SetHealthCheck(v NetworkHealthCheckSpec) {
	o.HealthCheck = &v
}

// GetSessionAffinity returns the SessionAffinity field value if set, zero value otherwise.
func (o *NetworkLbPolicySpec) GetSessionAffinity() string {
	if o == nil || o.SessionAffinity == nil {
		var ret string
		return ret
	}
	return *o.SessionAffinity
}

// GetSessionAffinityOk returns a tuple with the SessionAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLbPolicySpec) GetSessionAffinityOk() (*string, bool) {
	if o == nil || o.SessionAffinity == nil {
		return nil, false
	}
	return o.SessionAffinity, true
}

// HasSessionAffinity returns a boolean if a field has been set.
func (o *NetworkLbPolicySpec) HasSessionAffinity() bool {
	if o != nil && o.SessionAffinity != nil {
		return true
	}

	return false
}

// SetSessionAffinity gets a reference to the given string and assigns it to the SessionAffinity field.
func (o *NetworkLbPolicySpec) SetSessionAffinity(v string) {
	o.SessionAffinity = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworkLbPolicySpec) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLbPolicySpec) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NetworkLbPolicySpec) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NetworkLbPolicySpec) SetType(v string) {
	o.Type = &v
}

func (o NetworkLbPolicySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.HealthCheck != nil {
		toSerialize["health-check"] = o.HealthCheck
	}
	if o.SessionAffinity != nil {
		toSerialize["session-affinity"] = o.SessionAffinity
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkLbPolicySpec struct {
	value *NetworkLbPolicySpec
	isSet bool
}

func (v NullableNetworkLbPolicySpec) Get() *NetworkLbPolicySpec {
	return v.value
}

func (v *NullableNetworkLbPolicySpec) Set(val *NetworkLbPolicySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkLbPolicySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkLbPolicySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkLbPolicySpec(val *NetworkLbPolicySpec) *NullableNetworkLbPolicySpec {
	return &NullableNetworkLbPolicySpec{value: val, isSet: true}
}

func (v NullableNetworkLbPolicySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkLbPolicySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


