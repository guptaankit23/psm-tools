/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
	"time"
)

// MonitoringTechSupportNodeResult struct for MonitoringTechSupportNodeResult
type MonitoringTechSupportNodeResult struct {
	EndTime *time.Time `json:"end-time,omitempty"`
	Reason *string `json:"reason,omitempty"`
	StartTime *time.Time `json:"start-time,omitempty"`
	Status *string `json:"status,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewMonitoringTechSupportNodeResult instantiates a new MonitoringTechSupportNodeResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringTechSupportNodeResult() *MonitoringTechSupportNodeResult {
	this := MonitoringTechSupportNodeResult{}
	var status string = "scheduled"
	this.Status = &status
	return &this
}

// NewMonitoringTechSupportNodeResultWithDefaults instantiates a new MonitoringTechSupportNodeResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringTechSupportNodeResultWithDefaults() *MonitoringTechSupportNodeResult {
	this := MonitoringTechSupportNodeResult{}
	var status string = "scheduled"
	this.Status = &status
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *MonitoringTechSupportNodeResult) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportNodeResult) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *MonitoringTechSupportNodeResult) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *MonitoringTechSupportNodeResult) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *MonitoringTechSupportNodeResult) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportNodeResult) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *MonitoringTechSupportNodeResult) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *MonitoringTechSupportNodeResult) SetReason(v string) {
	o.Reason = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *MonitoringTechSupportNodeResult) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportNodeResult) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *MonitoringTechSupportNodeResult) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *MonitoringTechSupportNodeResult) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MonitoringTechSupportNodeResult) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportNodeResult) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MonitoringTechSupportNodeResult) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MonitoringTechSupportNodeResult) SetStatus(v string) {
	o.Status = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *MonitoringTechSupportNodeResult) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportNodeResult) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *MonitoringTechSupportNodeResult) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *MonitoringTechSupportNodeResult) SetUri(v string) {
	o.Uri = &v
}

func (o MonitoringTechSupportNodeResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTime != nil {
		toSerialize["end-time"] = o.EndTime
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.StartTime != nil {
		toSerialize["start-time"] = o.StartTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringTechSupportNodeResult struct {
	value *MonitoringTechSupportNodeResult
	isSet bool
}

func (v NullableMonitoringTechSupportNodeResult) Get() *MonitoringTechSupportNodeResult {
	return v.value
}

func (v *NullableMonitoringTechSupportNodeResult) Set(val *MonitoringTechSupportNodeResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringTechSupportNodeResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringTechSupportNodeResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringTechSupportNodeResult(val *MonitoringTechSupportNodeResult) *NullableMonitoringTechSupportNodeResult {
	return &NullableMonitoringTechSupportNodeResult{value: val, isSet: true}
}

func (v NullableMonitoringTechSupportNodeResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringTechSupportNodeResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


