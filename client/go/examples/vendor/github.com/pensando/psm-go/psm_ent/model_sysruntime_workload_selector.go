/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeWorkloadSelector WorkloadSelector selects the source from which IP need to be obtained.
type SysruntimeWorkloadSelector struct {
	// IPv4 address for filter. Should be a valid IPv4 address.
	IpAddress *string `json:"ip-address,omitempty"`
}

// NewSysruntimeWorkloadSelector instantiates a new SysruntimeWorkloadSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeWorkloadSelector() *SysruntimeWorkloadSelector {
	this := SysruntimeWorkloadSelector{}
	return &this
}

// NewSysruntimeWorkloadSelectorWithDefaults instantiates a new SysruntimeWorkloadSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeWorkloadSelectorWithDefaults() *SysruntimeWorkloadSelector {
	this := SysruntimeWorkloadSelector{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *SysruntimeWorkloadSelector) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeWorkloadSelector) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *SysruntimeWorkloadSelector) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *SysruntimeWorkloadSelector) SetIpAddress(v string) {
	o.IpAddress = &v
}

func (o SysruntimeWorkloadSelector) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IpAddress != nil {
		toSerialize["ip-address"] = o.IpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeWorkloadSelector struct {
	value *SysruntimeWorkloadSelector
	isSet bool
}

func (v NullableSysruntimeWorkloadSelector) Get() *SysruntimeWorkloadSelector {
	return v.value
}

func (v *NullableSysruntimeWorkloadSelector) Set(val *SysruntimeWorkloadSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeWorkloadSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeWorkloadSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeWorkloadSelector(val *SysruntimeWorkloadSelector) *NullableSysruntimeWorkloadSelector {
	return &NullableSysruntimeWorkloadSelector{value: val, isSet: true}
}

func (v NullableSysruntimeWorkloadSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeWorkloadSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


