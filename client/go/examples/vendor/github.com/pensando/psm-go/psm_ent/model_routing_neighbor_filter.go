/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// RoutingNeighborFilter struct for RoutingNeighborFilter
type RoutingNeighborFilter struct {
	ApiVersion *string `json:"api-version,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Meta *ApiObjectMeta `json:"meta,omitempty"`
	Neighbor *string `json:"neighbor,omitempty"`
}

// NewRoutingNeighborFilter instantiates a new RoutingNeighborFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingNeighborFilter() *RoutingNeighborFilter {
	this := RoutingNeighborFilter{}
	return &this
}

// NewRoutingNeighborFilterWithDefaults instantiates a new RoutingNeighborFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingNeighborFilterWithDefaults() *RoutingNeighborFilter {
	this := RoutingNeighborFilter{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *RoutingNeighborFilter) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingNeighborFilter) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *RoutingNeighborFilter) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *RoutingNeighborFilter) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *RoutingNeighborFilter) GetInstance() string {
	if o == nil || o.Instance == nil {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingNeighborFilter) GetInstanceOk() (*string, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *RoutingNeighborFilter) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *RoutingNeighborFilter) SetInstance(v string) {
	o.Instance = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *RoutingNeighborFilter) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingNeighborFilter) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *RoutingNeighborFilter) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *RoutingNeighborFilter) SetKind(v string) {
	o.Kind = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *RoutingNeighborFilter) GetMeta() ApiObjectMeta {
	if o == nil || o.Meta == nil {
		var ret ApiObjectMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingNeighborFilter) GetMetaOk() (*ApiObjectMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *RoutingNeighborFilter) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ApiObjectMeta and assigns it to the Meta field.
func (o *RoutingNeighborFilter) SetMeta(v ApiObjectMeta) {
	o.Meta = &v
}

// GetNeighbor returns the Neighbor field value if set, zero value otherwise.
func (o *RoutingNeighborFilter) GetNeighbor() string {
	if o == nil || o.Neighbor == nil {
		var ret string
		return ret
	}
	return *o.Neighbor
}

// GetNeighborOk returns a tuple with the Neighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingNeighborFilter) GetNeighborOk() (*string, bool) {
	if o == nil || o.Neighbor == nil {
		return nil, false
	}
	return o.Neighbor, true
}

// HasNeighbor returns a boolean if a field has been set.
func (o *RoutingNeighborFilter) HasNeighbor() bool {
	if o != nil && o.Neighbor != nil {
		return true
	}

	return false
}

// SetNeighbor gets a reference to the given string and assigns it to the Neighbor field.
func (o *RoutingNeighborFilter) SetNeighbor(v string) {
	o.Neighbor = &v
}

func (o RoutingNeighborFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api-version"] = o.ApiVersion
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Neighbor != nil {
		toSerialize["neighbor"] = o.Neighbor
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingNeighborFilter struct {
	value *RoutingNeighborFilter
	isSet bool
}

func (v NullableRoutingNeighborFilter) Get() *RoutingNeighborFilter {
	return v.value
}

func (v *NullableRoutingNeighborFilter) Set(val *RoutingNeighborFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingNeighborFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingNeighborFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingNeighborFilter(val *RoutingNeighborFilter) *NullableRoutingNeighborFilter {
	return &NullableRoutingNeighborFilter{value: val, isSet: true}
}

func (v NullableRoutingNeighborFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingNeighborFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


