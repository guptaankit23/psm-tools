/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecurityProtoPort struct for SecurityProtoPort
type SecurityProtoPort struct {
	// TCP or UDP port number(s): comma separate port numbers, or dash separate port range.
	Ports *string `json:"ports,omitempty"`
	// protocol is ip (v4/v6) protocol name/number; names can be: tcp, udp, icmp.
	Protocol *string `json:"protocol,omitempty"`
}

// NewSecurityProtoPort instantiates a new SecurityProtoPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityProtoPort() *SecurityProtoPort {
	this := SecurityProtoPort{}
	return &this
}

// NewSecurityProtoPortWithDefaults instantiates a new SecurityProtoPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityProtoPortWithDefaults() *SecurityProtoPort {
	this := SecurityProtoPort{}
	return &this
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *SecurityProtoPort) GetPorts() string {
	if o == nil || o.Ports == nil {
		var ret string
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityProtoPort) GetPortsOk() (*string, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *SecurityProtoPort) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given string and assigns it to the Ports field.
func (o *SecurityProtoPort) SetPorts(v string) {
	o.Ports = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *SecurityProtoPort) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityProtoPort) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *SecurityProtoPort) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *SecurityProtoPort) SetProtocol(v string) {
	o.Protocol = &v
}

func (o SecurityProtoPort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityProtoPort struct {
	value *SecurityProtoPort
	isSet bool
}

func (v NullableSecurityProtoPort) Get() *SecurityProtoPort {
	return v.value
}

func (v *NullableSecurityProtoPort) Set(val *SecurityProtoPort) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityProtoPort) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityProtoPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityProtoPort(val *SecurityProtoPort) *NullableSecurityProtoPort {
	return &NullableSecurityProtoPort{value: val, isSet: true}
}

func (v NullableSecurityProtoPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityProtoPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


