/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
	"time"
)

// MonitoringAuditInfo AuditInfo captures the user performed the action and the time at which the action was performed.
type MonitoringAuditInfo struct {
	// Time at which the action was performed.
	Time *time.Time `json:"time,omitempty"`
	// Name of the user performed some action.
	User *string `json:"user,omitempty"`
}

// NewMonitoringAuditInfo instantiates a new MonitoringAuditInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringAuditInfo() *MonitoringAuditInfo {
	this := MonitoringAuditInfo{}
	return &this
}

// NewMonitoringAuditInfoWithDefaults instantiates a new MonitoringAuditInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringAuditInfoWithDefaults() *MonitoringAuditInfo {
	this := MonitoringAuditInfo{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *MonitoringAuditInfo) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAuditInfo) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *MonitoringAuditInfo) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *MonitoringAuditInfo) SetTime(v time.Time) {
	o.Time = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *MonitoringAuditInfo) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAuditInfo) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *MonitoringAuditInfo) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *MonitoringAuditInfo) SetUser(v string) {
	o.User = &v
}

func (o MonitoringAuditInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringAuditInfo struct {
	value *MonitoringAuditInfo
	isSet bool
}

func (v NullableMonitoringAuditInfo) Get() *MonitoringAuditInfo {
	return v.value
}

func (v *NullableMonitoringAuditInfo) Set(val *MonitoringAuditInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringAuditInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringAuditInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringAuditInfo(val *MonitoringAuditInfo) *NullableMonitoringAuditInfo {
	return &NullableMonitoringAuditInfo{value: val, isSet: true}
}

func (v NullableMonitoringAuditInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringAuditInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


