/*
 * Search API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SearchCategoryPreview CategoryPreview contains map of search summary (#hits) grouped by two levels: first by Category and then by Kind.
type SearchCategoryPreview struct {
	Categories *map[string]SearchKindPreview `json:"categories,omitempty"`
}

// NewSearchCategoryPreview instantiates a new SearchCategoryPreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCategoryPreview() *SearchCategoryPreview {
	this := SearchCategoryPreview{}
	return &this
}

// NewSearchCategoryPreviewWithDefaults instantiates a new SearchCategoryPreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCategoryPreviewWithDefaults() *SearchCategoryPreview {
	this := SearchCategoryPreview{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *SearchCategoryPreview) GetCategories() map[string]SearchKindPreview {
	if o == nil || o.Categories == nil {
		var ret map[string]SearchKindPreview
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCategoryPreview) GetCategoriesOk() (*map[string]SearchKindPreview, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *SearchCategoryPreview) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given map[string]SearchKindPreview and assigns it to the Categories field.
func (o *SearchCategoryPreview) SetCategories(v map[string]SearchKindPreview) {
	o.Categories = &v
}

func (o SearchCategoryPreview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	return json.Marshal(toSerialize)
}

type NullableSearchCategoryPreview struct {
	value *SearchCategoryPreview
	isSet bool
}

func (v NullableSearchCategoryPreview) Get() *SearchCategoryPreview {
	return v.value
}

func (v *NullableSearchCategoryPreview) Set(val *SearchCategoryPreview) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCategoryPreview) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCategoryPreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCategoryPreview(val *SearchCategoryPreview) *NullableSearchCategoryPreview {
	return &NullableSearchCategoryPreview{value: val, isSet: true}
}

func (v NullableSearchCategoryPreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCategoryPreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


