/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// RoutingRouteList struct for RoutingRouteList
type RoutingRouteList struct {
	ApiVersion *string `json:"api-version,omitempty"`
	// The number of items returned in the current response.
	Count *int64 `json:"count,omitempty"`
	// List of items being returned.
	Items *[]RoutingRoute `json:"items,omitempty"`
	Kind *string `json:"kind,omitempty"`
	ListMeta *ApiListMeta `json:"list-meta,omitempty"`
	// The page number of the items being returned.
	PageNumber *int64 `json:"page-number,omitempty"`
	// The total number of items available in the dataplane.
	Total *int64 `json:"total,omitempty"`
}

// NewRoutingRouteList instantiates a new RoutingRouteList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingRouteList() *RoutingRouteList {
	this := RoutingRouteList{}
	return &this
}

// NewRoutingRouteListWithDefaults instantiates a new RoutingRouteList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingRouteListWithDefaults() *RoutingRouteList {
	this := RoutingRouteList{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *RoutingRouteList) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteList) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *RoutingRouteList) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *RoutingRouteList) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *RoutingRouteList) GetCount() int64 {
	if o == nil || o.Count == nil {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteList) GetCountOk() (*int64, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *RoutingRouteList) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *RoutingRouteList) SetCount(v int64) {
	o.Count = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *RoutingRouteList) GetItems() []RoutingRoute {
	if o == nil || o.Items == nil {
		var ret []RoutingRoute
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteList) GetItemsOk() (*[]RoutingRoute, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *RoutingRouteList) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []RoutingRoute and assigns it to the Items field.
func (o *RoutingRouteList) SetItems(v []RoutingRoute) {
	o.Items = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *RoutingRouteList) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteList) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *RoutingRouteList) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *RoutingRouteList) SetKind(v string) {
	o.Kind = &v
}

// GetListMeta returns the ListMeta field value if set, zero value otherwise.
func (o *RoutingRouteList) GetListMeta() ApiListMeta {
	if o == nil || o.ListMeta == nil {
		var ret ApiListMeta
		return ret
	}
	return *o.ListMeta
}

// GetListMetaOk returns a tuple with the ListMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteList) GetListMetaOk() (*ApiListMeta, bool) {
	if o == nil || o.ListMeta == nil {
		return nil, false
	}
	return o.ListMeta, true
}

// HasListMeta returns a boolean if a field has been set.
func (o *RoutingRouteList) HasListMeta() bool {
	if o != nil && o.ListMeta != nil {
		return true
	}

	return false
}

// SetListMeta gets a reference to the given ApiListMeta and assigns it to the ListMeta field.
func (o *RoutingRouteList) SetListMeta(v ApiListMeta) {
	o.ListMeta = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *RoutingRouteList) GetPageNumber() int64 {
	if o == nil || o.PageNumber == nil {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteList) GetPageNumberOk() (*int64, bool) {
	if o == nil || o.PageNumber == nil {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *RoutingRouteList) HasPageNumber() bool {
	if o != nil && o.PageNumber != nil {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *RoutingRouteList) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *RoutingRouteList) GetTotal() int64 {
	if o == nil || o.Total == nil {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteList) GetTotalOk() (*int64, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *RoutingRouteList) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *RoutingRouteList) SetTotal(v int64) {
	o.Total = &v
}

func (o RoutingRouteList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api-version"] = o.ApiVersion
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.ListMeta != nil {
		toSerialize["list-meta"] = o.ListMeta
	}
	if o.PageNumber != nil {
		toSerialize["page-number"] = o.PageNumber
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingRouteList struct {
	value *RoutingRouteList
	isSet bool
}

func (v NullableRoutingRouteList) Get() *RoutingRouteList {
	return v.value
}

func (v *NullableRoutingRouteList) Set(val *RoutingRouteList) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingRouteList) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingRouteList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingRouteList(val *RoutingRouteList) *NullableRoutingRouteList {
	return &NullableRoutingRouteList{value: val, isSet: true}
}

func (v NullableRoutingRouteList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingRouteList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


