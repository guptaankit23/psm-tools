/*
 * Auth API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// AuthAuthenticationPolicySpec spec part of authentication policy object.
type AuthAuthenticationPolicySpec struct {
	Authenticators *AuthAuthenticators `json:"authenticators,omitempty"`
	// Secret used to sign JWT token.
	Secret *string `json:"secret,omitempty"`
	// TokenExpiry is time duration after which JWT token expires. Default is 6 days. A duration string is a sequence of decimal number and a unit suffix, such as \"300ms\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\". Should be a valid time duration.
	TokenExpiry *string `json:"token-expiry,omitempty"`
}

// NewAuthAuthenticationPolicySpec instantiates a new AuthAuthenticationPolicySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthAuthenticationPolicySpec() *AuthAuthenticationPolicySpec {
	this := AuthAuthenticationPolicySpec{}
	var tokenExpiry string = "144h"
	this.TokenExpiry = &tokenExpiry
	return &this
}

// NewAuthAuthenticationPolicySpecWithDefaults instantiates a new AuthAuthenticationPolicySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthAuthenticationPolicySpecWithDefaults() *AuthAuthenticationPolicySpec {
	this := AuthAuthenticationPolicySpec{}
	var tokenExpiry string = "144h"
	this.TokenExpiry = &tokenExpiry
	return &this
}

// GetAuthenticators returns the Authenticators field value if set, zero value otherwise.
func (o *AuthAuthenticationPolicySpec) GetAuthenticators() AuthAuthenticators {
	if o == nil || o.Authenticators == nil {
		var ret AuthAuthenticators
		return ret
	}
	return *o.Authenticators
}

// GetAuthenticatorsOk returns a tuple with the Authenticators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthenticationPolicySpec) GetAuthenticatorsOk() (*AuthAuthenticators, bool) {
	if o == nil || o.Authenticators == nil {
		return nil, false
	}
	return o.Authenticators, true
}

// HasAuthenticators returns a boolean if a field has been set.
func (o *AuthAuthenticationPolicySpec) HasAuthenticators() bool {
	if o != nil && o.Authenticators != nil {
		return true
	}

	return false
}

// SetAuthenticators gets a reference to the given AuthAuthenticators and assigns it to the Authenticators field.
func (o *AuthAuthenticationPolicySpec) SetAuthenticators(v AuthAuthenticators) {
	o.Authenticators = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *AuthAuthenticationPolicySpec) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthenticationPolicySpec) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *AuthAuthenticationPolicySpec) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *AuthAuthenticationPolicySpec) SetSecret(v string) {
	o.Secret = &v
}

// GetTokenExpiry returns the TokenExpiry field value if set, zero value otherwise.
func (o *AuthAuthenticationPolicySpec) GetTokenExpiry() string {
	if o == nil || o.TokenExpiry == nil {
		var ret string
		return ret
	}
	return *o.TokenExpiry
}

// GetTokenExpiryOk returns a tuple with the TokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthenticationPolicySpec) GetTokenExpiryOk() (*string, bool) {
	if o == nil || o.TokenExpiry == nil {
		return nil, false
	}
	return o.TokenExpiry, true
}

// HasTokenExpiry returns a boolean if a field has been set.
func (o *AuthAuthenticationPolicySpec) HasTokenExpiry() bool {
	if o != nil && o.TokenExpiry != nil {
		return true
	}

	return false
}

// SetTokenExpiry gets a reference to the given string and assigns it to the TokenExpiry field.
func (o *AuthAuthenticationPolicySpec) SetTokenExpiry(v string) {
	o.TokenExpiry = &v
}

func (o AuthAuthenticationPolicySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Authenticators != nil {
		toSerialize["authenticators"] = o.Authenticators
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.TokenExpiry != nil {
		toSerialize["token-expiry"] = o.TokenExpiry
	}
	return json.Marshal(toSerialize)
}

type NullableAuthAuthenticationPolicySpec struct {
	value *AuthAuthenticationPolicySpec
	isSet bool
}

func (v NullableAuthAuthenticationPolicySpec) Get() *AuthAuthenticationPolicySpec {
	return v.value
}

func (v *NullableAuthAuthenticationPolicySpec) Set(val *AuthAuthenticationPolicySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthAuthenticationPolicySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthAuthenticationPolicySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthAuthenticationPolicySpec(val *AuthAuthenticationPolicySpec) *NullableAuthAuthenticationPolicySpec {
	return &NullableAuthAuthenticationPolicySpec{value: val, isSet: true}
}

func (v NullableAuthAuthenticationPolicySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthAuthenticationPolicySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


