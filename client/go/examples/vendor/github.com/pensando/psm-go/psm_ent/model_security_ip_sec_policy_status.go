/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecurityIPSecPolicyStatus struct for SecurityIPSecPolicyStatus
type SecurityIPSecPolicyStatus struct {
	// Encryption and Algorithm details used for encrypting data traffic (ESP).
	EspParams *string `json:"esp-params,omitempty"`
	// Encryption and Algorithm details used for IKEv2 key exchange.
	IkeParams *string `json:"ike-params,omitempty"`
	PropagationStatus *SecurityPropagationStatus `json:"propagation-status,omitempty"`
	RuleStatus *[]SecurityIPSecRuleStatus `json:"rule-status,omitempty"`
}

// NewSecurityIPSecPolicyStatus instantiates a new SecurityIPSecPolicyStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityIPSecPolicyStatus() *SecurityIPSecPolicyStatus {
	this := SecurityIPSecPolicyStatus{}
	return &this
}

// NewSecurityIPSecPolicyStatusWithDefaults instantiates a new SecurityIPSecPolicyStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityIPSecPolicyStatusWithDefaults() *SecurityIPSecPolicyStatus {
	this := SecurityIPSecPolicyStatus{}
	return &this
}

// GetEspParams returns the EspParams field value if set, zero value otherwise.
func (o *SecurityIPSecPolicyStatus) GetEspParams() string {
	if o == nil || o.EspParams == nil {
		var ret string
		return ret
	}
	return *o.EspParams
}

// GetEspParamsOk returns a tuple with the EspParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityIPSecPolicyStatus) GetEspParamsOk() (*string, bool) {
	if o == nil || o.EspParams == nil {
		return nil, false
	}
	return o.EspParams, true
}

// HasEspParams returns a boolean if a field has been set.
func (o *SecurityIPSecPolicyStatus) HasEspParams() bool {
	if o != nil && o.EspParams != nil {
		return true
	}

	return false
}

// SetEspParams gets a reference to the given string and assigns it to the EspParams field.
func (o *SecurityIPSecPolicyStatus) SetEspParams(v string) {
	o.EspParams = &v
}

// GetIkeParams returns the IkeParams field value if set, zero value otherwise.
func (o *SecurityIPSecPolicyStatus) GetIkeParams() string {
	if o == nil || o.IkeParams == nil {
		var ret string
		return ret
	}
	return *o.IkeParams
}

// GetIkeParamsOk returns a tuple with the IkeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityIPSecPolicyStatus) GetIkeParamsOk() (*string, bool) {
	if o == nil || o.IkeParams == nil {
		return nil, false
	}
	return o.IkeParams, true
}

// HasIkeParams returns a boolean if a field has been set.
func (o *SecurityIPSecPolicyStatus) HasIkeParams() bool {
	if o != nil && o.IkeParams != nil {
		return true
	}

	return false
}

// SetIkeParams gets a reference to the given string and assigns it to the IkeParams field.
func (o *SecurityIPSecPolicyStatus) SetIkeParams(v string) {
	o.IkeParams = &v
}

// GetPropagationStatus returns the PropagationStatus field value if set, zero value otherwise.
func (o *SecurityIPSecPolicyStatus) GetPropagationStatus() SecurityPropagationStatus {
	if o == nil || o.PropagationStatus == nil {
		var ret SecurityPropagationStatus
		return ret
	}
	return *o.PropagationStatus
}

// GetPropagationStatusOk returns a tuple with the PropagationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityIPSecPolicyStatus) GetPropagationStatusOk() (*SecurityPropagationStatus, bool) {
	if o == nil || o.PropagationStatus == nil {
		return nil, false
	}
	return o.PropagationStatus, true
}

// HasPropagationStatus returns a boolean if a field has been set.
func (o *SecurityIPSecPolicyStatus) HasPropagationStatus() bool {
	if o != nil && o.PropagationStatus != nil {
		return true
	}

	return false
}

// SetPropagationStatus gets a reference to the given SecurityPropagationStatus and assigns it to the PropagationStatus field.
func (o *SecurityIPSecPolicyStatus) SetPropagationStatus(v SecurityPropagationStatus) {
	o.PropagationStatus = &v
}

// GetRuleStatus returns the RuleStatus field value if set, zero value otherwise.
func (o *SecurityIPSecPolicyStatus) GetRuleStatus() []SecurityIPSecRuleStatus {
	if o == nil || o.RuleStatus == nil {
		var ret []SecurityIPSecRuleStatus
		return ret
	}
	return *o.RuleStatus
}

// GetRuleStatusOk returns a tuple with the RuleStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityIPSecPolicyStatus) GetRuleStatusOk() (*[]SecurityIPSecRuleStatus, bool) {
	if o == nil || o.RuleStatus == nil {
		return nil, false
	}
	return o.RuleStatus, true
}

// HasRuleStatus returns a boolean if a field has been set.
func (o *SecurityIPSecPolicyStatus) HasRuleStatus() bool {
	if o != nil && o.RuleStatus != nil {
		return true
	}

	return false
}

// SetRuleStatus gets a reference to the given []SecurityIPSecRuleStatus and assigns it to the RuleStatus field.
func (o *SecurityIPSecPolicyStatus) SetRuleStatus(v []SecurityIPSecRuleStatus) {
	o.RuleStatus = &v
}

func (o SecurityIPSecPolicyStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EspParams != nil {
		toSerialize["esp-params"] = o.EspParams
	}
	if o.IkeParams != nil {
		toSerialize["ike-params"] = o.IkeParams
	}
	if o.PropagationStatus != nil {
		toSerialize["propagation-status"] = o.PropagationStatus
	}
	if o.RuleStatus != nil {
		toSerialize["rule-status"] = o.RuleStatus
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityIPSecPolicyStatus struct {
	value *SecurityIPSecPolicyStatus
	isSet bool
}

func (v NullableSecurityIPSecPolicyStatus) Get() *SecurityIPSecPolicyStatus {
	return v.value
}

func (v *NullableSecurityIPSecPolicyStatus) Set(val *SecurityIPSecPolicyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityIPSecPolicyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityIPSecPolicyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityIPSecPolicyStatus(val *SecurityIPSecPolicyStatus) *NullableSecurityIPSecPolicyStatus {
	return &NullableSecurityIPSecPolicyStatus{value: val, isSet: true}
}

func (v NullableSecurityIPSecPolicyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityIPSecPolicyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


