/*
 * Auth API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// AuthPermission Permission defines if actions are allowed on resource group, resource type, resource name or arbitrary API endpoints.
type AuthPermission struct {
	// Actions are actions on a resource that a permission allows.
	Actions *[]string `json:"actions,omitempty"`
	// ResourceGroup is grouping of resource types for which a permission is defined. It is empty for Search, Event, MetricsQuery and non-api server endpoint. Specifying \"_All_\" will match all api groups including empty group for non-api server endpoints like those defined in ResrcKind enum.
	ResourceGroup *string `json:"resource-group,omitempty"`
	// ResourceKind is a resource kind for which permission is defined. It can be an API Server object kind or kinds defined in ResrcKind enum. Specifying \"_All_\" will match all resource kinds.
	ResourceKind *string `json:"resource-kind,omitempty"`
	// ResourceNames identify specific objects on which this permission applies. If resource name is not specified in permission then it implies all resources of the specified kind.
	ResourceNames *[]string `json:"resource-names,omitempty"`
	// ResourceNamespace is a namespace to which a resource (API Server object) belongs. Default value is \"_All_\" which matches all namespaces.
	ResourceNamespace *string `json:"resource-namespace,omitempty"`
	// ResourceTenant is the tenant to which resource belongs. It will be automatically set to the tenant to which role object belongs. Exception are roles in \"default\" tenant. Role in \"default\" tenant can include permissions for resources in other tenants. Specifying \"_All_\" will match all tenants.
	ResourceTenant *string `json:"resource-tenant,omitempty"`
}

// NewAuthPermission instantiates a new AuthPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthPermission() *AuthPermission {
	this := AuthPermission{}
	var resourceNamespace string = "_All_"
	this.ResourceNamespace = &resourceNamespace
	return &this
}

// NewAuthPermissionWithDefaults instantiates a new AuthPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthPermissionWithDefaults() *AuthPermission {
	this := AuthPermission{}
	var resourceNamespace string = "_All_"
	this.ResourceNamespace = &resourceNamespace
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *AuthPermission) GetActions() []string {
	if o == nil || o.Actions == nil {
		var ret []string
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthPermission) GetActionsOk() (*[]string, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *AuthPermission) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *AuthPermission) SetActions(v []string) {
	o.Actions = &v
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *AuthPermission) GetResourceGroup() string {
	if o == nil || o.ResourceGroup == nil {
		var ret string
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthPermission) GetResourceGroupOk() (*string, bool) {
	if o == nil || o.ResourceGroup == nil {
		return nil, false
	}
	return o.ResourceGroup, true
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *AuthPermission) HasResourceGroup() bool {
	if o != nil && o.ResourceGroup != nil {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given string and assigns it to the ResourceGroup field.
func (o *AuthPermission) SetResourceGroup(v string) {
	o.ResourceGroup = &v
}

// GetResourceKind returns the ResourceKind field value if set, zero value otherwise.
func (o *AuthPermission) GetResourceKind() string {
	if o == nil || o.ResourceKind == nil {
		var ret string
		return ret
	}
	return *o.ResourceKind
}

// GetResourceKindOk returns a tuple with the ResourceKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthPermission) GetResourceKindOk() (*string, bool) {
	if o == nil || o.ResourceKind == nil {
		return nil, false
	}
	return o.ResourceKind, true
}

// HasResourceKind returns a boolean if a field has been set.
func (o *AuthPermission) HasResourceKind() bool {
	if o != nil && o.ResourceKind != nil {
		return true
	}

	return false
}

// SetResourceKind gets a reference to the given string and assigns it to the ResourceKind field.
func (o *AuthPermission) SetResourceKind(v string) {
	o.ResourceKind = &v
}

// GetResourceNames returns the ResourceNames field value if set, zero value otherwise.
func (o *AuthPermission) GetResourceNames() []string {
	if o == nil || o.ResourceNames == nil {
		var ret []string
		return ret
	}
	return *o.ResourceNames
}

// GetResourceNamesOk returns a tuple with the ResourceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthPermission) GetResourceNamesOk() (*[]string, bool) {
	if o == nil || o.ResourceNames == nil {
		return nil, false
	}
	return o.ResourceNames, true
}

// HasResourceNames returns a boolean if a field has been set.
func (o *AuthPermission) HasResourceNames() bool {
	if o != nil && o.ResourceNames != nil {
		return true
	}

	return false
}

// SetResourceNames gets a reference to the given []string and assigns it to the ResourceNames field.
func (o *AuthPermission) SetResourceNames(v []string) {
	o.ResourceNames = &v
}

// GetResourceNamespace returns the ResourceNamespace field value if set, zero value otherwise.
func (o *AuthPermission) GetResourceNamespace() string {
	if o == nil || o.ResourceNamespace == nil {
		var ret string
		return ret
	}
	return *o.ResourceNamespace
}

// GetResourceNamespaceOk returns a tuple with the ResourceNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthPermission) GetResourceNamespaceOk() (*string, bool) {
	if o == nil || o.ResourceNamespace == nil {
		return nil, false
	}
	return o.ResourceNamespace, true
}

// HasResourceNamespace returns a boolean if a field has been set.
func (o *AuthPermission) HasResourceNamespace() bool {
	if o != nil && o.ResourceNamespace != nil {
		return true
	}

	return false
}

// SetResourceNamespace gets a reference to the given string and assigns it to the ResourceNamespace field.
func (o *AuthPermission) SetResourceNamespace(v string) {
	o.ResourceNamespace = &v
}

// GetResourceTenant returns the ResourceTenant field value if set, zero value otherwise.
func (o *AuthPermission) GetResourceTenant() string {
	if o == nil || o.ResourceTenant == nil {
		var ret string
		return ret
	}
	return *o.ResourceTenant
}

// GetResourceTenantOk returns a tuple with the ResourceTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthPermission) GetResourceTenantOk() (*string, bool) {
	if o == nil || o.ResourceTenant == nil {
		return nil, false
	}
	return o.ResourceTenant, true
}

// HasResourceTenant returns a boolean if a field has been set.
func (o *AuthPermission) HasResourceTenant() bool {
	if o != nil && o.ResourceTenant != nil {
		return true
	}

	return false
}

// SetResourceTenant gets a reference to the given string and assigns it to the ResourceTenant field.
func (o *AuthPermission) SetResourceTenant(v string) {
	o.ResourceTenant = &v
}

func (o AuthPermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.ResourceGroup != nil {
		toSerialize["resource-group"] = o.ResourceGroup
	}
	if o.ResourceKind != nil {
		toSerialize["resource-kind"] = o.ResourceKind
	}
	if o.ResourceNames != nil {
		toSerialize["resource-names"] = o.ResourceNames
	}
	if o.ResourceNamespace != nil {
		toSerialize["resource-namespace"] = o.ResourceNamespace
	}
	if o.ResourceTenant != nil {
		toSerialize["resource-tenant"] = o.ResourceTenant
	}
	return json.Marshal(toSerialize)
}

type NullableAuthPermission struct {
	value *AuthPermission
	isSet bool
}

func (v NullableAuthPermission) Get() *AuthPermission {
	return v.value
}

func (v *NullableAuthPermission) Set(val *AuthPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthPermission(val *AuthPermission) *NullableAuthPermission {
	return &NullableAuthPermission{value: val, isSet: true}
}

func (v NullableAuthPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


