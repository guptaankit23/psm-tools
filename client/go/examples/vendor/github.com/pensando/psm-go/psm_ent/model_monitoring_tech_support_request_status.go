/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringTechSupportRequestStatus struct for MonitoringTechSupportRequestStatus
type MonitoringTechSupportRequestStatus struct {
	CtrlrNodeResults *map[string]MonitoringTechSupportNodeResult `json:"ctrlr-node-results,omitempty"`
	DscResults *map[string]MonitoringTechSupportNodeResult `json:"dsc-results,omitempty"`
	InstanceId *string `json:"instance-id,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewMonitoringTechSupportRequestStatus instantiates a new MonitoringTechSupportRequestStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringTechSupportRequestStatus() *MonitoringTechSupportRequestStatus {
	this := MonitoringTechSupportRequestStatus{}
	var status string = "scheduled"
	this.Status = &status
	return &this
}

// NewMonitoringTechSupportRequestStatusWithDefaults instantiates a new MonitoringTechSupportRequestStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringTechSupportRequestStatusWithDefaults() *MonitoringTechSupportRequestStatus {
	this := MonitoringTechSupportRequestStatus{}
	var status string = "scheduled"
	this.Status = &status
	return &this
}

// GetCtrlrNodeResults returns the CtrlrNodeResults field value if set, zero value otherwise.
func (o *MonitoringTechSupportRequestStatus) GetCtrlrNodeResults() map[string]MonitoringTechSupportNodeResult {
	if o == nil || o.CtrlrNodeResults == nil {
		var ret map[string]MonitoringTechSupportNodeResult
		return ret
	}
	return *o.CtrlrNodeResults
}

// GetCtrlrNodeResultsOk returns a tuple with the CtrlrNodeResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportRequestStatus) GetCtrlrNodeResultsOk() (*map[string]MonitoringTechSupportNodeResult, bool) {
	if o == nil || o.CtrlrNodeResults == nil {
		return nil, false
	}
	return o.CtrlrNodeResults, true
}

// HasCtrlrNodeResults returns a boolean if a field has been set.
func (o *MonitoringTechSupportRequestStatus) HasCtrlrNodeResults() bool {
	if o != nil && o.CtrlrNodeResults != nil {
		return true
	}

	return false
}

// SetCtrlrNodeResults gets a reference to the given map[string]MonitoringTechSupportNodeResult and assigns it to the CtrlrNodeResults field.
func (o *MonitoringTechSupportRequestStatus) SetCtrlrNodeResults(v map[string]MonitoringTechSupportNodeResult) {
	o.CtrlrNodeResults = &v
}

// GetDscResults returns the DscResults field value if set, zero value otherwise.
func (o *MonitoringTechSupportRequestStatus) GetDscResults() map[string]MonitoringTechSupportNodeResult {
	if o == nil || o.DscResults == nil {
		var ret map[string]MonitoringTechSupportNodeResult
		return ret
	}
	return *o.DscResults
}

// GetDscResultsOk returns a tuple with the DscResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportRequestStatus) GetDscResultsOk() (*map[string]MonitoringTechSupportNodeResult, bool) {
	if o == nil || o.DscResults == nil {
		return nil, false
	}
	return o.DscResults, true
}

// HasDscResults returns a boolean if a field has been set.
func (o *MonitoringTechSupportRequestStatus) HasDscResults() bool {
	if o != nil && o.DscResults != nil {
		return true
	}

	return false
}

// SetDscResults gets a reference to the given map[string]MonitoringTechSupportNodeResult and assigns it to the DscResults field.
func (o *MonitoringTechSupportRequestStatus) SetDscResults(v map[string]MonitoringTechSupportNodeResult) {
	o.DscResults = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *MonitoringTechSupportRequestStatus) GetInstanceId() string {
	if o == nil || o.InstanceId == nil {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportRequestStatus) GetInstanceIdOk() (*string, bool) {
	if o == nil || o.InstanceId == nil {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *MonitoringTechSupportRequestStatus) HasInstanceId() bool {
	if o != nil && o.InstanceId != nil {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *MonitoringTechSupportRequestStatus) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *MonitoringTechSupportRequestStatus) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportRequestStatus) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *MonitoringTechSupportRequestStatus) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *MonitoringTechSupportRequestStatus) SetReason(v string) {
	o.Reason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MonitoringTechSupportRequestStatus) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTechSupportRequestStatus) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MonitoringTechSupportRequestStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MonitoringTechSupportRequestStatus) SetStatus(v string) {
	o.Status = &v
}

func (o MonitoringTechSupportRequestStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CtrlrNodeResults != nil {
		toSerialize["ctrlr-node-results"] = o.CtrlrNodeResults
	}
	if o.DscResults != nil {
		toSerialize["dsc-results"] = o.DscResults
	}
	if o.InstanceId != nil {
		toSerialize["instance-id"] = o.InstanceId
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringTechSupportRequestStatus struct {
	value *MonitoringTechSupportRequestStatus
	isSet bool
}

func (v NullableMonitoringTechSupportRequestStatus) Get() *MonitoringTechSupportRequestStatus {
	return v.value
}

func (v *NullableMonitoringTechSupportRequestStatus) Set(val *MonitoringTechSupportRequestStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringTechSupportRequestStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringTechSupportRequestStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringTechSupportRequestStatus(val *MonitoringTechSupportRequestStatus) *NullableMonitoringTechSupportRequestStatus {
	return &NullableMonitoringTechSupportRequestStatus{value: val, isSet: true}
}

func (v NullableMonitoringTechSupportRequestStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringTechSupportRequestStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


