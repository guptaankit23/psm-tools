/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkBGPConfig struct for NetworkBGPConfig
type NetworkBGPConfig struct {
	AsNumber *ApiBgpAsn `json:"as-number,omitempty"`
	// DSCAutoConfig sets the flag that this config is to be used as a template for auto configuration.
	DscAutoConfig *bool `json:"dsc-auto-config,omitempty"`
	// Holdtime is time for which not receiving a keepalive message results in declaring the peer as dead. Value should be between 0 and 3600.
	Holdtime *int64 `json:"holdtime,omitempty"`
	// KeepaliveInterval is time interval at which keepalive messages are sent. Value should be between 0 and 3600.
	KeepaliveInterval *int64 `json:"keepalive-interval,omitempty"`
	// List of all neighbors.
	Neighbors *[]NetworkBGPNeighbor `json:"neighbors,omitempty"`
	// Router ID for the BGP Instance. Should be a valid v4 or v6 IP address.
	RouterId *string `json:"router-id,omitempty"`
	// SuppressDefaultResolution excludes default route from being used to resolve nexthop reachability in the underlay. WARNING: modifying this has network-wide data traffic impact as it temporarily deactivates and then re-activates all underlay and overlay routes on every node where this config is applied.
	SuppressDefaultResolution *bool `json:"suppress-default-resolution,omitempty"`
}

// NewNetworkBGPConfig instantiates a new NetworkBGPConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkBGPConfig() *NetworkBGPConfig {
	this := NetworkBGPConfig{}
	var holdtime int64 = 180
	this.Holdtime = &holdtime
	var keepaliveInterval int64 = 60
	this.KeepaliveInterval = &keepaliveInterval
	return &this
}

// NewNetworkBGPConfigWithDefaults instantiates a new NetworkBGPConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkBGPConfigWithDefaults() *NetworkBGPConfig {
	this := NetworkBGPConfig{}
	var holdtime int64 = 180
	this.Holdtime = &holdtime
	var keepaliveInterval int64 = 60
	this.KeepaliveInterval = &keepaliveInterval
	return &this
}

// GetAsNumber returns the AsNumber field value if set, zero value otherwise.
func (o *NetworkBGPConfig) GetAsNumber() ApiBgpAsn {
	if o == nil || o.AsNumber == nil {
		var ret ApiBgpAsn
		return ret
	}
	return *o.AsNumber
}

// GetAsNumberOk returns a tuple with the AsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPConfig) GetAsNumberOk() (*ApiBgpAsn, bool) {
	if o == nil || o.AsNumber == nil {
		return nil, false
	}
	return o.AsNumber, true
}

// HasAsNumber returns a boolean if a field has been set.
func (o *NetworkBGPConfig) HasAsNumber() bool {
	if o != nil && o.AsNumber != nil {
		return true
	}

	return false
}

// SetAsNumber gets a reference to the given ApiBgpAsn and assigns it to the AsNumber field.
func (o *NetworkBGPConfig) SetAsNumber(v ApiBgpAsn) {
	o.AsNumber = &v
}

// GetDscAutoConfig returns the DscAutoConfig field value if set, zero value otherwise.
func (o *NetworkBGPConfig) GetDscAutoConfig() bool {
	if o == nil || o.DscAutoConfig == nil {
		var ret bool
		return ret
	}
	return *o.DscAutoConfig
}

// GetDscAutoConfigOk returns a tuple with the DscAutoConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPConfig) GetDscAutoConfigOk() (*bool, bool) {
	if o == nil || o.DscAutoConfig == nil {
		return nil, false
	}
	return o.DscAutoConfig, true
}

// HasDscAutoConfig returns a boolean if a field has been set.
func (o *NetworkBGPConfig) HasDscAutoConfig() bool {
	if o != nil && o.DscAutoConfig != nil {
		return true
	}

	return false
}

// SetDscAutoConfig gets a reference to the given bool and assigns it to the DscAutoConfig field.
func (o *NetworkBGPConfig) SetDscAutoConfig(v bool) {
	o.DscAutoConfig = &v
}

// GetHoldtime returns the Holdtime field value if set, zero value otherwise.
func (o *NetworkBGPConfig) GetHoldtime() int64 {
	if o == nil || o.Holdtime == nil {
		var ret int64
		return ret
	}
	return *o.Holdtime
}

// GetHoldtimeOk returns a tuple with the Holdtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPConfig) GetHoldtimeOk() (*int64, bool) {
	if o == nil || o.Holdtime == nil {
		return nil, false
	}
	return o.Holdtime, true
}

// HasHoldtime returns a boolean if a field has been set.
func (o *NetworkBGPConfig) HasHoldtime() bool {
	if o != nil && o.Holdtime != nil {
		return true
	}

	return false
}

// SetHoldtime gets a reference to the given int64 and assigns it to the Holdtime field.
func (o *NetworkBGPConfig) SetHoldtime(v int64) {
	o.Holdtime = &v
}

// GetKeepaliveInterval returns the KeepaliveInterval field value if set, zero value otherwise.
func (o *NetworkBGPConfig) GetKeepaliveInterval() int64 {
	if o == nil || o.KeepaliveInterval == nil {
		var ret int64
		return ret
	}
	return *o.KeepaliveInterval
}

// GetKeepaliveIntervalOk returns a tuple with the KeepaliveInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPConfig) GetKeepaliveIntervalOk() (*int64, bool) {
	if o == nil || o.KeepaliveInterval == nil {
		return nil, false
	}
	return o.KeepaliveInterval, true
}

// HasKeepaliveInterval returns a boolean if a field has been set.
func (o *NetworkBGPConfig) HasKeepaliveInterval() bool {
	if o != nil && o.KeepaliveInterval != nil {
		return true
	}

	return false
}

// SetKeepaliveInterval gets a reference to the given int64 and assigns it to the KeepaliveInterval field.
func (o *NetworkBGPConfig) SetKeepaliveInterval(v int64) {
	o.KeepaliveInterval = &v
}

// GetNeighbors returns the Neighbors field value if set, zero value otherwise.
func (o *NetworkBGPConfig) GetNeighbors() []NetworkBGPNeighbor {
	if o == nil || o.Neighbors == nil {
		var ret []NetworkBGPNeighbor
		return ret
	}
	return *o.Neighbors
}

// GetNeighborsOk returns a tuple with the Neighbors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPConfig) GetNeighborsOk() (*[]NetworkBGPNeighbor, bool) {
	if o == nil || o.Neighbors == nil {
		return nil, false
	}
	return o.Neighbors, true
}

// HasNeighbors returns a boolean if a field has been set.
func (o *NetworkBGPConfig) HasNeighbors() bool {
	if o != nil && o.Neighbors != nil {
		return true
	}

	return false
}

// SetNeighbors gets a reference to the given []NetworkBGPNeighbor and assigns it to the Neighbors field.
func (o *NetworkBGPConfig) SetNeighbors(v []NetworkBGPNeighbor) {
	o.Neighbors = &v
}

// GetRouterId returns the RouterId field value if set, zero value otherwise.
func (o *NetworkBGPConfig) GetRouterId() string {
	if o == nil || o.RouterId == nil {
		var ret string
		return ret
	}
	return *o.RouterId
}

// GetRouterIdOk returns a tuple with the RouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPConfig) GetRouterIdOk() (*string, bool) {
	if o == nil || o.RouterId == nil {
		return nil, false
	}
	return o.RouterId, true
}

// HasRouterId returns a boolean if a field has been set.
func (o *NetworkBGPConfig) HasRouterId() bool {
	if o != nil && o.RouterId != nil {
		return true
	}

	return false
}

// SetRouterId gets a reference to the given string and assigns it to the RouterId field.
func (o *NetworkBGPConfig) SetRouterId(v string) {
	o.RouterId = &v
}

// GetSuppressDefaultResolution returns the SuppressDefaultResolution field value if set, zero value otherwise.
func (o *NetworkBGPConfig) GetSuppressDefaultResolution() bool {
	if o == nil || o.SuppressDefaultResolution == nil {
		var ret bool
		return ret
	}
	return *o.SuppressDefaultResolution
}

// GetSuppressDefaultResolutionOk returns a tuple with the SuppressDefaultResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPConfig) GetSuppressDefaultResolutionOk() (*bool, bool) {
	if o == nil || o.SuppressDefaultResolution == nil {
		return nil, false
	}
	return o.SuppressDefaultResolution, true
}

// HasSuppressDefaultResolution returns a boolean if a field has been set.
func (o *NetworkBGPConfig) HasSuppressDefaultResolution() bool {
	if o != nil && o.SuppressDefaultResolution != nil {
		return true
	}

	return false
}

// SetSuppressDefaultResolution gets a reference to the given bool and assigns it to the SuppressDefaultResolution field.
func (o *NetworkBGPConfig) SetSuppressDefaultResolution(v bool) {
	o.SuppressDefaultResolution = &v
}

func (o NetworkBGPConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AsNumber != nil {
		toSerialize["as-number"] = o.AsNumber
	}
	if o.DscAutoConfig != nil {
		toSerialize["dsc-auto-config"] = o.DscAutoConfig
	}
	if o.Holdtime != nil {
		toSerialize["holdtime"] = o.Holdtime
	}
	if o.KeepaliveInterval != nil {
		toSerialize["keepalive-interval"] = o.KeepaliveInterval
	}
	if o.Neighbors != nil {
		toSerialize["neighbors"] = o.Neighbors
	}
	if o.RouterId != nil {
		toSerialize["router-id"] = o.RouterId
	}
	if o.SuppressDefaultResolution != nil {
		toSerialize["suppress-default-resolution"] = o.SuppressDefaultResolution
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkBGPConfig struct {
	value *NetworkBGPConfig
	isSet bool
}

func (v NullableNetworkBGPConfig) Get() *NetworkBGPConfig {
	return v.value
}

func (v *NullableNetworkBGPConfig) Set(val *NetworkBGPConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkBGPConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkBGPConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkBGPConfig(val *NetworkBGPConfig) *NullableNetworkBGPConfig {
	return &NullableNetworkBGPConfig{value: val, isSet: true}
}

func (v NullableNetworkBGPConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkBGPConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


