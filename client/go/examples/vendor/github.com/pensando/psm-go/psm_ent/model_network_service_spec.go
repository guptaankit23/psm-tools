/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkServiceSpec spec part of service object.
type NetworkServiceSpec struct {
	// load balancing policy (reference to LbPolicy object).
	LbPolicy *string `json:"lb-policy,omitempty"`
	// load balancer port.
	Ports *string `json:"ports,omitempty"`
	TlsClientPolicy *NetworkTLSClientPolicySpec `json:"tls-client-policy,omitempty"`
	TlsServerPolicy *NetworkTLSServerPolicySpec `json:"tls-server-policy,omitempty"`
	// Virtual IP of the load balancer.
	VirtualIp *string `json:"virtual-ip,omitempty"`
	// FIXME: maps are not working. change this after its fixed map<string, string> WorkloadSelector  = 1 [(gogoproto.nullable) = true, (gogoproto.jsontag) = \"workload-labels,omitempty\"]; workload selector for the service (list of labels to match).
	WorkloadLabels *[]string `json:"workload-labels,omitempty"`
}

// NewNetworkServiceSpec instantiates a new NetworkServiceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkServiceSpec() *NetworkServiceSpec {
	this := NetworkServiceSpec{}
	return &this
}

// NewNetworkServiceSpecWithDefaults instantiates a new NetworkServiceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkServiceSpecWithDefaults() *NetworkServiceSpec {
	this := NetworkServiceSpec{}
	return &this
}

// GetLbPolicy returns the LbPolicy field value if set, zero value otherwise.
func (o *NetworkServiceSpec) GetLbPolicy() string {
	if o == nil || o.LbPolicy == nil {
		var ret string
		return ret
	}
	return *o.LbPolicy
}

// GetLbPolicyOk returns a tuple with the LbPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServiceSpec) GetLbPolicyOk() (*string, bool) {
	if o == nil || o.LbPolicy == nil {
		return nil, false
	}
	return o.LbPolicy, true
}

// HasLbPolicy returns a boolean if a field has been set.
func (o *NetworkServiceSpec) HasLbPolicy() bool {
	if o != nil && o.LbPolicy != nil {
		return true
	}

	return false
}

// SetLbPolicy gets a reference to the given string and assigns it to the LbPolicy field.
func (o *NetworkServiceSpec) SetLbPolicy(v string) {
	o.LbPolicy = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *NetworkServiceSpec) GetPorts() string {
	if o == nil || o.Ports == nil {
		var ret string
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServiceSpec) GetPortsOk() (*string, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *NetworkServiceSpec) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given string and assigns it to the Ports field.
func (o *NetworkServiceSpec) SetPorts(v string) {
	o.Ports = &v
}

// GetTlsClientPolicy returns the TlsClientPolicy field value if set, zero value otherwise.
func (o *NetworkServiceSpec) GetTlsClientPolicy() NetworkTLSClientPolicySpec {
	if o == nil || o.TlsClientPolicy == nil {
		var ret NetworkTLSClientPolicySpec
		return ret
	}
	return *o.TlsClientPolicy
}

// GetTlsClientPolicyOk returns a tuple with the TlsClientPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServiceSpec) GetTlsClientPolicyOk() (*NetworkTLSClientPolicySpec, bool) {
	if o == nil || o.TlsClientPolicy == nil {
		return nil, false
	}
	return o.TlsClientPolicy, true
}

// HasTlsClientPolicy returns a boolean if a field has been set.
func (o *NetworkServiceSpec) HasTlsClientPolicy() bool {
	if o != nil && o.TlsClientPolicy != nil {
		return true
	}

	return false
}

// SetTlsClientPolicy gets a reference to the given NetworkTLSClientPolicySpec and assigns it to the TlsClientPolicy field.
func (o *NetworkServiceSpec) SetTlsClientPolicy(v NetworkTLSClientPolicySpec) {
	o.TlsClientPolicy = &v
}

// GetTlsServerPolicy returns the TlsServerPolicy field value if set, zero value otherwise.
func (o *NetworkServiceSpec) GetTlsServerPolicy() NetworkTLSServerPolicySpec {
	if o == nil || o.TlsServerPolicy == nil {
		var ret NetworkTLSServerPolicySpec
		return ret
	}
	return *o.TlsServerPolicy
}

// GetTlsServerPolicyOk returns a tuple with the TlsServerPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServiceSpec) GetTlsServerPolicyOk() (*NetworkTLSServerPolicySpec, bool) {
	if o == nil || o.TlsServerPolicy == nil {
		return nil, false
	}
	return o.TlsServerPolicy, true
}

// HasTlsServerPolicy returns a boolean if a field has been set.
func (o *NetworkServiceSpec) HasTlsServerPolicy() bool {
	if o != nil && o.TlsServerPolicy != nil {
		return true
	}

	return false
}

// SetTlsServerPolicy gets a reference to the given NetworkTLSServerPolicySpec and assigns it to the TlsServerPolicy field.
func (o *NetworkServiceSpec) SetTlsServerPolicy(v NetworkTLSServerPolicySpec) {
	o.TlsServerPolicy = &v
}

// GetVirtualIp returns the VirtualIp field value if set, zero value otherwise.
func (o *NetworkServiceSpec) GetVirtualIp() string {
	if o == nil || o.VirtualIp == nil {
		var ret string
		return ret
	}
	return *o.VirtualIp
}

// GetVirtualIpOk returns a tuple with the VirtualIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServiceSpec) GetVirtualIpOk() (*string, bool) {
	if o == nil || o.VirtualIp == nil {
		return nil, false
	}
	return o.VirtualIp, true
}

// HasVirtualIp returns a boolean if a field has been set.
func (o *NetworkServiceSpec) HasVirtualIp() bool {
	if o != nil && o.VirtualIp != nil {
		return true
	}

	return false
}

// SetVirtualIp gets a reference to the given string and assigns it to the VirtualIp field.
func (o *NetworkServiceSpec) SetVirtualIp(v string) {
	o.VirtualIp = &v
}

// GetWorkloadLabels returns the WorkloadLabels field value if set, zero value otherwise.
func (o *NetworkServiceSpec) GetWorkloadLabels() []string {
	if o == nil || o.WorkloadLabels == nil {
		var ret []string
		return ret
	}
	return *o.WorkloadLabels
}

// GetWorkloadLabelsOk returns a tuple with the WorkloadLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkServiceSpec) GetWorkloadLabelsOk() (*[]string, bool) {
	if o == nil || o.WorkloadLabels == nil {
		return nil, false
	}
	return o.WorkloadLabels, true
}

// HasWorkloadLabels returns a boolean if a field has been set.
func (o *NetworkServiceSpec) HasWorkloadLabels() bool {
	if o != nil && o.WorkloadLabels != nil {
		return true
	}

	return false
}

// SetWorkloadLabels gets a reference to the given []string and assigns it to the WorkloadLabels field.
func (o *NetworkServiceSpec) SetWorkloadLabels(v []string) {
	o.WorkloadLabels = &v
}

func (o NetworkServiceSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LbPolicy != nil {
		toSerialize["lb-policy"] = o.LbPolicy
	}
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	if o.TlsClientPolicy != nil {
		toSerialize["tls-client-policy"] = o.TlsClientPolicy
	}
	if o.TlsServerPolicy != nil {
		toSerialize["tls-server-policy"] = o.TlsServerPolicy
	}
	if o.VirtualIp != nil {
		toSerialize["virtual-ip"] = o.VirtualIp
	}
	if o.WorkloadLabels != nil {
		toSerialize["workload-labels"] = o.WorkloadLabels
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkServiceSpec struct {
	value *NetworkServiceSpec
	isSet bool
}

func (v NullableNetworkServiceSpec) Get() *NetworkServiceSpec {
	return v.value
}

func (v *NullableNetworkServiceSpec) Set(val *NetworkServiceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkServiceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkServiceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkServiceSpec(val *NetworkServiceSpec) *NullableNetworkServiceSpec {
	return &NullableNetworkServiceSpec{value: val, isSet: true}
}

func (v NullableNetworkServiceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkServiceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


