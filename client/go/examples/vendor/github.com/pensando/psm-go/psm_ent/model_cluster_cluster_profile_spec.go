/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterClusterProfileSpec ClusterProfileSpec contains the configuration options.
type ClusterClusterProfileSpec struct {
	SearchOptions *ClusterSearchOptions `json:"search-options,omitempty"`
}

// NewClusterClusterProfileSpec instantiates a new ClusterClusterProfileSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterClusterProfileSpec() *ClusterClusterProfileSpec {
	this := ClusterClusterProfileSpec{}
	return &this
}

// NewClusterClusterProfileSpecWithDefaults instantiates a new ClusterClusterProfileSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterClusterProfileSpecWithDefaults() *ClusterClusterProfileSpec {
	this := ClusterClusterProfileSpec{}
	return &this
}

// GetSearchOptions returns the SearchOptions field value if set, zero value otherwise.
func (o *ClusterClusterProfileSpec) GetSearchOptions() ClusterSearchOptions {
	if o == nil || o.SearchOptions == nil {
		var ret ClusterSearchOptions
		return ret
	}
	return *o.SearchOptions
}

// GetSearchOptionsOk returns a tuple with the SearchOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterClusterProfileSpec) GetSearchOptionsOk() (*ClusterSearchOptions, bool) {
	if o == nil || o.SearchOptions == nil {
		return nil, false
	}
	return o.SearchOptions, true
}

// HasSearchOptions returns a boolean if a field has been set.
func (o *ClusterClusterProfileSpec) HasSearchOptions() bool {
	if o != nil && o.SearchOptions != nil {
		return true
	}

	return false
}

// SetSearchOptions gets a reference to the given ClusterSearchOptions and assigns it to the SearchOptions field.
func (o *ClusterClusterProfileSpec) SetSearchOptions(v ClusterSearchOptions) {
	o.SearchOptions = &v
}

func (o ClusterClusterProfileSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SearchOptions != nil {
		toSerialize["search-options"] = o.SearchOptions
	}
	return json.Marshal(toSerialize)
}

type NullableClusterClusterProfileSpec struct {
	value *ClusterClusterProfileSpec
	isSet bool
}

func (v NullableClusterClusterProfileSpec) Get() *ClusterClusterProfileSpec {
	return v.value
}

func (v *NullableClusterClusterProfileSpec) Set(val *ClusterClusterProfileSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterClusterProfileSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterClusterProfileSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterClusterProfileSpec(val *ClusterClusterProfileSpec) *NullableClusterClusterProfileSpec {
	return &NullableClusterClusterProfileSpec{value: val, isSet: true}
}

func (v NullableClusterClusterProfileSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterClusterProfileSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


