/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecuritySunrpc SunRPC ALG configuration.
type SecuritySunrpc struct {
	// RPC Program identifier.
	ProgramId *string `json:"program-id,omitempty"`
	// Timeout for this program id. Should be a valid time duration.
	Timeout *string `json:"timeout,omitempty"`
}

// NewSecuritySunrpc instantiates a new SecuritySunrpc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySunrpc() *SecuritySunrpc {
	this := SecuritySunrpc{}
	return &this
}

// NewSecuritySunrpcWithDefaults instantiates a new SecuritySunrpc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySunrpcWithDefaults() *SecuritySunrpc {
	this := SecuritySunrpc{}
	return &this
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise.
func (o *SecuritySunrpc) GetProgramId() string {
	if o == nil || o.ProgramId == nil {
		var ret string
		return ret
	}
	return *o.ProgramId
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySunrpc) GetProgramIdOk() (*string, bool) {
	if o == nil || o.ProgramId == nil {
		return nil, false
	}
	return o.ProgramId, true
}

// HasProgramId returns a boolean if a field has been set.
func (o *SecuritySunrpc) HasProgramId() bool {
	if o != nil && o.ProgramId != nil {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given string and assigns it to the ProgramId field.
func (o *SecuritySunrpc) SetProgramId(v string) {
	o.ProgramId = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *SecuritySunrpc) GetTimeout() string {
	if o == nil || o.Timeout == nil {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySunrpc) GetTimeoutOk() (*string, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *SecuritySunrpc) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *SecuritySunrpc) SetTimeout(v string) {
	o.Timeout = &v
}

func (o SecuritySunrpc) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProgramId != nil {
		toSerialize["program-id"] = o.ProgramId
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableSecuritySunrpc struct {
	value *SecuritySunrpc
	isSet bool
}

func (v NullableSecuritySunrpc) Get() *SecuritySunrpc {
	return v.value
}

func (v *NullableSecuritySunrpc) Set(val *SecuritySunrpc) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySunrpc) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySunrpc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySunrpc(val *SecuritySunrpc) *NullableSecuritySunrpc {
	return &NullableSecuritySunrpc{value: val, isSet: true}
}

func (v NullableSecuritySunrpc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySunrpc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


