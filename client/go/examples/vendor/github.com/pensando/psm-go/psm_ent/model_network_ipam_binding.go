/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkIPAMBinding struct for NetworkIPAMBinding
type NetworkIPAMBinding struct {
	BootstrapIpamOptions *NetworkBootstrapIPAMOptions `json:"bootstrap-ipam-options,omitempty"`
	IpAddress *string `json:"ip-address,omitempty"`
	IpamOptions *NetworkIPAMOptions `json:"ipam-options,omitempty"`
	MacAddress *string `json:"mac-address,omitempty"`
}

// NewNetworkIPAMBinding instantiates a new NetworkIPAMBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkIPAMBinding() *NetworkIPAMBinding {
	this := NetworkIPAMBinding{}
	return &this
}

// NewNetworkIPAMBindingWithDefaults instantiates a new NetworkIPAMBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkIPAMBindingWithDefaults() *NetworkIPAMBinding {
	this := NetworkIPAMBinding{}
	return &this
}

// GetBootstrapIpamOptions returns the BootstrapIpamOptions field value if set, zero value otherwise.
func (o *NetworkIPAMBinding) GetBootstrapIpamOptions() NetworkBootstrapIPAMOptions {
	if o == nil || o.BootstrapIpamOptions == nil {
		var ret NetworkBootstrapIPAMOptions
		return ret
	}
	return *o.BootstrapIpamOptions
}

// GetBootstrapIpamOptionsOk returns a tuple with the BootstrapIpamOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkIPAMBinding) GetBootstrapIpamOptionsOk() (*NetworkBootstrapIPAMOptions, bool) {
	if o == nil || o.BootstrapIpamOptions == nil {
		return nil, false
	}
	return o.BootstrapIpamOptions, true
}

// HasBootstrapIpamOptions returns a boolean if a field has been set.
func (o *NetworkIPAMBinding) HasBootstrapIpamOptions() bool {
	if o != nil && o.BootstrapIpamOptions != nil {
		return true
	}

	return false
}

// SetBootstrapIpamOptions gets a reference to the given NetworkBootstrapIPAMOptions and assigns it to the BootstrapIpamOptions field.
func (o *NetworkIPAMBinding) SetBootstrapIpamOptions(v NetworkBootstrapIPAMOptions) {
	o.BootstrapIpamOptions = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *NetworkIPAMBinding) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkIPAMBinding) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *NetworkIPAMBinding) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *NetworkIPAMBinding) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetIpamOptions returns the IpamOptions field value if set, zero value otherwise.
func (o *NetworkIPAMBinding) GetIpamOptions() NetworkIPAMOptions {
	if o == nil || o.IpamOptions == nil {
		var ret NetworkIPAMOptions
		return ret
	}
	return *o.IpamOptions
}

// GetIpamOptionsOk returns a tuple with the IpamOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkIPAMBinding) GetIpamOptionsOk() (*NetworkIPAMOptions, bool) {
	if o == nil || o.IpamOptions == nil {
		return nil, false
	}
	return o.IpamOptions, true
}

// HasIpamOptions returns a boolean if a field has been set.
func (o *NetworkIPAMBinding) HasIpamOptions() bool {
	if o != nil && o.IpamOptions != nil {
		return true
	}

	return false
}

// SetIpamOptions gets a reference to the given NetworkIPAMOptions and assigns it to the IpamOptions field.
func (o *NetworkIPAMBinding) SetIpamOptions(v NetworkIPAMOptions) {
	o.IpamOptions = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *NetworkIPAMBinding) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkIPAMBinding) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *NetworkIPAMBinding) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *NetworkIPAMBinding) SetMacAddress(v string) {
	o.MacAddress = &v
}

func (o NetworkIPAMBinding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BootstrapIpamOptions != nil {
		toSerialize["bootstrap-ipam-options"] = o.BootstrapIpamOptions
	}
	if o.IpAddress != nil {
		toSerialize["ip-address"] = o.IpAddress
	}
	if o.IpamOptions != nil {
		toSerialize["ipam-options"] = o.IpamOptions
	}
	if o.MacAddress != nil {
		toSerialize["mac-address"] = o.MacAddress
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkIPAMBinding struct {
	value *NetworkIPAMBinding
	isSet bool
}

func (v NullableNetworkIPAMBinding) Get() *NetworkIPAMBinding {
	return v.value
}

func (v *NullableNetworkIPAMBinding) Set(val *NetworkIPAMBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkIPAMBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkIPAMBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkIPAMBinding(val *NetworkIPAMBinding) *NullableNetworkIPAMBinding {
	return &NullableNetworkIPAMBinding{value: val, isSet: true}
}

func (v NullableNetworkIPAMBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkIPAMBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


