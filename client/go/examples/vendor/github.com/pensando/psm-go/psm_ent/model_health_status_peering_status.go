/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// HealthStatusPeeringStatus struct for HealthStatusPeeringStatus
type HealthStatusPeeringStatus struct {
	Configured *int32 `json:"configured,omitempty"`
	DownPeers *[]string `json:"down-peers,omitempty"`
	Established *int32 `json:"established,omitempty"`
}

// NewHealthStatusPeeringStatus instantiates a new HealthStatusPeeringStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthStatusPeeringStatus() *HealthStatusPeeringStatus {
	this := HealthStatusPeeringStatus{}
	return &this
}

// NewHealthStatusPeeringStatusWithDefaults instantiates a new HealthStatusPeeringStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthStatusPeeringStatusWithDefaults() *HealthStatusPeeringStatus {
	this := HealthStatusPeeringStatus{}
	return &this
}

// GetConfigured returns the Configured field value if set, zero value otherwise.
func (o *HealthStatusPeeringStatus) GetConfigured() int32 {
	if o == nil || o.Configured == nil {
		var ret int32
		return ret
	}
	return *o.Configured
}

// GetConfiguredOk returns a tuple with the Configured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthStatusPeeringStatus) GetConfiguredOk() (*int32, bool) {
	if o == nil || o.Configured == nil {
		return nil, false
	}
	return o.Configured, true
}

// HasConfigured returns a boolean if a field has been set.
func (o *HealthStatusPeeringStatus) HasConfigured() bool {
	if o != nil && o.Configured != nil {
		return true
	}

	return false
}

// SetConfigured gets a reference to the given int32 and assigns it to the Configured field.
func (o *HealthStatusPeeringStatus) SetConfigured(v int32) {
	o.Configured = &v
}

// GetDownPeers returns the DownPeers field value if set, zero value otherwise.
func (o *HealthStatusPeeringStatus) GetDownPeers() []string {
	if o == nil || o.DownPeers == nil {
		var ret []string
		return ret
	}
	return *o.DownPeers
}

// GetDownPeersOk returns a tuple with the DownPeers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthStatusPeeringStatus) GetDownPeersOk() (*[]string, bool) {
	if o == nil || o.DownPeers == nil {
		return nil, false
	}
	return o.DownPeers, true
}

// HasDownPeers returns a boolean if a field has been set.
func (o *HealthStatusPeeringStatus) HasDownPeers() bool {
	if o != nil && o.DownPeers != nil {
		return true
	}

	return false
}

// SetDownPeers gets a reference to the given []string and assigns it to the DownPeers field.
func (o *HealthStatusPeeringStatus) SetDownPeers(v []string) {
	o.DownPeers = &v
}

// GetEstablished returns the Established field value if set, zero value otherwise.
func (o *HealthStatusPeeringStatus) GetEstablished() int32 {
	if o == nil || o.Established == nil {
		var ret int32
		return ret
	}
	return *o.Established
}

// GetEstablishedOk returns a tuple with the Established field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthStatusPeeringStatus) GetEstablishedOk() (*int32, bool) {
	if o == nil || o.Established == nil {
		return nil, false
	}
	return o.Established, true
}

// HasEstablished returns a boolean if a field has been set.
func (o *HealthStatusPeeringStatus) HasEstablished() bool {
	if o != nil && o.Established != nil {
		return true
	}

	return false
}

// SetEstablished gets a reference to the given int32 and assigns it to the Established field.
func (o *HealthStatusPeeringStatus) SetEstablished(v int32) {
	o.Established = &v
}

func (o HealthStatusPeeringStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Configured != nil {
		toSerialize["configured"] = o.Configured
	}
	if o.DownPeers != nil {
		toSerialize["down-peers"] = o.DownPeers
	}
	if o.Established != nil {
		toSerialize["established"] = o.Established
	}
	return json.Marshal(toSerialize)
}

type NullableHealthStatusPeeringStatus struct {
	value *HealthStatusPeeringStatus
	isSet bool
}

func (v NullableHealthStatusPeeringStatus) Get() *HealthStatusPeeringStatus {
	return v.value
}

func (v *NullableHealthStatusPeeringStatus) Set(val *HealthStatusPeeringStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthStatusPeeringStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthStatusPeeringStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthStatusPeeringStatus(val *HealthStatusPeeringStatus) *NullableHealthStatusPeeringStatus {
	return &NullableHealthStatusPeeringStatus{value: val, isSet: true}
}

func (v NullableHealthStatusPeeringStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthStatusPeeringStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


