/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// RoutingRouteFilter struct for RoutingRouteFilter
type RoutingRouteFilter struct {
	// Fetch all routes rather than just the best routes selected by BGP.
	AllRoutes *bool `json:"all-routes,omitempty"`
	ApiVersion *string `json:"api-version,omitempty"`
	Extcomm *string `json:"extcomm,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Ipaddress *string `json:"ipaddress,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Meta *ApiObjectMeta `json:"meta,omitempty"`
	Nhop *string `json:"nhop,omitempty"`
	PageNumber *int64 `json:"page-number,omitempty"`
	Rtype *string `json:"rtype,omitempty"`
	Type *string `json:"type,omitempty"`
	Vnid *string `json:"vnid,omitempty"`
}

// NewRoutingRouteFilter instantiates a new RoutingRouteFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingRouteFilter() *RoutingRouteFilter {
	this := RoutingRouteFilter{}
	return &this
}

// NewRoutingRouteFilterWithDefaults instantiates a new RoutingRouteFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingRouteFilterWithDefaults() *RoutingRouteFilter {
	this := RoutingRouteFilter{}
	return &this
}

// GetAllRoutes returns the AllRoutes field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetAllRoutes() bool {
	if o == nil || o.AllRoutes == nil {
		var ret bool
		return ret
	}
	return *o.AllRoutes
}

// GetAllRoutesOk returns a tuple with the AllRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetAllRoutesOk() (*bool, bool) {
	if o == nil || o.AllRoutes == nil {
		return nil, false
	}
	return o.AllRoutes, true
}

// HasAllRoutes returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasAllRoutes() bool {
	if o != nil && o.AllRoutes != nil {
		return true
	}

	return false
}

// SetAllRoutes gets a reference to the given bool and assigns it to the AllRoutes field.
func (o *RoutingRouteFilter) SetAllRoutes(v bool) {
	o.AllRoutes = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *RoutingRouteFilter) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetExtcomm returns the Extcomm field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetExtcomm() string {
	if o == nil || o.Extcomm == nil {
		var ret string
		return ret
	}
	return *o.Extcomm
}

// GetExtcommOk returns a tuple with the Extcomm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetExtcommOk() (*string, bool) {
	if o == nil || o.Extcomm == nil {
		return nil, false
	}
	return o.Extcomm, true
}

// HasExtcomm returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasExtcomm() bool {
	if o != nil && o.Extcomm != nil {
		return true
	}

	return false
}

// SetExtcomm gets a reference to the given string and assigns it to the Extcomm field.
func (o *RoutingRouteFilter) SetExtcomm(v string) {
	o.Extcomm = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetInstance() string {
	if o == nil || o.Instance == nil {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetInstanceOk() (*string, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *RoutingRouteFilter) SetInstance(v string) {
	o.Instance = &v
}

// GetIpaddress returns the Ipaddress field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetIpaddress() string {
	if o == nil || o.Ipaddress == nil {
		var ret string
		return ret
	}
	return *o.Ipaddress
}

// GetIpaddressOk returns a tuple with the Ipaddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetIpaddressOk() (*string, bool) {
	if o == nil || o.Ipaddress == nil {
		return nil, false
	}
	return o.Ipaddress, true
}

// HasIpaddress returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasIpaddress() bool {
	if o != nil && o.Ipaddress != nil {
		return true
	}

	return false
}

// SetIpaddress gets a reference to the given string and assigns it to the Ipaddress field.
func (o *RoutingRouteFilter) SetIpaddress(v string) {
	o.Ipaddress = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *RoutingRouteFilter) SetKind(v string) {
	o.Kind = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetMeta() ApiObjectMeta {
	if o == nil || o.Meta == nil {
		var ret ApiObjectMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetMetaOk() (*ApiObjectMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ApiObjectMeta and assigns it to the Meta field.
func (o *RoutingRouteFilter) SetMeta(v ApiObjectMeta) {
	o.Meta = &v
}

// GetNhop returns the Nhop field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetNhop() string {
	if o == nil || o.Nhop == nil {
		var ret string
		return ret
	}
	return *o.Nhop
}

// GetNhopOk returns a tuple with the Nhop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetNhopOk() (*string, bool) {
	if o == nil || o.Nhop == nil {
		return nil, false
	}
	return o.Nhop, true
}

// HasNhop returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasNhop() bool {
	if o != nil && o.Nhop != nil {
		return true
	}

	return false
}

// SetNhop gets a reference to the given string and assigns it to the Nhop field.
func (o *RoutingRouteFilter) SetNhop(v string) {
	o.Nhop = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetPageNumber() int64 {
	if o == nil || o.PageNumber == nil {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetPageNumberOk() (*int64, bool) {
	if o == nil || o.PageNumber == nil {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasPageNumber() bool {
	if o != nil && o.PageNumber != nil {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *RoutingRouteFilter) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetRtype returns the Rtype field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetRtype() string {
	if o == nil || o.Rtype == nil {
		var ret string
		return ret
	}
	return *o.Rtype
}

// GetRtypeOk returns a tuple with the Rtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetRtypeOk() (*string, bool) {
	if o == nil || o.Rtype == nil {
		return nil, false
	}
	return o.Rtype, true
}

// HasRtype returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasRtype() bool {
	if o != nil && o.Rtype != nil {
		return true
	}

	return false
}

// SetRtype gets a reference to the given string and assigns it to the Rtype field.
func (o *RoutingRouteFilter) SetRtype(v string) {
	o.Rtype = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RoutingRouteFilter) SetType(v string) {
	o.Type = &v
}

// GetVnid returns the Vnid field value if set, zero value otherwise.
func (o *RoutingRouteFilter) GetVnid() string {
	if o == nil || o.Vnid == nil {
		var ret string
		return ret
	}
	return *o.Vnid
}

// GetVnidOk returns a tuple with the Vnid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteFilter) GetVnidOk() (*string, bool) {
	if o == nil || o.Vnid == nil {
		return nil, false
	}
	return o.Vnid, true
}

// HasVnid returns a boolean if a field has been set.
func (o *RoutingRouteFilter) HasVnid() bool {
	if o != nil && o.Vnid != nil {
		return true
	}

	return false
}

// SetVnid gets a reference to the given string and assigns it to the Vnid field.
func (o *RoutingRouteFilter) SetVnid(v string) {
	o.Vnid = &v
}

func (o RoutingRouteFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllRoutes != nil {
		toSerialize["all-routes"] = o.AllRoutes
	}
	if o.ApiVersion != nil {
		toSerialize["api-version"] = o.ApiVersion
	}
	if o.Extcomm != nil {
		toSerialize["extcomm"] = o.Extcomm
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.Ipaddress != nil {
		toSerialize["ipaddress"] = o.Ipaddress
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Nhop != nil {
		toSerialize["nhop"] = o.Nhop
	}
	if o.PageNumber != nil {
		toSerialize["page-number"] = o.PageNumber
	}
	if o.Rtype != nil {
		toSerialize["rtype"] = o.Rtype
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Vnid != nil {
		toSerialize["vnid"] = o.Vnid
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingRouteFilter struct {
	value *RoutingRouteFilter
	isSet bool
}

func (v NullableRoutingRouteFilter) Get() *RoutingRouteFilter {
	return v.value
}

func (v *NullableRoutingRouteFilter) Set(val *RoutingRouteFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingRouteFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingRouteFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingRouteFilter(val *RoutingRouteFilter) *NullableRoutingRouteFilter {
	return &NullableRoutingRouteFilter{value: val, isSet: true}
}

func (v NullableRoutingRouteFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingRouteFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


