/*
 * Auth API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// AuthRoleBindingSpec spec part of role binding object.
type AuthRoleBindingSpec struct {
	Role *string `json:"role,omitempty"`
	UserGroups *[]string `json:"user-groups,omitempty"`
	Users *[]string `json:"users,omitempty"`
}

// NewAuthRoleBindingSpec instantiates a new AuthRoleBindingSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthRoleBindingSpec() *AuthRoleBindingSpec {
	this := AuthRoleBindingSpec{}
	return &this
}

// NewAuthRoleBindingSpecWithDefaults instantiates a new AuthRoleBindingSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthRoleBindingSpecWithDefaults() *AuthRoleBindingSpec {
	this := AuthRoleBindingSpec{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AuthRoleBindingSpec) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRoleBindingSpec) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AuthRoleBindingSpec) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AuthRoleBindingSpec) SetRole(v string) {
	o.Role = &v
}

// GetUserGroups returns the UserGroups field value if set, zero value otherwise.
func (o *AuthRoleBindingSpec) GetUserGroups() []string {
	if o == nil || o.UserGroups == nil {
		var ret []string
		return ret
	}
	return *o.UserGroups
}

// GetUserGroupsOk returns a tuple with the UserGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRoleBindingSpec) GetUserGroupsOk() (*[]string, bool) {
	if o == nil || o.UserGroups == nil {
		return nil, false
	}
	return o.UserGroups, true
}

// HasUserGroups returns a boolean if a field has been set.
func (o *AuthRoleBindingSpec) HasUserGroups() bool {
	if o != nil && o.UserGroups != nil {
		return true
	}

	return false
}

// SetUserGroups gets a reference to the given []string and assigns it to the UserGroups field.
func (o *AuthRoleBindingSpec) SetUserGroups(v []string) {
	o.UserGroups = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *AuthRoleBindingSpec) GetUsers() []string {
	if o == nil || o.Users == nil {
		var ret []string
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRoleBindingSpec) GetUsersOk() (*[]string, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *AuthRoleBindingSpec) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *AuthRoleBindingSpec) SetUsers(v []string) {
	o.Users = &v
}

func (o AuthRoleBindingSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.UserGroups != nil {
		toSerialize["user-groups"] = o.UserGroups
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableAuthRoleBindingSpec struct {
	value *AuthRoleBindingSpec
	isSet bool
}

func (v NullableAuthRoleBindingSpec) Get() *AuthRoleBindingSpec {
	return v.value
}

func (v *NullableAuthRoleBindingSpec) Set(val *AuthRoleBindingSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthRoleBindingSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthRoleBindingSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthRoleBindingSpec(val *AuthRoleBindingSpec) *NullableAuthRoleBindingSpec {
	return &NullableAuthRoleBindingSpec{value: val, isSet: true}
}

func (v NullableAuthRoleBindingSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthRoleBindingSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


