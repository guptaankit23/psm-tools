/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringArchiveRequestSpec struct for MonitoringArchiveRequestSpec
type MonitoringArchiveRequestSpec struct {
	Query *MonitoringArchiveQuery `json:"query,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewMonitoringArchiveRequestSpec instantiates a new MonitoringArchiveRequestSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringArchiveRequestSpec() *MonitoringArchiveRequestSpec {
	this := MonitoringArchiveRequestSpec{}
	var type_ string = "event"
	this.Type = &type_
	return &this
}

// NewMonitoringArchiveRequestSpecWithDefaults instantiates a new MonitoringArchiveRequestSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringArchiveRequestSpecWithDefaults() *MonitoringArchiveRequestSpec {
	this := MonitoringArchiveRequestSpec{}
	var type_ string = "event"
	this.Type = &type_
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *MonitoringArchiveRequestSpec) GetQuery() MonitoringArchiveQuery {
	if o == nil || o.Query == nil {
		var ret MonitoringArchiveQuery
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringArchiveRequestSpec) GetQueryOk() (*MonitoringArchiveQuery, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *MonitoringArchiveRequestSpec) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given MonitoringArchiveQuery and assigns it to the Query field.
func (o *MonitoringArchiveRequestSpec) SetQuery(v MonitoringArchiveQuery) {
	o.Query = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MonitoringArchiveRequestSpec) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringArchiveRequestSpec) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MonitoringArchiveRequestSpec) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MonitoringArchiveRequestSpec) SetType(v string) {
	o.Type = &v
}

func (o MonitoringArchiveRequestSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringArchiveRequestSpec struct {
	value *MonitoringArchiveRequestSpec
	isSet bool
}

func (v NullableMonitoringArchiveRequestSpec) Get() *MonitoringArchiveRequestSpec {
	return v.value
}

func (v *NullableMonitoringArchiveRequestSpec) Set(val *MonitoringArchiveRequestSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringArchiveRequestSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringArchiveRequestSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringArchiveRequestSpec(val *MonitoringArchiveRequestSpec) *NullableMonitoringArchiveRequestSpec {
	return &NullableMonitoringArchiveRequestSpec{value: val, isSet: true}
}

func (v NullableMonitoringArchiveRequestSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringArchiveRequestSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


