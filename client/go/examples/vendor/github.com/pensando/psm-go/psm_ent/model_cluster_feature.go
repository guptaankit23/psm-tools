/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterFeature Feature represents each individual feature on the system.
type ClusterFeature struct {
	FeatureKey *string `json:"feature-key,omitempty"`
	Licence *string `json:"licence,omitempty"`
}

// NewClusterFeature instantiates a new ClusterFeature object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterFeature() *ClusterFeature {
	this := ClusterFeature{}
	return &this
}

// NewClusterFeatureWithDefaults instantiates a new ClusterFeature object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterFeatureWithDefaults() *ClusterFeature {
	this := ClusterFeature{}
	return &this
}

// GetFeatureKey returns the FeatureKey field value if set, zero value otherwise.
func (o *ClusterFeature) GetFeatureKey() string {
	if o == nil || o.FeatureKey == nil {
		var ret string
		return ret
	}
	return *o.FeatureKey
}

// GetFeatureKeyOk returns a tuple with the FeatureKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeature) GetFeatureKeyOk() (*string, bool) {
	if o == nil || o.FeatureKey == nil {
		return nil, false
	}
	return o.FeatureKey, true
}

// HasFeatureKey returns a boolean if a field has been set.
func (o *ClusterFeature) HasFeatureKey() bool {
	if o != nil && o.FeatureKey != nil {
		return true
	}

	return false
}

// SetFeatureKey gets a reference to the given string and assigns it to the FeatureKey field.
func (o *ClusterFeature) SetFeatureKey(v string) {
	o.FeatureKey = &v
}

// GetLicence returns the Licence field value if set, zero value otherwise.
func (o *ClusterFeature) GetLicence() string {
	if o == nil || o.Licence == nil {
		var ret string
		return ret
	}
	return *o.Licence
}

// GetLicenceOk returns a tuple with the Licence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeature) GetLicenceOk() (*string, bool) {
	if o == nil || o.Licence == nil {
		return nil, false
	}
	return o.Licence, true
}

// HasLicence returns a boolean if a field has been set.
func (o *ClusterFeature) HasLicence() bool {
	if o != nil && o.Licence != nil {
		return true
	}

	return false
}

// SetLicence gets a reference to the given string and assigns it to the Licence field.
func (o *ClusterFeature) SetLicence(v string) {
	o.Licence = &v
}

func (o ClusterFeature) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FeatureKey != nil {
		toSerialize["feature-key"] = o.FeatureKey
	}
	if o.Licence != nil {
		toSerialize["licence"] = o.Licence
	}
	return json.Marshal(toSerialize)
}

type NullableClusterFeature struct {
	value *ClusterFeature
	isSet bool
}

func (v NullableClusterFeature) Get() *ClusterFeature {
	return v.value
}

func (v *NullableClusterFeature) Set(val *ClusterFeature) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterFeature) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterFeature) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterFeature(val *ClusterFeature) *NullableClusterFeature {
	return &NullableClusterFeature{value: val, isSet: true}
}

func (v NullableClusterFeature) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterFeature) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


