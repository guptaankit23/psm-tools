/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ApiBgpAsn struct for ApiBgpAsn
type ApiBgpAsn struct {
	ASNumber *int64 `json:"ASNumber,omitempty"`
}

// NewApiBgpAsn instantiates a new ApiBgpAsn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBgpAsn() *ApiBgpAsn {
	this := ApiBgpAsn{}
	return &this
}

// NewApiBgpAsnWithDefaults instantiates a new ApiBgpAsn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBgpAsnWithDefaults() *ApiBgpAsn {
	this := ApiBgpAsn{}
	return &this
}

// GetASNumber returns the ASNumber field value if set, zero value otherwise.
func (o *ApiBgpAsn) GetASNumber() int64 {
	if o == nil || o.ASNumber == nil {
		var ret int64
		return ret
	}
	return *o.ASNumber
}

// GetASNumberOk returns a tuple with the ASNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBgpAsn) GetASNumberOk() (*int64, bool) {
	if o == nil || o.ASNumber == nil {
		return nil, false
	}
	return o.ASNumber, true
}

// HasASNumber returns a boolean if a field has been set.
func (o *ApiBgpAsn) HasASNumber() bool {
	if o != nil && o.ASNumber != nil {
		return true
	}

	return false
}

// SetASNumber gets a reference to the given int64 and assigns it to the ASNumber field.
func (o *ApiBgpAsn) SetASNumber(v int64) {
	o.ASNumber = &v
}

func (o ApiBgpAsn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ASNumber != nil {
		toSerialize["ASNumber"] = o.ASNumber
	}
	return json.Marshal(toSerialize)
}

type NullableApiBgpAsn struct {
	value *ApiBgpAsn
	isSet bool
}

func (v NullableApiBgpAsn) Get() *ApiBgpAsn {
	return v.value
}

func (v *NullableApiBgpAsn) Set(val *ApiBgpAsn) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBgpAsn) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBgpAsn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBgpAsn(val *ApiBgpAsn) *NullableApiBgpAsn {
	return &NullableApiBgpAsn{value: val, isSet: true}
}

func (v NullableApiBgpAsn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBgpAsn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


