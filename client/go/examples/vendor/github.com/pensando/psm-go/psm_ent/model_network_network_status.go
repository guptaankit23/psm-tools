/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkNetworkStatus status part of network object.
type NetworkNetworkStatus struct {
	// allocated IPv4 addresses (bitmap).
	AllocatedIpv4Addrs *string `json:"allocated-ipv4-addrs,omitempty"`
	// Handle is the internal Handle allocated to this network.
	Id *string `json:"id,omitempty"`
	OperState *string `json:"oper-state,omitempty"`
	PropagationStatus *SecurityPropagationStatus `json:"propagation-status,omitempty"`
	// list of all workloads in this network.
	Workloads *[]string `json:"workloads,omitempty"`
}

// NewNetworkNetworkStatus instantiates a new NetworkNetworkStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkNetworkStatus() *NetworkNetworkStatus {
	this := NetworkNetworkStatus{}
	var operState string = "active"
	this.OperState = &operState
	return &this
}

// NewNetworkNetworkStatusWithDefaults instantiates a new NetworkNetworkStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkNetworkStatusWithDefaults() *NetworkNetworkStatus {
	this := NetworkNetworkStatus{}
	var operState string = "active"
	this.OperState = &operState
	return &this
}

// GetAllocatedIpv4Addrs returns the AllocatedIpv4Addrs field value if set, zero value otherwise.
func (o *NetworkNetworkStatus) GetAllocatedIpv4Addrs() string {
	if o == nil || o.AllocatedIpv4Addrs == nil {
		var ret string
		return ret
	}
	return *o.AllocatedIpv4Addrs
}

// GetAllocatedIpv4AddrsOk returns a tuple with the AllocatedIpv4Addrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkStatus) GetAllocatedIpv4AddrsOk() (*string, bool) {
	if o == nil || o.AllocatedIpv4Addrs == nil {
		return nil, false
	}
	return o.AllocatedIpv4Addrs, true
}

// HasAllocatedIpv4Addrs returns a boolean if a field has been set.
func (o *NetworkNetworkStatus) HasAllocatedIpv4Addrs() bool {
	if o != nil && o.AllocatedIpv4Addrs != nil {
		return true
	}

	return false
}

// SetAllocatedIpv4Addrs gets a reference to the given string and assigns it to the AllocatedIpv4Addrs field.
func (o *NetworkNetworkStatus) SetAllocatedIpv4Addrs(v string) {
	o.AllocatedIpv4Addrs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkNetworkStatus) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkStatus) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkNetworkStatus) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NetworkNetworkStatus) SetId(v string) {
	o.Id = &v
}

// GetOperState returns the OperState field value if set, zero value otherwise.
func (o *NetworkNetworkStatus) GetOperState() string {
	if o == nil || o.OperState == nil {
		var ret string
		return ret
	}
	return *o.OperState
}

// GetOperStateOk returns a tuple with the OperState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkStatus) GetOperStateOk() (*string, bool) {
	if o == nil || o.OperState == nil {
		return nil, false
	}
	return o.OperState, true
}

// HasOperState returns a boolean if a field has been set.
func (o *NetworkNetworkStatus) HasOperState() bool {
	if o != nil && o.OperState != nil {
		return true
	}

	return false
}

// SetOperState gets a reference to the given string and assigns it to the OperState field.
func (o *NetworkNetworkStatus) SetOperState(v string) {
	o.OperState = &v
}

// GetPropagationStatus returns the PropagationStatus field value if set, zero value otherwise.
func (o *NetworkNetworkStatus) GetPropagationStatus() SecurityPropagationStatus {
	if o == nil || o.PropagationStatus == nil {
		var ret SecurityPropagationStatus
		return ret
	}
	return *o.PropagationStatus
}

// GetPropagationStatusOk returns a tuple with the PropagationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkStatus) GetPropagationStatusOk() (*SecurityPropagationStatus, bool) {
	if o == nil || o.PropagationStatus == nil {
		return nil, false
	}
	return o.PropagationStatus, true
}

// HasPropagationStatus returns a boolean if a field has been set.
func (o *NetworkNetworkStatus) HasPropagationStatus() bool {
	if o != nil && o.PropagationStatus != nil {
		return true
	}

	return false
}

// SetPropagationStatus gets a reference to the given SecurityPropagationStatus and assigns it to the PropagationStatus field.
func (o *NetworkNetworkStatus) SetPropagationStatus(v SecurityPropagationStatus) {
	o.PropagationStatus = &v
}

// GetWorkloads returns the Workloads field value if set, zero value otherwise.
func (o *NetworkNetworkStatus) GetWorkloads() []string {
	if o == nil || o.Workloads == nil {
		var ret []string
		return ret
	}
	return *o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkStatus) GetWorkloadsOk() (*[]string, bool) {
	if o == nil || o.Workloads == nil {
		return nil, false
	}
	return o.Workloads, true
}

// HasWorkloads returns a boolean if a field has been set.
func (o *NetworkNetworkStatus) HasWorkloads() bool {
	if o != nil && o.Workloads != nil {
		return true
	}

	return false
}

// SetWorkloads gets a reference to the given []string and assigns it to the Workloads field.
func (o *NetworkNetworkStatus) SetWorkloads(v []string) {
	o.Workloads = &v
}

func (o NetworkNetworkStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllocatedIpv4Addrs != nil {
		toSerialize["allocated-ipv4-addrs"] = o.AllocatedIpv4Addrs
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OperState != nil {
		toSerialize["oper-state"] = o.OperState
	}
	if o.PropagationStatus != nil {
		toSerialize["propagation-status"] = o.PropagationStatus
	}
	if o.Workloads != nil {
		toSerialize["workloads"] = o.Workloads
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkNetworkStatus struct {
	value *NetworkNetworkStatus
	isSet bool
}

func (v NullableNetworkNetworkStatus) Get() *NetworkNetworkStatus {
	return v.value
}

func (v *NullableNetworkNetworkStatus) Set(val *NetworkNetworkStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkNetworkStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkNetworkStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkNetworkStatus(val *NetworkNetworkStatus) *NullableNetworkNetworkStatus {
	return &NullableNetworkNetworkStatus{value: val, isSet: true}
}

func (v NullableNetworkNetworkStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkNetworkStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


