/*
 * Workload API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
	"time"
)

// ApiListWatchOptions struct for ApiListWatchOptions
type ApiListWatchOptions struct {
	CreationTime *time.Time `json:"creation-time,omitempty"`
	// FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.
	FieldChangeSelector *[]string `json:"field-change-selector,omitempty"`
	// FieldSelector to select on field values in list or watch results.
	FieldSelector *string `json:"field-selector,omitempty"`
	// From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.
	From *int32 `json:"from,omitempty"`
	GenerationId *string `json:"generation-id,omitempty"`
	// LabelSelector to select on labels in list or watch results.
	LabelSelector *string `json:"label-selector,omitempty"`
	Labels *map[string]string `json:"labels,omitempty"`
	// MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.
	MaxResults *int32 `json:"max-results,omitempty"`
	// If MetaOnly is set to true, the watch event notification that matches the watch criteria will not contain the full object. It will only contain the information about the object that changed, i.e. which object and what changed. MetaOnly is not set by default.
	MetaOnly *bool `json:"meta-only,omitempty"`
	ModTime *time.Time `json:"mod-time,omitempty"`
	// Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.
	Name *string `json:"name,omitempty"`
	// Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.
	Namespace *string `json:"namespace,omitempty"`
	ResourceVersion *string `json:"resource-version,omitempty"`
	SelfLink *string `json:"self-link,omitempty"`
	// order to sort List results in.
	SortOrder *string `json:"sort-order,omitempty"`
	// Must be alpha-numerics. Length of string should be between 1 and 48.
	Tenant *string `json:"tenant,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewApiListWatchOptions instantiates a new ApiListWatchOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiListWatchOptions() *ApiListWatchOptions {
	this := ApiListWatchOptions{}
	var metaOnly bool = false
	this.MetaOnly = &metaOnly
	var sortOrder string = "none"
	this.SortOrder = &sortOrder
	return &this
}

// NewApiListWatchOptionsWithDefaults instantiates a new ApiListWatchOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiListWatchOptionsWithDefaults() *ApiListWatchOptions {
	this := ApiListWatchOptions{}
	var metaOnly bool = false
	this.MetaOnly = &metaOnly
	var sortOrder string = "none"
	this.SortOrder = &sortOrder
	return &this
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetCreationTime() time.Time {
	if o == nil || o.CreationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *ApiListWatchOptions) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetFieldChangeSelector returns the FieldChangeSelector field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetFieldChangeSelector() []string {
	if o == nil || o.FieldChangeSelector == nil {
		var ret []string
		return ret
	}
	return *o.FieldChangeSelector
}

// GetFieldChangeSelectorOk returns a tuple with the FieldChangeSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetFieldChangeSelectorOk() (*[]string, bool) {
	if o == nil || o.FieldChangeSelector == nil {
		return nil, false
	}
	return o.FieldChangeSelector, true
}

// HasFieldChangeSelector returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasFieldChangeSelector() bool {
	if o != nil && o.FieldChangeSelector != nil {
		return true
	}

	return false
}

// SetFieldChangeSelector gets a reference to the given []string and assigns it to the FieldChangeSelector field.
func (o *ApiListWatchOptions) SetFieldChangeSelector(v []string) {
	o.FieldChangeSelector = &v
}

// GetFieldSelector returns the FieldSelector field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetFieldSelector() string {
	if o == nil || o.FieldSelector == nil {
		var ret string
		return ret
	}
	return *o.FieldSelector
}

// GetFieldSelectorOk returns a tuple with the FieldSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetFieldSelectorOk() (*string, bool) {
	if o == nil || o.FieldSelector == nil {
		return nil, false
	}
	return o.FieldSelector, true
}

// HasFieldSelector returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasFieldSelector() bool {
	if o != nil && o.FieldSelector != nil {
		return true
	}

	return false
}

// SetFieldSelector gets a reference to the given string and assigns it to the FieldSelector field.
func (o *ApiListWatchOptions) SetFieldSelector(v string) {
	o.FieldSelector = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetFrom() int32 {
	if o == nil || o.From == nil {
		var ret int32
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetFromOk() (*int32, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int32 and assigns it to the From field.
func (o *ApiListWatchOptions) SetFrom(v int32) {
	o.From = &v
}

// GetGenerationId returns the GenerationId field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetGenerationId() string {
	if o == nil || o.GenerationId == nil {
		var ret string
		return ret
	}
	return *o.GenerationId
}

// GetGenerationIdOk returns a tuple with the GenerationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetGenerationIdOk() (*string, bool) {
	if o == nil || o.GenerationId == nil {
		return nil, false
	}
	return o.GenerationId, true
}

// HasGenerationId returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasGenerationId() bool {
	if o != nil && o.GenerationId != nil {
		return true
	}

	return false
}

// SetGenerationId gets a reference to the given string and assigns it to the GenerationId field.
func (o *ApiListWatchOptions) SetGenerationId(v string) {
	o.GenerationId = &v
}

// GetLabelSelector returns the LabelSelector field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetLabelSelector() string {
	if o == nil || o.LabelSelector == nil {
		var ret string
		return ret
	}
	return *o.LabelSelector
}

// GetLabelSelectorOk returns a tuple with the LabelSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetLabelSelectorOk() (*string, bool) {
	if o == nil || o.LabelSelector == nil {
		return nil, false
	}
	return o.LabelSelector, true
}

// HasLabelSelector returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasLabelSelector() bool {
	if o != nil && o.LabelSelector != nil {
		return true
	}

	return false
}

// SetLabelSelector gets a reference to the given string and assigns it to the LabelSelector field.
func (o *ApiListWatchOptions) SetLabelSelector(v string) {
	o.LabelSelector = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetLabels() map[string]string {
	if o == nil || o.Labels == nil {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *ApiListWatchOptions) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetMaxResults returns the MaxResults field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetMaxResults() int32 {
	if o == nil || o.MaxResults == nil {
		var ret int32
		return ret
	}
	return *o.MaxResults
}

// GetMaxResultsOk returns a tuple with the MaxResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetMaxResultsOk() (*int32, bool) {
	if o == nil || o.MaxResults == nil {
		return nil, false
	}
	return o.MaxResults, true
}

// HasMaxResults returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasMaxResults() bool {
	if o != nil && o.MaxResults != nil {
		return true
	}

	return false
}

// SetMaxResults gets a reference to the given int32 and assigns it to the MaxResults field.
func (o *ApiListWatchOptions) SetMaxResults(v int32) {
	o.MaxResults = &v
}

// GetMetaOnly returns the MetaOnly field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetMetaOnly() bool {
	if o == nil || o.MetaOnly == nil {
		var ret bool
		return ret
	}
	return *o.MetaOnly
}

// GetMetaOnlyOk returns a tuple with the MetaOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetMetaOnlyOk() (*bool, bool) {
	if o == nil || o.MetaOnly == nil {
		return nil, false
	}
	return o.MetaOnly, true
}

// HasMetaOnly returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasMetaOnly() bool {
	if o != nil && o.MetaOnly != nil {
		return true
	}

	return false
}

// SetMetaOnly gets a reference to the given bool and assigns it to the MetaOnly field.
func (o *ApiListWatchOptions) SetMetaOnly(v bool) {
	o.MetaOnly = &v
}

// GetModTime returns the ModTime field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetModTime() time.Time {
	if o == nil || o.ModTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ModTime
}

// GetModTimeOk returns a tuple with the ModTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetModTimeOk() (*time.Time, bool) {
	if o == nil || o.ModTime == nil {
		return nil, false
	}
	return o.ModTime, true
}

// HasModTime returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasModTime() bool {
	if o != nil && o.ModTime != nil {
		return true
	}

	return false
}

// SetModTime gets a reference to the given time.Time and assigns it to the ModTime field.
func (o *ApiListWatchOptions) SetModTime(v time.Time) {
	o.ModTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiListWatchOptions) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ApiListWatchOptions) SetNamespace(v string) {
	o.Namespace = &v
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetResourceVersion() string {
	if o == nil || o.ResourceVersion == nil {
		var ret string
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetResourceVersionOk() (*string, bool) {
	if o == nil || o.ResourceVersion == nil {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasResourceVersion() bool {
	if o != nil && o.ResourceVersion != nil {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given string and assigns it to the ResourceVersion field.
func (o *ApiListWatchOptions) SetResourceVersion(v string) {
	o.ResourceVersion = &v
}

// GetSelfLink returns the SelfLink field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetSelfLink() string {
	if o == nil || o.SelfLink == nil {
		var ret string
		return ret
	}
	return *o.SelfLink
}

// GetSelfLinkOk returns a tuple with the SelfLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetSelfLinkOk() (*string, bool) {
	if o == nil || o.SelfLink == nil {
		return nil, false
	}
	return o.SelfLink, true
}

// HasSelfLink returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasSelfLink() bool {
	if o != nil && o.SelfLink != nil {
		return true
	}

	return false
}

// SetSelfLink gets a reference to the given string and assigns it to the SelfLink field.
func (o *ApiListWatchOptions) SetSelfLink(v string) {
	o.SelfLink = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetSortOrder() string {
	if o == nil || o.SortOrder == nil {
		var ret string
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetSortOrderOk() (*string, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given string and assigns it to the SortOrder field.
func (o *ApiListWatchOptions) SetSortOrder(v string) {
	o.SortOrder = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetTenant() string {
	if o == nil || o.Tenant == nil {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetTenantOk() (*string, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *ApiListWatchOptions) SetTenant(v string) {
	o.Tenant = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ApiListWatchOptions) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListWatchOptions) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ApiListWatchOptions) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ApiListWatchOptions) SetUuid(v string) {
	o.Uuid = &v
}

func (o ApiListWatchOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreationTime != nil {
		toSerialize["creation-time"] = o.CreationTime
	}
	if o.FieldChangeSelector != nil {
		toSerialize["field-change-selector"] = o.FieldChangeSelector
	}
	if o.FieldSelector != nil {
		toSerialize["field-selector"] = o.FieldSelector
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.GenerationId != nil {
		toSerialize["generation-id"] = o.GenerationId
	}
	if o.LabelSelector != nil {
		toSerialize["label-selector"] = o.LabelSelector
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.MaxResults != nil {
		toSerialize["max-results"] = o.MaxResults
	}
	if o.MetaOnly != nil {
		toSerialize["meta-only"] = o.MetaOnly
	}
	if o.ModTime != nil {
		toSerialize["mod-time"] = o.ModTime
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.ResourceVersion != nil {
		toSerialize["resource-version"] = o.ResourceVersion
	}
	if o.SelfLink != nil {
		toSerialize["self-link"] = o.SelfLink
	}
	if o.SortOrder != nil {
		toSerialize["sort-order"] = o.SortOrder
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableApiListWatchOptions struct {
	value *ApiListWatchOptions
	isSet bool
}

func (v NullableApiListWatchOptions) Get() *ApiListWatchOptions {
	return v.value
}

func (v *NullableApiListWatchOptions) Set(val *ApiListWatchOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableApiListWatchOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableApiListWatchOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiListWatchOptions(val *ApiListWatchOptions) *NullableApiListWatchOptions {
	return &NullableApiListWatchOptions{value: val, isSet: true}
}

func (v NullableApiListWatchOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiListWatchOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


