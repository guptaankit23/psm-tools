/*
 * Rollout API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
	"time"
)

// RolloutRolloutPhase RolloutPhase gives details of status of Rollout on each Node/Service/DistributedServiceCard.
type RolloutRolloutPhase struct {
	// Time at which rollout completed for this node/service.
	EndTime *time.Time `json:"end-time,omitempty"`
	// A detailed message indicating details about the transition.
	Message *string `json:"message,omitempty"`
	// Name of the Node, Service or DistributedServiceCard.
	Name *string `json:"name,omitempty"`
	// Number of retries rollout performed.
	NumRetries *int64 `json:"num-retries,omitempty"`
	// Phase indicates a certain rollout phase/condition.
	Phase *string `json:"phase,omitempty"`
	// The reason for the Phase last transition, if any.
	Reason *string `json:"reason,omitempty"`
	// The time of starting the rollout for this node/service. This does not include the pre-check which can happen way before the actual rollout.
	StartTime *time.Time `json:"start-time,omitempty"`
}

// NewRolloutRolloutPhase instantiates a new RolloutRolloutPhase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolloutRolloutPhase() *RolloutRolloutPhase {
	this := RolloutRolloutPhase{}
	var numRetries int64 = 0
	this.NumRetries = &numRetries
	var phase string = "pre-check"
	this.Phase = &phase
	return &this
}

// NewRolloutRolloutPhaseWithDefaults instantiates a new RolloutRolloutPhase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolloutRolloutPhaseWithDefaults() *RolloutRolloutPhase {
	this := RolloutRolloutPhase{}
	var numRetries int64 = 0
	this.NumRetries = &numRetries
	var phase string = "pre-check"
	this.Phase = &phase
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *RolloutRolloutPhase) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolloutRolloutPhase) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *RolloutRolloutPhase) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *RolloutRolloutPhase) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RolloutRolloutPhase) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolloutRolloutPhase) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RolloutRolloutPhase) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RolloutRolloutPhase) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RolloutRolloutPhase) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolloutRolloutPhase) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RolloutRolloutPhase) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RolloutRolloutPhase) SetName(v string) {
	o.Name = &v
}

// GetNumRetries returns the NumRetries field value if set, zero value otherwise.
func (o *RolloutRolloutPhase) GetNumRetries() int64 {
	if o == nil || o.NumRetries == nil {
		var ret int64
		return ret
	}
	return *o.NumRetries
}

// GetNumRetriesOk returns a tuple with the NumRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolloutRolloutPhase) GetNumRetriesOk() (*int64, bool) {
	if o == nil || o.NumRetries == nil {
		return nil, false
	}
	return o.NumRetries, true
}

// HasNumRetries returns a boolean if a field has been set.
func (o *RolloutRolloutPhase) HasNumRetries() bool {
	if o != nil && o.NumRetries != nil {
		return true
	}

	return false
}

// SetNumRetries gets a reference to the given int64 and assigns it to the NumRetries field.
func (o *RolloutRolloutPhase) SetNumRetries(v int64) {
	o.NumRetries = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *RolloutRolloutPhase) GetPhase() string {
	if o == nil || o.Phase == nil {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolloutRolloutPhase) GetPhaseOk() (*string, bool) {
	if o == nil || o.Phase == nil {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *RolloutRolloutPhase) HasPhase() bool {
	if o != nil && o.Phase != nil {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *RolloutRolloutPhase) SetPhase(v string) {
	o.Phase = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *RolloutRolloutPhase) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolloutRolloutPhase) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *RolloutRolloutPhase) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *RolloutRolloutPhase) SetReason(v string) {
	o.Reason = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *RolloutRolloutPhase) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolloutRolloutPhase) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *RolloutRolloutPhase) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *RolloutRolloutPhase) SetStartTime(v time.Time) {
	o.StartTime = &v
}

func (o RolloutRolloutPhase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndTime != nil {
		toSerialize["end-time"] = o.EndTime
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NumRetries != nil {
		toSerialize["num-retries"] = o.NumRetries
	}
	if o.Phase != nil {
		toSerialize["phase"] = o.Phase
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.StartTime != nil {
		toSerialize["start-time"] = o.StartTime
	}
	return json.Marshal(toSerialize)
}

type NullableRolloutRolloutPhase struct {
	value *RolloutRolloutPhase
	isSet bool
}

func (v NullableRolloutRolloutPhase) Get() *RolloutRolloutPhase {
	return v.value
}

func (v *NullableRolloutRolloutPhase) Set(val *RolloutRolloutPhase) {
	v.value = val
	v.isSet = true
}

func (v NullableRolloutRolloutPhase) IsSet() bool {
	return v.isSet
}

func (v *NullableRolloutRolloutPhase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolloutRolloutPhase(val *RolloutRolloutPhase) *NullableRolloutRolloutPhase {
	return &NullableRolloutRolloutPhase{value: val, isSet: true}
}

func (v NullableRolloutRolloutPhase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolloutRolloutPhase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


