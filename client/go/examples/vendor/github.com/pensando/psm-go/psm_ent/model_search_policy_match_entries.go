/*
 * Search API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SearchPolicyMatchEntries PolicyMatchEntries multiple PolicyMatchEntry in entries.
type SearchPolicyMatchEntries struct {
	Entries *[]SearchPolicyMatchEntry `json:"entries,omitempty"`
}

// NewSearchPolicyMatchEntries instantiates a new SearchPolicyMatchEntries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchPolicyMatchEntries() *SearchPolicyMatchEntries {
	this := SearchPolicyMatchEntries{}
	return &this
}

// NewSearchPolicyMatchEntriesWithDefaults instantiates a new SearchPolicyMatchEntries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchPolicyMatchEntriesWithDefaults() *SearchPolicyMatchEntries {
	this := SearchPolicyMatchEntries{}
	return &this
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *SearchPolicyMatchEntries) GetEntries() []SearchPolicyMatchEntry {
	if o == nil || o.Entries == nil {
		var ret []SearchPolicyMatchEntry
		return ret
	}
	return *o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchPolicyMatchEntries) GetEntriesOk() (*[]SearchPolicyMatchEntry, bool) {
	if o == nil || o.Entries == nil {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *SearchPolicyMatchEntries) HasEntries() bool {
	if o != nil && o.Entries != nil {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []SearchPolicyMatchEntry and assigns it to the Entries field.
func (o *SearchPolicyMatchEntries) SetEntries(v []SearchPolicyMatchEntry) {
	o.Entries = &v
}

func (o SearchPolicyMatchEntries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entries != nil {
		toSerialize["entries"] = o.Entries
	}
	return json.Marshal(toSerialize)
}

type NullableSearchPolicyMatchEntries struct {
	value *SearchPolicyMatchEntries
	isSet bool
}

func (v NullableSearchPolicyMatchEntries) Get() *SearchPolicyMatchEntries {
	return v.value
}

func (v *NullableSearchPolicyMatchEntries) Set(val *SearchPolicyMatchEntries) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchPolicyMatchEntries) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchPolicyMatchEntries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchPolicyMatchEntries(val *SearchPolicyMatchEntries) *NullableSearchPolicyMatchEntries {
	return &NullableSearchPolicyMatchEntries{value: val, isSet: true}
}

func (v NullableSearchPolicyMatchEntries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchPolicyMatchEntries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


