/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringAuthConfig AuthConfig contains the configuration for SNMP Trap authentication.
type MonitoringAuthConfig struct {
	Algo *string `json:"algo,omitempty"`
	// Password contains the authentication password.
	Password *string `json:"password,omitempty"`
}

// NewMonitoringAuthConfig instantiates a new MonitoringAuthConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringAuthConfig() *MonitoringAuthConfig {
	this := MonitoringAuthConfig{}
	var algo string = "md5"
	this.Algo = &algo
	return &this
}

// NewMonitoringAuthConfigWithDefaults instantiates a new MonitoringAuthConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringAuthConfigWithDefaults() *MonitoringAuthConfig {
	this := MonitoringAuthConfig{}
	var algo string = "md5"
	this.Algo = &algo
	return &this
}

// GetAlgo returns the Algo field value if set, zero value otherwise.
func (o *MonitoringAuthConfig) GetAlgo() string {
	if o == nil || o.Algo == nil {
		var ret string
		return ret
	}
	return *o.Algo
}

// GetAlgoOk returns a tuple with the Algo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAuthConfig) GetAlgoOk() (*string, bool) {
	if o == nil || o.Algo == nil {
		return nil, false
	}
	return o.Algo, true
}

// HasAlgo returns a boolean if a field has been set.
func (o *MonitoringAuthConfig) HasAlgo() bool {
	if o != nil && o.Algo != nil {
		return true
	}

	return false
}

// SetAlgo gets a reference to the given string and assigns it to the Algo field.
func (o *MonitoringAuthConfig) SetAlgo(v string) {
	o.Algo = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MonitoringAuthConfig) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAuthConfig) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MonitoringAuthConfig) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MonitoringAuthConfig) SetPassword(v string) {
	o.Password = &v
}

func (o MonitoringAuthConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Algo != nil {
		toSerialize["algo"] = o.Algo
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringAuthConfig struct {
	value *MonitoringAuthConfig
	isSet bool
}

func (v NullableMonitoringAuthConfig) Get() *MonitoringAuthConfig {
	return v.value
}

func (v *NullableMonitoringAuthConfig) Set(val *MonitoringAuthConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringAuthConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringAuthConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringAuthConfig(val *MonitoringAuthConfig) *NullableMonitoringAuthConfig {
	return &NullableMonitoringAuthConfig{value: val, isSet: true}
}

func (v NullableMonitoringAuthConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringAuthConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


