/*
 * Browser API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// BrowserBrowseRequest BrowseRequest is the query request for the dependency tree.
type BrowserBrowseRequest struct {
	ApiVersion *string `json:"api-version,omitempty"`
	CountOnly *bool `json:"count-only,omitempty"`
	Kind *string `json:"kind,omitempty"`
	KindFilters *[]string `json:"kind-filters,omitempty"`
	MaxDepth *int64 `json:"max-depth,omitempty"`
	Meta *ApiObjectMeta `json:"meta,omitempty"`
	QueryType *string `json:"query-type,omitempty"`
	// Length of string should be between 2 and 512.
	Uri *string `json:"uri,omitempty"`
}

// NewBrowserBrowseRequest instantiates a new BrowserBrowseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrowserBrowseRequest() *BrowserBrowseRequest {
	this := BrowserBrowseRequest{}
	var maxDepth int64 = 1
	this.MaxDepth = &maxDepth
	var queryType string = "dependencies"
	this.QueryType = &queryType
	return &this
}

// NewBrowserBrowseRequestWithDefaults instantiates a new BrowserBrowseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrowserBrowseRequestWithDefaults() *BrowserBrowseRequest {
	this := BrowserBrowseRequest{}
	var maxDepth int64 = 1
	this.MaxDepth = &maxDepth
	var queryType string = "dependencies"
	this.QueryType = &queryType
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *BrowserBrowseRequest) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetCountOnly returns the CountOnly field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetCountOnly() bool {
	if o == nil || o.CountOnly == nil {
		var ret bool
		return ret
	}
	return *o.CountOnly
}

// GetCountOnlyOk returns a tuple with the CountOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetCountOnlyOk() (*bool, bool) {
	if o == nil || o.CountOnly == nil {
		return nil, false
	}
	return o.CountOnly, true
}

// HasCountOnly returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasCountOnly() bool {
	if o != nil && o.CountOnly != nil {
		return true
	}

	return false
}

// SetCountOnly gets a reference to the given bool and assigns it to the CountOnly field.
func (o *BrowserBrowseRequest) SetCountOnly(v bool) {
	o.CountOnly = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *BrowserBrowseRequest) SetKind(v string) {
	o.Kind = &v
}

// GetKindFilters returns the KindFilters field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetKindFilters() []string {
	if o == nil || o.KindFilters == nil {
		var ret []string
		return ret
	}
	return *o.KindFilters
}

// GetKindFiltersOk returns a tuple with the KindFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetKindFiltersOk() (*[]string, bool) {
	if o == nil || o.KindFilters == nil {
		return nil, false
	}
	return o.KindFilters, true
}

// HasKindFilters returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasKindFilters() bool {
	if o != nil && o.KindFilters != nil {
		return true
	}

	return false
}

// SetKindFilters gets a reference to the given []string and assigns it to the KindFilters field.
func (o *BrowserBrowseRequest) SetKindFilters(v []string) {
	o.KindFilters = &v
}

// GetMaxDepth returns the MaxDepth field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetMaxDepth() int64 {
	if o == nil || o.MaxDepth == nil {
		var ret int64
		return ret
	}
	return *o.MaxDepth
}

// GetMaxDepthOk returns a tuple with the MaxDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetMaxDepthOk() (*int64, bool) {
	if o == nil || o.MaxDepth == nil {
		return nil, false
	}
	return o.MaxDepth, true
}

// HasMaxDepth returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasMaxDepth() bool {
	if o != nil && o.MaxDepth != nil {
		return true
	}

	return false
}

// SetMaxDepth gets a reference to the given int64 and assigns it to the MaxDepth field.
func (o *BrowserBrowseRequest) SetMaxDepth(v int64) {
	o.MaxDepth = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetMeta() ApiObjectMeta {
	if o == nil || o.Meta == nil {
		var ret ApiObjectMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetMetaOk() (*ApiObjectMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ApiObjectMeta and assigns it to the Meta field.
func (o *BrowserBrowseRequest) SetMeta(v ApiObjectMeta) {
	o.Meta = &v
}

// GetQueryType returns the QueryType field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetQueryType() string {
	if o == nil || o.QueryType == nil {
		var ret string
		return ret
	}
	return *o.QueryType
}

// GetQueryTypeOk returns a tuple with the QueryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetQueryTypeOk() (*string, bool) {
	if o == nil || o.QueryType == nil {
		return nil, false
	}
	return o.QueryType, true
}

// HasQueryType returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasQueryType() bool {
	if o != nil && o.QueryType != nil {
		return true
	}

	return false
}

// SetQueryType gets a reference to the given string and assigns it to the QueryType field.
func (o *BrowserBrowseRequest) SetQueryType(v string) {
	o.QueryType = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *BrowserBrowseRequest) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequest) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *BrowserBrowseRequest) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *BrowserBrowseRequest) SetUri(v string) {
	o.Uri = &v
}

func (o BrowserBrowseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api-version"] = o.ApiVersion
	}
	if o.CountOnly != nil {
		toSerialize["count-only"] = o.CountOnly
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.KindFilters != nil {
		toSerialize["kind-filters"] = o.KindFilters
	}
	if o.MaxDepth != nil {
		toSerialize["max-depth"] = o.MaxDepth
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.QueryType != nil {
		toSerialize["query-type"] = o.QueryType
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableBrowserBrowseRequest struct {
	value *BrowserBrowseRequest
	isSet bool
}

func (v NullableBrowserBrowseRequest) Get() *BrowserBrowseRequest {
	return v.value
}

func (v *NullableBrowserBrowseRequest) Set(val *BrowserBrowseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBrowserBrowseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBrowserBrowseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrowserBrowseRequest(val *BrowserBrowseRequest) *NullableBrowserBrowseRequest {
	return &NullableBrowserBrowseRequest{value: val, isSet: true}
}

func (v NullableBrowserBrowseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrowserBrowseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


