/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkBGPNeighbor struct for NetworkBGPNeighbor
type NetworkBGPNeighbor struct {
	// AllowASIn allows local ASN to be in received routes. The value indicates how many instances are allowed. 0 disables the feature. Value should be between 0 and 255.
	AllowAsIn *int64 `json:"allow-as-in,omitempty"`
	// DSCAutoConfig sets the flag that this neighbor config is to be used as a template for auto configuration.
	DscAutoConfig *bool `json:"dsc-auto-config,omitempty"`
	// Address families to enable on the neighbor.
	EnableAddressFamilies *[]string `json:"enable-address-families,omitempty"`
	// Holdtime is time for which not receiving a keepalive message results in declaring the peer as dead. Value should be between 0 and 3600.
	Holdtime *int64 `json:"holdtime,omitempty"`
	// Neighbor IP Address. Should be a valid v4 or v6 IP address.
	IpAddress *string `json:"ip-address,omitempty"`
	// KeepaliveInterval is time interval at which keepalive messages are sent. Value should be between 0 and 3600.
	KeepaliveInterval *int64 `json:"keepalive-interval,omitempty"`
	// BGP Multihop configuration. Value should be between 1 and 255.
	MultiHop *int64 `json:"multi-hop,omitempty"`
	// Enable Password authentication. Disabled if the string is empty. Length of string should be between 1 and 128.
	Password *string `json:"password,omitempty"`
	RemoteAs *ApiBgpAsn `json:"remote-as,omitempty"`
	// Shutdown this neighbor session.
	Shutdown *bool `json:"shutdown,omitempty"`
}

// NewNetworkBGPNeighbor instantiates a new NetworkBGPNeighbor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkBGPNeighbor() *NetworkBGPNeighbor {
	this := NetworkBGPNeighbor{}
	var multiHop int64 = 64
	this.MultiHop = &multiHop
	return &this
}

// NewNetworkBGPNeighborWithDefaults instantiates a new NetworkBGPNeighbor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkBGPNeighborWithDefaults() *NetworkBGPNeighbor {
	this := NetworkBGPNeighbor{}
	var multiHop int64 = 64
	this.MultiHop = &multiHop
	return &this
}

// GetAllowAsIn returns the AllowAsIn field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetAllowAsIn() int64 {
	if o == nil || o.AllowAsIn == nil {
		var ret int64
		return ret
	}
	return *o.AllowAsIn
}

// GetAllowAsInOk returns a tuple with the AllowAsIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetAllowAsInOk() (*int64, bool) {
	if o == nil || o.AllowAsIn == nil {
		return nil, false
	}
	return o.AllowAsIn, true
}

// HasAllowAsIn returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasAllowAsIn() bool {
	if o != nil && o.AllowAsIn != nil {
		return true
	}

	return false
}

// SetAllowAsIn gets a reference to the given int64 and assigns it to the AllowAsIn field.
func (o *NetworkBGPNeighbor) SetAllowAsIn(v int64) {
	o.AllowAsIn = &v
}

// GetDscAutoConfig returns the DscAutoConfig field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetDscAutoConfig() bool {
	if o == nil || o.DscAutoConfig == nil {
		var ret bool
		return ret
	}
	return *o.DscAutoConfig
}

// GetDscAutoConfigOk returns a tuple with the DscAutoConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetDscAutoConfigOk() (*bool, bool) {
	if o == nil || o.DscAutoConfig == nil {
		return nil, false
	}
	return o.DscAutoConfig, true
}

// HasDscAutoConfig returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasDscAutoConfig() bool {
	if o != nil && o.DscAutoConfig != nil {
		return true
	}

	return false
}

// SetDscAutoConfig gets a reference to the given bool and assigns it to the DscAutoConfig field.
func (o *NetworkBGPNeighbor) SetDscAutoConfig(v bool) {
	o.DscAutoConfig = &v
}

// GetEnableAddressFamilies returns the EnableAddressFamilies field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetEnableAddressFamilies() []string {
	if o == nil || o.EnableAddressFamilies == nil {
		var ret []string
		return ret
	}
	return *o.EnableAddressFamilies
}

// GetEnableAddressFamiliesOk returns a tuple with the EnableAddressFamilies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetEnableAddressFamiliesOk() (*[]string, bool) {
	if o == nil || o.EnableAddressFamilies == nil {
		return nil, false
	}
	return o.EnableAddressFamilies, true
}

// HasEnableAddressFamilies returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasEnableAddressFamilies() bool {
	if o != nil && o.EnableAddressFamilies != nil {
		return true
	}

	return false
}

// SetEnableAddressFamilies gets a reference to the given []string and assigns it to the EnableAddressFamilies field.
func (o *NetworkBGPNeighbor) SetEnableAddressFamilies(v []string) {
	o.EnableAddressFamilies = &v
}

// GetHoldtime returns the Holdtime field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetHoldtime() int64 {
	if o == nil || o.Holdtime == nil {
		var ret int64
		return ret
	}
	return *o.Holdtime
}

// GetHoldtimeOk returns a tuple with the Holdtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetHoldtimeOk() (*int64, bool) {
	if o == nil || o.Holdtime == nil {
		return nil, false
	}
	return o.Holdtime, true
}

// HasHoldtime returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasHoldtime() bool {
	if o != nil && o.Holdtime != nil {
		return true
	}

	return false
}

// SetHoldtime gets a reference to the given int64 and assigns it to the Holdtime field.
func (o *NetworkBGPNeighbor) SetHoldtime(v int64) {
	o.Holdtime = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *NetworkBGPNeighbor) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetKeepaliveInterval returns the KeepaliveInterval field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetKeepaliveInterval() int64 {
	if o == nil || o.KeepaliveInterval == nil {
		var ret int64
		return ret
	}
	return *o.KeepaliveInterval
}

// GetKeepaliveIntervalOk returns a tuple with the KeepaliveInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetKeepaliveIntervalOk() (*int64, bool) {
	if o == nil || o.KeepaliveInterval == nil {
		return nil, false
	}
	return o.KeepaliveInterval, true
}

// HasKeepaliveInterval returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasKeepaliveInterval() bool {
	if o != nil && o.KeepaliveInterval != nil {
		return true
	}

	return false
}

// SetKeepaliveInterval gets a reference to the given int64 and assigns it to the KeepaliveInterval field.
func (o *NetworkBGPNeighbor) SetKeepaliveInterval(v int64) {
	o.KeepaliveInterval = &v
}

// GetMultiHop returns the MultiHop field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetMultiHop() int64 {
	if o == nil || o.MultiHop == nil {
		var ret int64
		return ret
	}
	return *o.MultiHop
}

// GetMultiHopOk returns a tuple with the MultiHop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetMultiHopOk() (*int64, bool) {
	if o == nil || o.MultiHop == nil {
		return nil, false
	}
	return o.MultiHop, true
}

// HasMultiHop returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasMultiHop() bool {
	if o != nil && o.MultiHop != nil {
		return true
	}

	return false
}

// SetMultiHop gets a reference to the given int64 and assigns it to the MultiHop field.
func (o *NetworkBGPNeighbor) SetMultiHop(v int64) {
	o.MultiHop = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *NetworkBGPNeighbor) SetPassword(v string) {
	o.Password = &v
}

// GetRemoteAs returns the RemoteAs field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetRemoteAs() ApiBgpAsn {
	if o == nil || o.RemoteAs == nil {
		var ret ApiBgpAsn
		return ret
	}
	return *o.RemoteAs
}

// GetRemoteAsOk returns a tuple with the RemoteAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetRemoteAsOk() (*ApiBgpAsn, bool) {
	if o == nil || o.RemoteAs == nil {
		return nil, false
	}
	return o.RemoteAs, true
}

// HasRemoteAs returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasRemoteAs() bool {
	if o != nil && o.RemoteAs != nil {
		return true
	}

	return false
}

// SetRemoteAs gets a reference to the given ApiBgpAsn and assigns it to the RemoteAs field.
func (o *NetworkBGPNeighbor) SetRemoteAs(v ApiBgpAsn) {
	o.RemoteAs = &v
}

// GetShutdown returns the Shutdown field value if set, zero value otherwise.
func (o *NetworkBGPNeighbor) GetShutdown() bool {
	if o == nil || o.Shutdown == nil {
		var ret bool
		return ret
	}
	return *o.Shutdown
}

// GetShutdownOk returns a tuple with the Shutdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBGPNeighbor) GetShutdownOk() (*bool, bool) {
	if o == nil || o.Shutdown == nil {
		return nil, false
	}
	return o.Shutdown, true
}

// HasShutdown returns a boolean if a field has been set.
func (o *NetworkBGPNeighbor) HasShutdown() bool {
	if o != nil && o.Shutdown != nil {
		return true
	}

	return false
}

// SetShutdown gets a reference to the given bool and assigns it to the Shutdown field.
func (o *NetworkBGPNeighbor) SetShutdown(v bool) {
	o.Shutdown = &v
}

func (o NetworkBGPNeighbor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowAsIn != nil {
		toSerialize["allow-as-in"] = o.AllowAsIn
	}
	if o.DscAutoConfig != nil {
		toSerialize["dsc-auto-config"] = o.DscAutoConfig
	}
	if o.EnableAddressFamilies != nil {
		toSerialize["enable-address-families"] = o.EnableAddressFamilies
	}
	if o.Holdtime != nil {
		toSerialize["holdtime"] = o.Holdtime
	}
	if o.IpAddress != nil {
		toSerialize["ip-address"] = o.IpAddress
	}
	if o.KeepaliveInterval != nil {
		toSerialize["keepalive-interval"] = o.KeepaliveInterval
	}
	if o.MultiHop != nil {
		toSerialize["multi-hop"] = o.MultiHop
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.RemoteAs != nil {
		toSerialize["remote-as"] = o.RemoteAs
	}
	if o.Shutdown != nil {
		toSerialize["shutdown"] = o.Shutdown
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkBGPNeighbor struct {
	value *NetworkBGPNeighbor
	isSet bool
}

func (v NullableNetworkBGPNeighbor) Get() *NetworkBGPNeighbor {
	return v.value
}

func (v *NullableNetworkBGPNeighbor) Set(val *NetworkBGPNeighbor) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkBGPNeighbor) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkBGPNeighbor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkBGPNeighbor(val *NetworkBGPNeighbor) *NullableNetworkBGPNeighbor {
	return &NullableNetworkBGPNeighbor{value: val, isSet: true}
}

func (v NullableNetworkBGPNeighbor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkBGPNeighbor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


