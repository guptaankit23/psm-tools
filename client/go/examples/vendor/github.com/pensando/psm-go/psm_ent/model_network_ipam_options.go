/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkIPAMOptions struct for NetworkIPAMOptions
type NetworkIPAMOptions struct {
	ClasslessStaticRoutes *[]NetworkClasslessStaticRoute `json:"classless-static-routes,omitempty"`
	Lease *int64 `json:"lease,omitempty"`
	Routers *[]string `json:"routers,omitempty"`
}

// NewNetworkIPAMOptions instantiates a new NetworkIPAMOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkIPAMOptions() *NetworkIPAMOptions {
	this := NetworkIPAMOptions{}
	return &this
}

// NewNetworkIPAMOptionsWithDefaults instantiates a new NetworkIPAMOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkIPAMOptionsWithDefaults() *NetworkIPAMOptions {
	this := NetworkIPAMOptions{}
	return &this
}

// GetClasslessStaticRoutes returns the ClasslessStaticRoutes field value if set, zero value otherwise.
func (o *NetworkIPAMOptions) GetClasslessStaticRoutes() []NetworkClasslessStaticRoute {
	if o == nil || o.ClasslessStaticRoutes == nil {
		var ret []NetworkClasslessStaticRoute
		return ret
	}
	return *o.ClasslessStaticRoutes
}

// GetClasslessStaticRoutesOk returns a tuple with the ClasslessStaticRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkIPAMOptions) GetClasslessStaticRoutesOk() (*[]NetworkClasslessStaticRoute, bool) {
	if o == nil || o.ClasslessStaticRoutes == nil {
		return nil, false
	}
	return o.ClasslessStaticRoutes, true
}

// HasClasslessStaticRoutes returns a boolean if a field has been set.
func (o *NetworkIPAMOptions) HasClasslessStaticRoutes() bool {
	if o != nil && o.ClasslessStaticRoutes != nil {
		return true
	}

	return false
}

// SetClasslessStaticRoutes gets a reference to the given []NetworkClasslessStaticRoute and assigns it to the ClasslessStaticRoutes field.
func (o *NetworkIPAMOptions) SetClasslessStaticRoutes(v []NetworkClasslessStaticRoute) {
	o.ClasslessStaticRoutes = &v
}

// GetLease returns the Lease field value if set, zero value otherwise.
func (o *NetworkIPAMOptions) GetLease() int64 {
	if o == nil || o.Lease == nil {
		var ret int64
		return ret
	}
	return *o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkIPAMOptions) GetLeaseOk() (*int64, bool) {
	if o == nil || o.Lease == nil {
		return nil, false
	}
	return o.Lease, true
}

// HasLease returns a boolean if a field has been set.
func (o *NetworkIPAMOptions) HasLease() bool {
	if o != nil && o.Lease != nil {
		return true
	}

	return false
}

// SetLease gets a reference to the given int64 and assigns it to the Lease field.
func (o *NetworkIPAMOptions) SetLease(v int64) {
	o.Lease = &v
}

// GetRouters returns the Routers field value if set, zero value otherwise.
func (o *NetworkIPAMOptions) GetRouters() []string {
	if o == nil || o.Routers == nil {
		var ret []string
		return ret
	}
	return *o.Routers
}

// GetRoutersOk returns a tuple with the Routers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkIPAMOptions) GetRoutersOk() (*[]string, bool) {
	if o == nil || o.Routers == nil {
		return nil, false
	}
	return o.Routers, true
}

// HasRouters returns a boolean if a field has been set.
func (o *NetworkIPAMOptions) HasRouters() bool {
	if o != nil && o.Routers != nil {
		return true
	}

	return false
}

// SetRouters gets a reference to the given []string and assigns it to the Routers field.
func (o *NetworkIPAMOptions) SetRouters(v []string) {
	o.Routers = &v
}

func (o NetworkIPAMOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClasslessStaticRoutes != nil {
		toSerialize["classless-static-routes"] = o.ClasslessStaticRoutes
	}
	if o.Lease != nil {
		toSerialize["lease"] = o.Lease
	}
	if o.Routers != nil {
		toSerialize["routers"] = o.Routers
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkIPAMOptions struct {
	value *NetworkIPAMOptions
	isSet bool
}

func (v NullableNetworkIPAMOptions) Get() *NetworkIPAMOptions {
	return v.value
}

func (v *NullableNetworkIPAMOptions) Set(val *NetworkIPAMOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkIPAMOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkIPAMOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkIPAMOptions(val *NetworkIPAMOptions) *NullableNetworkIPAMOptions {
	return &NullableNetworkIPAMOptions{value: val, isSet: true}
}

func (v NullableNetworkIPAMOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkIPAMOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


