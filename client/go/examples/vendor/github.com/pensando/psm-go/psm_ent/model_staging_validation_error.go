/*
 * Staging API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// StagingValidationError struct for StagingValidationError
type StagingValidationError struct {
	Error *[]string `json:"error,omitempty"`
	Method *string `json:"method,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewStagingValidationError instantiates a new StagingValidationError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagingValidationError() *StagingValidationError {
	this := StagingValidationError{}
	return &this
}

// NewStagingValidationErrorWithDefaults instantiates a new StagingValidationError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagingValidationErrorWithDefaults() *StagingValidationError {
	this := StagingValidationError{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *StagingValidationError) GetError() []string {
	if o == nil || o.Error == nil {
		var ret []string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingValidationError) GetErrorOk() (*[]string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *StagingValidationError) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given []string and assigns it to the Error field.
func (o *StagingValidationError) SetError(v []string) {
	o.Error = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *StagingValidationError) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingValidationError) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *StagingValidationError) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *StagingValidationError) SetMethod(v string) {
	o.Method = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *StagingValidationError) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingValidationError) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *StagingValidationError) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *StagingValidationError) SetUri(v string) {
	o.Uri = &v
}

func (o StagingValidationError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableStagingValidationError struct {
	value *StagingValidationError
	isSet bool
}

func (v NullableStagingValidationError) Get() *StagingValidationError {
	return v.value
}

func (v *NullableStagingValidationError) Set(val *StagingValidationError) {
	v.value = val
	v.isSet = true
}

func (v NullableStagingValidationError) IsSet() bool {
	return v.isSet
}

func (v *NullableStagingValidationError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagingValidationError(val *StagingValidationError) *NullableStagingValidationError {
	return &NullableStagingValidationError{value: val, isSet: true}
}

func (v NullableStagingValidationError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagingValidationError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


