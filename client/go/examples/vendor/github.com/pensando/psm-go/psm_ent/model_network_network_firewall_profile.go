/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkNetworkFirewallProfile Firewall features that can be enabled on the network Interaction with the global firewall profile setting is as follows: If the feature is disabled at the global and network levels, the feature is disabled on the network If the feature is enabled at the global and network levels, the feature is enabled on the network If the feature is disabled at the global level and enabled at the network, the feature is enabled on the network If the feature is enabled at the global level and disabled at the network level, the feature is enabled on the network. So to turn off the feature on a network, the feature must be disabled at both the global and network levels.
type NetworkNetworkFirewallProfile struct {
	// EnableFwLogging enables flow logging on the network.
	EnableFwLogging *bool `json:"enable-fw-logging,omitempty"`
}

// NewNetworkNetworkFirewallProfile instantiates a new NetworkNetworkFirewallProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkNetworkFirewallProfile() *NetworkNetworkFirewallProfile {
	this := NetworkNetworkFirewallProfile{}
	return &this
}

// NewNetworkNetworkFirewallProfileWithDefaults instantiates a new NetworkNetworkFirewallProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkNetworkFirewallProfileWithDefaults() *NetworkNetworkFirewallProfile {
	this := NetworkNetworkFirewallProfile{}
	return &this
}

// GetEnableFwLogging returns the EnableFwLogging field value if set, zero value otherwise.
func (o *NetworkNetworkFirewallProfile) GetEnableFwLogging() bool {
	if o == nil || o.EnableFwLogging == nil {
		var ret bool
		return ret
	}
	return *o.EnableFwLogging
}

// GetEnableFwLoggingOk returns a tuple with the EnableFwLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkFirewallProfile) GetEnableFwLoggingOk() (*bool, bool) {
	if o == nil || o.EnableFwLogging == nil {
		return nil, false
	}
	return o.EnableFwLogging, true
}

// HasEnableFwLogging returns a boolean if a field has been set.
func (o *NetworkNetworkFirewallProfile) HasEnableFwLogging() bool {
	if o != nil && o.EnableFwLogging != nil {
		return true
	}

	return false
}

// SetEnableFwLogging gets a reference to the given bool and assigns it to the EnableFwLogging field.
func (o *NetworkNetworkFirewallProfile) SetEnableFwLogging(v bool) {
	o.EnableFwLogging = &v
}

func (o NetworkNetworkFirewallProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnableFwLogging != nil {
		toSerialize["enable-fw-logging"] = o.EnableFwLogging
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkNetworkFirewallProfile struct {
	value *NetworkNetworkFirewallProfile
	isSet bool
}

func (v NullableNetworkNetworkFirewallProfile) Get() *NetworkNetworkFirewallProfile {
	return v.value
}

func (v *NullableNetworkNetworkFirewallProfile) Set(val *NetworkNetworkFirewallProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkNetworkFirewallProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkNetworkFirewallProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkNetworkFirewallProfile(val *NetworkNetworkFirewallProfile) *NullableNetworkNetworkFirewallProfile {
	return &NullableNetworkNetworkFirewallProfile{value: val, isSet: true}
}

func (v NullableNetworkNetworkFirewallProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkNetworkFirewallProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


