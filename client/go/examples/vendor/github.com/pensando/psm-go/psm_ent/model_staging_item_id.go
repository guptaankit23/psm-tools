/*
 * Staging API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// StagingItemId struct for StagingItemId
type StagingItemId struct {
	Method *string `json:"method,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewStagingItemId instantiates a new StagingItemId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagingItemId() *StagingItemId {
	this := StagingItemId{}
	return &this
}

// NewStagingItemIdWithDefaults instantiates a new StagingItemId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagingItemIdWithDefaults() *StagingItemId {
	this := StagingItemId{}
	return &this
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *StagingItemId) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingItemId) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *StagingItemId) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *StagingItemId) SetMethod(v string) {
	o.Method = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *StagingItemId) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingItemId) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *StagingItemId) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *StagingItemId) SetUri(v string) {
	o.Uri = &v
}

func (o StagingItemId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableStagingItemId struct {
	value *StagingItemId
	isSet bool
}

func (v NullableStagingItemId) Get() *StagingItemId {
	return v.value
}

func (v *NullableStagingItemId) Set(val *StagingItemId) {
	v.value = val
	v.isSet = true
}

func (v NullableStagingItemId) IsSet() bool {
	return v.isSet
}

func (v *NullableStagingItemId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagingItemId(val *StagingItemId) *NullableStagingItemId {
	return &NullableStagingItemId{value: val, isSet: true}
}

func (v NullableStagingItemId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagingItemId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


