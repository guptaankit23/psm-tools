/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterOsInfo OS information.
type ClusterOsInfo struct {
	// Kernel release Eg: 3.10.0-514.10.2.el7.x86_64.
	KernelRelease *string `json:"kernel-release,omitempty"`
	// Kernel version Eg: #1 SMP Fri Mar 3 00:04:05 UTC 2017.
	KernelVersion *string `json:"kernel-version,omitempty"`
	// Processor Info Eg: x86_64.
	Processor *string `json:"processor,omitempty"`
	// OS Name Eg: GNU/Linux.
	Type *string `json:"type,omitempty"`
}

// NewClusterOsInfo instantiates a new ClusterOsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterOsInfo() *ClusterOsInfo {
	this := ClusterOsInfo{}
	return &this
}

// NewClusterOsInfoWithDefaults instantiates a new ClusterOsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterOsInfoWithDefaults() *ClusterOsInfo {
	this := ClusterOsInfo{}
	return &this
}

// GetKernelRelease returns the KernelRelease field value if set, zero value otherwise.
func (o *ClusterOsInfo) GetKernelRelease() string {
	if o == nil || o.KernelRelease == nil {
		var ret string
		return ret
	}
	return *o.KernelRelease
}

// GetKernelReleaseOk returns a tuple with the KernelRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOsInfo) GetKernelReleaseOk() (*string, bool) {
	if o == nil || o.KernelRelease == nil {
		return nil, false
	}
	return o.KernelRelease, true
}

// HasKernelRelease returns a boolean if a field has been set.
func (o *ClusterOsInfo) HasKernelRelease() bool {
	if o != nil && o.KernelRelease != nil {
		return true
	}

	return false
}

// SetKernelRelease gets a reference to the given string and assigns it to the KernelRelease field.
func (o *ClusterOsInfo) SetKernelRelease(v string) {
	o.KernelRelease = &v
}

// GetKernelVersion returns the KernelVersion field value if set, zero value otherwise.
func (o *ClusterOsInfo) GetKernelVersion() string {
	if o == nil || o.KernelVersion == nil {
		var ret string
		return ret
	}
	return *o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOsInfo) GetKernelVersionOk() (*string, bool) {
	if o == nil || o.KernelVersion == nil {
		return nil, false
	}
	return o.KernelVersion, true
}

// HasKernelVersion returns a boolean if a field has been set.
func (o *ClusterOsInfo) HasKernelVersion() bool {
	if o != nil && o.KernelVersion != nil {
		return true
	}

	return false
}

// SetKernelVersion gets a reference to the given string and assigns it to the KernelVersion field.
func (o *ClusterOsInfo) SetKernelVersion(v string) {
	o.KernelVersion = &v
}

// GetProcessor returns the Processor field value if set, zero value otherwise.
func (o *ClusterOsInfo) GetProcessor() string {
	if o == nil || o.Processor == nil {
		var ret string
		return ret
	}
	return *o.Processor
}

// GetProcessorOk returns a tuple with the Processor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOsInfo) GetProcessorOk() (*string, bool) {
	if o == nil || o.Processor == nil {
		return nil, false
	}
	return o.Processor, true
}

// HasProcessor returns a boolean if a field has been set.
func (o *ClusterOsInfo) HasProcessor() bool {
	if o != nil && o.Processor != nil {
		return true
	}

	return false
}

// SetProcessor gets a reference to the given string and assigns it to the Processor field.
func (o *ClusterOsInfo) SetProcessor(v string) {
	o.Processor = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterOsInfo) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterOsInfo) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClusterOsInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ClusterOsInfo) SetType(v string) {
	o.Type = &v
}

func (o ClusterOsInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KernelRelease != nil {
		toSerialize["kernel-release"] = o.KernelRelease
	}
	if o.KernelVersion != nil {
		toSerialize["kernel-version"] = o.KernelVersion
	}
	if o.Processor != nil {
		toSerialize["processor"] = o.Processor
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableClusterOsInfo struct {
	value *ClusterOsInfo
	isSet bool
}

func (v NullableClusterOsInfo) Get() *ClusterOsInfo {
	return v.value
}

func (v *NullableClusterOsInfo) Set(val *ClusterOsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterOsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterOsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterOsInfo(val *ClusterOsInfo) *NullableClusterOsInfo {
	return &NullableClusterOsInfo{value: val, isSet: true}
}

func (v NullableClusterOsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterOsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


