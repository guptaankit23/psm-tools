/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeFlowKeyTcpUdpInfo struct for SysruntimeFlowKeyTcpUdpInfo
type SysruntimeFlowKeyTcpUdpInfo struct {
	DestinationPort *int64 `json:"destination-port,omitempty"`
	SourcePort *int64 `json:"source-port,omitempty"`
}

// NewSysruntimeFlowKeyTcpUdpInfo instantiates a new SysruntimeFlowKeyTcpUdpInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeFlowKeyTcpUdpInfo() *SysruntimeFlowKeyTcpUdpInfo {
	this := SysruntimeFlowKeyTcpUdpInfo{}
	return &this
}

// NewSysruntimeFlowKeyTcpUdpInfoWithDefaults instantiates a new SysruntimeFlowKeyTcpUdpInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeFlowKeyTcpUdpInfoWithDefaults() *SysruntimeFlowKeyTcpUdpInfo {
	this := SysruntimeFlowKeyTcpUdpInfo{}
	return &this
}

// GetDestinationPort returns the DestinationPort field value if set, zero value otherwise.
func (o *SysruntimeFlowKeyTcpUdpInfo) GetDestinationPort() int64 {
	if o == nil || o.DestinationPort == nil {
		var ret int64
		return ret
	}
	return *o.DestinationPort
}

// GetDestinationPortOk returns a tuple with the DestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowKeyTcpUdpInfo) GetDestinationPortOk() (*int64, bool) {
	if o == nil || o.DestinationPort == nil {
		return nil, false
	}
	return o.DestinationPort, true
}

// HasDestinationPort returns a boolean if a field has been set.
func (o *SysruntimeFlowKeyTcpUdpInfo) HasDestinationPort() bool {
	if o != nil && o.DestinationPort != nil {
		return true
	}

	return false
}

// SetDestinationPort gets a reference to the given int64 and assigns it to the DestinationPort field.
func (o *SysruntimeFlowKeyTcpUdpInfo) SetDestinationPort(v int64) {
	o.DestinationPort = &v
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise.
func (o *SysruntimeFlowKeyTcpUdpInfo) GetSourcePort() int64 {
	if o == nil || o.SourcePort == nil {
		var ret int64
		return ret
	}
	return *o.SourcePort
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowKeyTcpUdpInfo) GetSourcePortOk() (*int64, bool) {
	if o == nil || o.SourcePort == nil {
		return nil, false
	}
	return o.SourcePort, true
}

// HasSourcePort returns a boolean if a field has been set.
func (o *SysruntimeFlowKeyTcpUdpInfo) HasSourcePort() bool {
	if o != nil && o.SourcePort != nil {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given int64 and assigns it to the SourcePort field.
func (o *SysruntimeFlowKeyTcpUdpInfo) SetSourcePort(v int64) {
	o.SourcePort = &v
}

func (o SysruntimeFlowKeyTcpUdpInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestinationPort != nil {
		toSerialize["destination-port"] = o.DestinationPort
	}
	if o.SourcePort != nil {
		toSerialize["source-port"] = o.SourcePort
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeFlowKeyTcpUdpInfo struct {
	value *SysruntimeFlowKeyTcpUdpInfo
	isSet bool
}

func (v NullableSysruntimeFlowKeyTcpUdpInfo) Get() *SysruntimeFlowKeyTcpUdpInfo {
	return v.value
}

func (v *NullableSysruntimeFlowKeyTcpUdpInfo) Set(val *SysruntimeFlowKeyTcpUdpInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeFlowKeyTcpUdpInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeFlowKeyTcpUdpInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeFlowKeyTcpUdpInfo(val *SysruntimeFlowKeyTcpUdpInfo) *NullableSysruntimeFlowKeyTcpUdpInfo {
	return &NullableSysruntimeFlowKeyTcpUdpInfo{value: val, isSet: true}
}

func (v NullableSysruntimeFlowKeyTcpUdpInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeFlowKeyTcpUdpInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


