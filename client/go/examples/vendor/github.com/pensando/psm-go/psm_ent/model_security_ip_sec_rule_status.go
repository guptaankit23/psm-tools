/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecurityIPSecRuleStatus struct for SecurityIPSecRuleStatus
type SecurityIPSecRuleStatus struct {
	RuleHash *string `json:"rule-hash,omitempty"`
}

// NewSecurityIPSecRuleStatus instantiates a new SecurityIPSecRuleStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityIPSecRuleStatus() *SecurityIPSecRuleStatus {
	this := SecurityIPSecRuleStatus{}
	return &this
}

// NewSecurityIPSecRuleStatusWithDefaults instantiates a new SecurityIPSecRuleStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityIPSecRuleStatusWithDefaults() *SecurityIPSecRuleStatus {
	this := SecurityIPSecRuleStatus{}
	return &this
}

// GetRuleHash returns the RuleHash field value if set, zero value otherwise.
func (o *SecurityIPSecRuleStatus) GetRuleHash() string {
	if o == nil || o.RuleHash == nil {
		var ret string
		return ret
	}
	return *o.RuleHash
}

// GetRuleHashOk returns a tuple with the RuleHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityIPSecRuleStatus) GetRuleHashOk() (*string, bool) {
	if o == nil || o.RuleHash == nil {
		return nil, false
	}
	return o.RuleHash, true
}

// HasRuleHash returns a boolean if a field has been set.
func (o *SecurityIPSecRuleStatus) HasRuleHash() bool {
	if o != nil && o.RuleHash != nil {
		return true
	}

	return false
}

// SetRuleHash gets a reference to the given string and assigns it to the RuleHash field.
func (o *SecurityIPSecRuleStatus) SetRuleHash(v string) {
	o.RuleHash = &v
}

func (o SecurityIPSecRuleStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RuleHash != nil {
		toSerialize["rule-hash"] = o.RuleHash
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityIPSecRuleStatus struct {
	value *SecurityIPSecRuleStatus
	isSet bool
}

func (v NullableSecurityIPSecRuleStatus) Get() *SecurityIPSecRuleStatus {
	return v.value
}

func (v *NullableSecurityIPSecRuleStatus) Set(val *SecurityIPSecRuleStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityIPSecRuleStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityIPSecRuleStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityIPSecRuleStatus(val *SecurityIPSecRuleStatus) *NullableSecurityIPSecRuleStatus {
	return &NullableSecurityIPSecRuleStatus{value: val, isSet: true}
}

func (v NullableSecurityIPSecRuleStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityIPSecRuleStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


