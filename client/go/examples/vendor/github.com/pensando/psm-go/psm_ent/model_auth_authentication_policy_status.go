/*
 * Auth API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// AuthAuthenticationPolicyStatus status part of authentication policy object.
type AuthAuthenticationPolicyStatus struct {
	LdapServers *[]AuthLdapServerStatus `json:"ldap-servers,omitempty"`
	RadiusServers *[]AuthRadiusServerStatus `json:"radius-servers,omitempty"`
}

// NewAuthAuthenticationPolicyStatus instantiates a new AuthAuthenticationPolicyStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthAuthenticationPolicyStatus() *AuthAuthenticationPolicyStatus {
	this := AuthAuthenticationPolicyStatus{}
	return &this
}

// NewAuthAuthenticationPolicyStatusWithDefaults instantiates a new AuthAuthenticationPolicyStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthAuthenticationPolicyStatusWithDefaults() *AuthAuthenticationPolicyStatus {
	this := AuthAuthenticationPolicyStatus{}
	return &this
}

// GetLdapServers returns the LdapServers field value if set, zero value otherwise.
func (o *AuthAuthenticationPolicyStatus) GetLdapServers() []AuthLdapServerStatus {
	if o == nil || o.LdapServers == nil {
		var ret []AuthLdapServerStatus
		return ret
	}
	return *o.LdapServers
}

// GetLdapServersOk returns a tuple with the LdapServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthenticationPolicyStatus) GetLdapServersOk() (*[]AuthLdapServerStatus, bool) {
	if o == nil || o.LdapServers == nil {
		return nil, false
	}
	return o.LdapServers, true
}

// HasLdapServers returns a boolean if a field has been set.
func (o *AuthAuthenticationPolicyStatus) HasLdapServers() bool {
	if o != nil && o.LdapServers != nil {
		return true
	}

	return false
}

// SetLdapServers gets a reference to the given []AuthLdapServerStatus and assigns it to the LdapServers field.
func (o *AuthAuthenticationPolicyStatus) SetLdapServers(v []AuthLdapServerStatus) {
	o.LdapServers = &v
}

// GetRadiusServers returns the RadiusServers field value if set, zero value otherwise.
func (o *AuthAuthenticationPolicyStatus) GetRadiusServers() []AuthRadiusServerStatus {
	if o == nil || o.RadiusServers == nil {
		var ret []AuthRadiusServerStatus
		return ret
	}
	return *o.RadiusServers
}

// GetRadiusServersOk returns a tuple with the RadiusServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthenticationPolicyStatus) GetRadiusServersOk() (*[]AuthRadiusServerStatus, bool) {
	if o == nil || o.RadiusServers == nil {
		return nil, false
	}
	return o.RadiusServers, true
}

// HasRadiusServers returns a boolean if a field has been set.
func (o *AuthAuthenticationPolicyStatus) HasRadiusServers() bool {
	if o != nil && o.RadiusServers != nil {
		return true
	}

	return false
}

// SetRadiusServers gets a reference to the given []AuthRadiusServerStatus and assigns it to the RadiusServers field.
func (o *AuthAuthenticationPolicyStatus) SetRadiusServers(v []AuthRadiusServerStatus) {
	o.RadiusServers = &v
}

func (o AuthAuthenticationPolicyStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdapServers != nil {
		toSerialize["ldap-servers"] = o.LdapServers
	}
	if o.RadiusServers != nil {
		toSerialize["radius-servers"] = o.RadiusServers
	}
	return json.Marshal(toSerialize)
}

type NullableAuthAuthenticationPolicyStatus struct {
	value *AuthAuthenticationPolicyStatus
	isSet bool
}

func (v NullableAuthAuthenticationPolicyStatus) Get() *AuthAuthenticationPolicyStatus {
	return v.value
}

func (v *NullableAuthAuthenticationPolicyStatus) Set(val *AuthAuthenticationPolicyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthAuthenticationPolicyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthAuthenticationPolicyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthAuthenticationPolicyStatus(val *AuthAuthenticationPolicyStatus) *NullableAuthAuthenticationPolicyStatus {
	return &NullableAuthAuthenticationPolicyStatus{value: val, isSet: true}
}

func (v NullableAuthAuthenticationPolicyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthAuthenticationPolicyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


