/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkBootstrapIPAMOptions struct for NetworkBootstrapIPAMOptions
type NetworkBootstrapIPAMOptions struct {
	Controllers *[]string `json:"controllers,omitempty"`
	InterfaceIps *[]NetworkInterfaceIP `json:"interface-ips,omitempty"`
}

// NewNetworkBootstrapIPAMOptions instantiates a new NetworkBootstrapIPAMOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkBootstrapIPAMOptions() *NetworkBootstrapIPAMOptions {
	this := NetworkBootstrapIPAMOptions{}
	return &this
}

// NewNetworkBootstrapIPAMOptionsWithDefaults instantiates a new NetworkBootstrapIPAMOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkBootstrapIPAMOptionsWithDefaults() *NetworkBootstrapIPAMOptions {
	this := NetworkBootstrapIPAMOptions{}
	return &this
}

// GetControllers returns the Controllers field value if set, zero value otherwise.
func (o *NetworkBootstrapIPAMOptions) GetControllers() []string {
	if o == nil || o.Controllers == nil {
		var ret []string
		return ret
	}
	return *o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBootstrapIPAMOptions) GetControllersOk() (*[]string, bool) {
	if o == nil || o.Controllers == nil {
		return nil, false
	}
	return o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *NetworkBootstrapIPAMOptions) HasControllers() bool {
	if o != nil && o.Controllers != nil {
		return true
	}

	return false
}

// SetControllers gets a reference to the given []string and assigns it to the Controllers field.
func (o *NetworkBootstrapIPAMOptions) SetControllers(v []string) {
	o.Controllers = &v
}

// GetInterfaceIps returns the InterfaceIps field value if set, zero value otherwise.
func (o *NetworkBootstrapIPAMOptions) GetInterfaceIps() []NetworkInterfaceIP {
	if o == nil || o.InterfaceIps == nil {
		var ret []NetworkInterfaceIP
		return ret
	}
	return *o.InterfaceIps
}

// GetInterfaceIpsOk returns a tuple with the InterfaceIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkBootstrapIPAMOptions) GetInterfaceIpsOk() (*[]NetworkInterfaceIP, bool) {
	if o == nil || o.InterfaceIps == nil {
		return nil, false
	}
	return o.InterfaceIps, true
}

// HasInterfaceIps returns a boolean if a field has been set.
func (o *NetworkBootstrapIPAMOptions) HasInterfaceIps() bool {
	if o != nil && o.InterfaceIps != nil {
		return true
	}

	return false
}

// SetInterfaceIps gets a reference to the given []NetworkInterfaceIP and assigns it to the InterfaceIps field.
func (o *NetworkBootstrapIPAMOptions) SetInterfaceIps(v []NetworkInterfaceIP) {
	o.InterfaceIps = &v
}

func (o NetworkBootstrapIPAMOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Controllers != nil {
		toSerialize["controllers"] = o.Controllers
	}
	if o.InterfaceIps != nil {
		toSerialize["interface-ips"] = o.InterfaceIps
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkBootstrapIPAMOptions struct {
	value *NetworkBootstrapIPAMOptions
	isSet bool
}

func (v NullableNetworkBootstrapIPAMOptions) Get() *NetworkBootstrapIPAMOptions {
	return v.value
}

func (v *NullableNetworkBootstrapIPAMOptions) Set(val *NetworkBootstrapIPAMOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkBootstrapIPAMOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkBootstrapIPAMOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkBootstrapIPAMOptions(val *NetworkBootstrapIPAMOptions) *NullableNetworkBootstrapIPAMOptions {
	return &NullableNetworkBootstrapIPAMOptions{value: val, isSet: true}
}

func (v NullableNetworkBootstrapIPAMOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkBootstrapIPAMOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


