/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterDSM struct for ClusterDSM
type ClusterDSM struct {
	// Base MAC address of.
	MacAddress *string `json:"mac-address,omitempty"`
	// unit id of the dsm.
	UnitId *int64 `json:"unit-id,omitempty"`
}

// NewClusterDSM instantiates a new ClusterDSM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterDSM() *ClusterDSM {
	this := ClusterDSM{}
	return &this
}

// NewClusterDSMWithDefaults instantiates a new ClusterDSM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterDSMWithDefaults() *ClusterDSM {
	this := ClusterDSM{}
	return &this
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *ClusterDSM) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSM) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *ClusterDSM) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *ClusterDSM) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetUnitId returns the UnitId field value if set, zero value otherwise.
func (o *ClusterDSM) GetUnitId() int64 {
	if o == nil || o.UnitId == nil {
		var ret int64
		return ret
	}
	return *o.UnitId
}

// GetUnitIdOk returns a tuple with the UnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSM) GetUnitIdOk() (*int64, bool) {
	if o == nil || o.UnitId == nil {
		return nil, false
	}
	return o.UnitId, true
}

// HasUnitId returns a boolean if a field has been set.
func (o *ClusterDSM) HasUnitId() bool {
	if o != nil && o.UnitId != nil {
		return true
	}

	return false
}

// SetUnitId gets a reference to the given int64 and assigns it to the UnitId field.
func (o *ClusterDSM) SetUnitId(v int64) {
	o.UnitId = &v
}

func (o ClusterDSM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MacAddress != nil {
		toSerialize["mac-address"] = o.MacAddress
	}
	if o.UnitId != nil {
		toSerialize["unit-id"] = o.UnitId
	}
	return json.Marshal(toSerialize)
}

type NullableClusterDSM struct {
	value *ClusterDSM
	isSet bool
}

func (v NullableClusterDSM) Get() *ClusterDSM {
	return v.value
}

func (v *NullableClusterDSM) Set(val *ClusterDSM) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterDSM) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterDSM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterDSM(val *ClusterDSM) *NullableClusterDSM {
	return &NullableClusterDSM{value: val, isSet: true}
}

func (v NullableClusterDSM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterDSM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


