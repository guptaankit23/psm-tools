/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringSNMPExport struct for MonitoringSNMPExport
type MonitoringSNMPExport struct {
	// TODO:  format, config SNMP trap destination(s).
	SnmpTrapServers *[]MonitoringSNMPTrapServer `json:"snmp-trap-servers,omitempty"`
}

// NewMonitoringSNMPExport instantiates a new MonitoringSNMPExport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringSNMPExport() *MonitoringSNMPExport {
	this := MonitoringSNMPExport{}
	return &this
}

// NewMonitoringSNMPExportWithDefaults instantiates a new MonitoringSNMPExport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringSNMPExportWithDefaults() *MonitoringSNMPExport {
	this := MonitoringSNMPExport{}
	return &this
}

// GetSnmpTrapServers returns the SnmpTrapServers field value if set, zero value otherwise.
func (o *MonitoringSNMPExport) GetSnmpTrapServers() []MonitoringSNMPTrapServer {
	if o == nil || o.SnmpTrapServers == nil {
		var ret []MonitoringSNMPTrapServer
		return ret
	}
	return *o.SnmpTrapServers
}

// GetSnmpTrapServersOk returns a tuple with the SnmpTrapServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringSNMPExport) GetSnmpTrapServersOk() (*[]MonitoringSNMPTrapServer, bool) {
	if o == nil || o.SnmpTrapServers == nil {
		return nil, false
	}
	return o.SnmpTrapServers, true
}

// HasSnmpTrapServers returns a boolean if a field has been set.
func (o *MonitoringSNMPExport) HasSnmpTrapServers() bool {
	if o != nil && o.SnmpTrapServers != nil {
		return true
	}

	return false
}

// SetSnmpTrapServers gets a reference to the given []MonitoringSNMPTrapServer and assigns it to the SnmpTrapServers field.
func (o *MonitoringSNMPExport) SetSnmpTrapServers(v []MonitoringSNMPTrapServer) {
	o.SnmpTrapServers = &v
}

func (o MonitoringSNMPExport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SnmpTrapServers != nil {
		toSerialize["snmp-trap-servers"] = o.SnmpTrapServers
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringSNMPExport struct {
	value *MonitoringSNMPExport
	isSet bool
}

func (v NullableMonitoringSNMPExport) Get() *MonitoringSNMPExport {
	return v.value
}

func (v *NullableMonitoringSNMPExport) Set(val *MonitoringSNMPExport) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringSNMPExport) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringSNMPExport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringSNMPExport(val *MonitoringSNMPExport) *NullableMonitoringSNMPExport {
	return &NullableMonitoringSNMPExport{value: val, isSet: true}
}

func (v NullableMonitoringSNMPExport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringSNMPExport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


