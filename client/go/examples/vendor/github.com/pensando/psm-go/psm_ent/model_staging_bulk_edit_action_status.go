/*
 * Staging API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// StagingBulkEditActionStatus struct for StagingBulkEditActionStatus
type StagingBulkEditActionStatus struct {
	Errors *[]StagingValidationError `json:"errors,omitempty"`
	Items *[]StagingItem `json:"items,omitempty"`
	ValidationResult *string `json:"validation-result,omitempty"`
}

// NewStagingBulkEditActionStatus instantiates a new StagingBulkEditActionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagingBulkEditActionStatus() *StagingBulkEditActionStatus {
	this := StagingBulkEditActionStatus{}
	var validationResult string = "success"
	this.ValidationResult = &validationResult
	return &this
}

// NewStagingBulkEditActionStatusWithDefaults instantiates a new StagingBulkEditActionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagingBulkEditActionStatusWithDefaults() *StagingBulkEditActionStatus {
	this := StagingBulkEditActionStatus{}
	var validationResult string = "success"
	this.ValidationResult = &validationResult
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *StagingBulkEditActionStatus) GetErrors() []StagingValidationError {
	if o == nil || o.Errors == nil {
		var ret []StagingValidationError
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingBulkEditActionStatus) GetErrorsOk() (*[]StagingValidationError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *StagingBulkEditActionStatus) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []StagingValidationError and assigns it to the Errors field.
func (o *StagingBulkEditActionStatus) SetErrors(v []StagingValidationError) {
	o.Errors = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *StagingBulkEditActionStatus) GetItems() []StagingItem {
	if o == nil || o.Items == nil {
		var ret []StagingItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingBulkEditActionStatus) GetItemsOk() (*[]StagingItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *StagingBulkEditActionStatus) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []StagingItem and assigns it to the Items field.
func (o *StagingBulkEditActionStatus) SetItems(v []StagingItem) {
	o.Items = &v
}

// GetValidationResult returns the ValidationResult field value if set, zero value otherwise.
func (o *StagingBulkEditActionStatus) GetValidationResult() string {
	if o == nil || o.ValidationResult == nil {
		var ret string
		return ret
	}
	return *o.ValidationResult
}

// GetValidationResultOk returns a tuple with the ValidationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagingBulkEditActionStatus) GetValidationResultOk() (*string, bool) {
	if o == nil || o.ValidationResult == nil {
		return nil, false
	}
	return o.ValidationResult, true
}

// HasValidationResult returns a boolean if a field has been set.
func (o *StagingBulkEditActionStatus) HasValidationResult() bool {
	if o != nil && o.ValidationResult != nil {
		return true
	}

	return false
}

// SetValidationResult gets a reference to the given string and assigns it to the ValidationResult field.
func (o *StagingBulkEditActionStatus) SetValidationResult(v string) {
	o.ValidationResult = &v
}

func (o StagingBulkEditActionStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.ValidationResult != nil {
		toSerialize["validation-result"] = o.ValidationResult
	}
	return json.Marshal(toSerialize)
}

type NullableStagingBulkEditActionStatus struct {
	value *StagingBulkEditActionStatus
	isSet bool
}

func (v NullableStagingBulkEditActionStatus) Get() *StagingBulkEditActionStatus {
	return v.value
}

func (v *NullableStagingBulkEditActionStatus) Set(val *StagingBulkEditActionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableStagingBulkEditActionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableStagingBulkEditActionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagingBulkEditActionStatus(val *StagingBulkEditActionStatus) *NullableStagingBulkEditActionStatus {
	return &NullableStagingBulkEditActionStatus{value: val, isSet: true}
}

func (v NullableStagingBulkEditActionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagingBulkEditActionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


