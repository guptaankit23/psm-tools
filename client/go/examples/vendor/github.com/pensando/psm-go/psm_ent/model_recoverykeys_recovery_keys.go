/*
 * Recoverykeys API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// RecoverykeysRecoveryKeys RecoveryKeys is a message that allows user to retrieve root cluster keys.
type RecoverykeysRecoveryKeys struct {
	// PrivateKey is the private key generated at cluster bootstrap.
	PrivateKey *string `json:"private-key,omitempty"`
	// PsmVersion is the version of the PSM SW corresponding to the recovery keys.
	PsmVersion *string `json:"psm-version,omitempty"`
	// TrustChain is the chain of intermediate certificates that are needed to establish the validity of the public key.
	TrustChain *[]string `json:"trust-chain,omitempty"`
	// TrustRoot is the certificate of an entity used as a root CA.
	TrustRoots *[]string `json:"trust-roots,omitempty"`
}

// NewRecoverykeysRecoveryKeys instantiates a new RecoverykeysRecoveryKeys object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecoverykeysRecoveryKeys() *RecoverykeysRecoveryKeys {
	this := RecoverykeysRecoveryKeys{}
	return &this
}

// NewRecoverykeysRecoveryKeysWithDefaults instantiates a new RecoverykeysRecoveryKeys object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecoverykeysRecoveryKeysWithDefaults() *RecoverykeysRecoveryKeys {
	this := RecoverykeysRecoveryKeys{}
	return &this
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *RecoverykeysRecoveryKeys) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverykeysRecoveryKeys) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *RecoverykeysRecoveryKeys) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *RecoverykeysRecoveryKeys) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPsmVersion returns the PsmVersion field value if set, zero value otherwise.
func (o *RecoverykeysRecoveryKeys) GetPsmVersion() string {
	if o == nil || o.PsmVersion == nil {
		var ret string
		return ret
	}
	return *o.PsmVersion
}

// GetPsmVersionOk returns a tuple with the PsmVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverykeysRecoveryKeys) GetPsmVersionOk() (*string, bool) {
	if o == nil || o.PsmVersion == nil {
		return nil, false
	}
	return o.PsmVersion, true
}

// HasPsmVersion returns a boolean if a field has been set.
func (o *RecoverykeysRecoveryKeys) HasPsmVersion() bool {
	if o != nil && o.PsmVersion != nil {
		return true
	}

	return false
}

// SetPsmVersion gets a reference to the given string and assigns it to the PsmVersion field.
func (o *RecoverykeysRecoveryKeys) SetPsmVersion(v string) {
	o.PsmVersion = &v
}

// GetTrustChain returns the TrustChain field value if set, zero value otherwise.
func (o *RecoverykeysRecoveryKeys) GetTrustChain() []string {
	if o == nil || o.TrustChain == nil {
		var ret []string
		return ret
	}
	return *o.TrustChain
}

// GetTrustChainOk returns a tuple with the TrustChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverykeysRecoveryKeys) GetTrustChainOk() (*[]string, bool) {
	if o == nil || o.TrustChain == nil {
		return nil, false
	}
	return o.TrustChain, true
}

// HasTrustChain returns a boolean if a field has been set.
func (o *RecoverykeysRecoveryKeys) HasTrustChain() bool {
	if o != nil && o.TrustChain != nil {
		return true
	}

	return false
}

// SetTrustChain gets a reference to the given []string and assigns it to the TrustChain field.
func (o *RecoverykeysRecoveryKeys) SetTrustChain(v []string) {
	o.TrustChain = &v
}

// GetTrustRoots returns the TrustRoots field value if set, zero value otherwise.
func (o *RecoverykeysRecoveryKeys) GetTrustRoots() []string {
	if o == nil || o.TrustRoots == nil {
		var ret []string
		return ret
	}
	return *o.TrustRoots
}

// GetTrustRootsOk returns a tuple with the TrustRoots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecoverykeysRecoveryKeys) GetTrustRootsOk() (*[]string, bool) {
	if o == nil || o.TrustRoots == nil {
		return nil, false
	}
	return o.TrustRoots, true
}

// HasTrustRoots returns a boolean if a field has been set.
func (o *RecoverykeysRecoveryKeys) HasTrustRoots() bool {
	if o != nil && o.TrustRoots != nil {
		return true
	}

	return false
}

// SetTrustRoots gets a reference to the given []string and assigns it to the TrustRoots field.
func (o *RecoverykeysRecoveryKeys) SetTrustRoots(v []string) {
	o.TrustRoots = &v
}

func (o RecoverykeysRecoveryKeys) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrivateKey != nil {
		toSerialize["private-key"] = o.PrivateKey
	}
	if o.PsmVersion != nil {
		toSerialize["psm-version"] = o.PsmVersion
	}
	if o.TrustChain != nil {
		toSerialize["trust-chain"] = o.TrustChain
	}
	if o.TrustRoots != nil {
		toSerialize["trust-roots"] = o.TrustRoots
	}
	return json.Marshal(toSerialize)
}

type NullableRecoverykeysRecoveryKeys struct {
	value *RecoverykeysRecoveryKeys
	isSet bool
}

func (v NullableRecoverykeysRecoveryKeys) Get() *RecoverykeysRecoveryKeys {
	return v.value
}

func (v *NullableRecoverykeysRecoveryKeys) Set(val *RecoverykeysRecoveryKeys) {
	v.value = val
	v.isSet = true
}

func (v NullableRecoverykeysRecoveryKeys) IsSet() bool {
	return v.isSet
}

func (v *NullableRecoverykeysRecoveryKeys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecoverykeysRecoveryKeys(val *RecoverykeysRecoveryKeys) *NullableRecoverykeysRecoveryKeys {
	return &NullableRecoverykeysRecoveryKeys{value: val, isSet: true}
}

func (v NullableRecoverykeysRecoveryKeys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecoverykeysRecoveryKeys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


