/*
 * Events API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// EventsGetEventRequest Request for GET /event.
type EventsGetEventRequest struct {
	Uuid *string `json:"uuid,omitempty"`
}

// NewEventsGetEventRequest instantiates a new EventsGetEventRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsGetEventRequest() *EventsGetEventRequest {
	this := EventsGetEventRequest{}
	return &this
}

// NewEventsGetEventRequestWithDefaults instantiates a new EventsGetEventRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsGetEventRequestWithDefaults() *EventsGetEventRequest {
	this := EventsGetEventRequest{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *EventsGetEventRequest) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsGetEventRequest) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *EventsGetEventRequest) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *EventsGetEventRequest) SetUuid(v string) {
	o.Uuid = &v
}

func (o EventsGetEventRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableEventsGetEventRequest struct {
	value *EventsGetEventRequest
	isSet bool
}

func (v NullableEventsGetEventRequest) Get() *EventsGetEventRequest {
	return v.value
}

func (v *NullableEventsGetEventRequest) Set(val *EventsGetEventRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsGetEventRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsGetEventRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsGetEventRequest(val *EventsGetEventRequest) *NullableEventsGetEventRequest {
	return &NullableEventsGetEventRequest{value: val, isSet: true}
}

func (v NullableEventsGetEventRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsGetEventRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


