/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeHWConnectionStatus HWConnectionStatus captures the operational status of the session.
type SysruntimeHWConnectionStatus struct {
	DestinationMac *string `json:"destination-mac,omitempty"`
	FirewallStatus *SysruntimeFwStatus `json:"firewall-status,omitempty"`
	InitiatorFlowStatus *SysruntimeFlowStatus `json:"initiator-flow-status,omitempty"`
	IpsecStatus *SysruntimeIPSecStatus `json:"ipsec-status,omitempty"`
	PeerIflowStatus *SysruntimeFlowStatus `json:"peer-iflow-status,omitempty"`
	PeerRflowStatus *SysruntimeFlowStatus `json:"peer-rflow-status,omitempty"`
	ResponderFlowStatus *SysruntimeFlowStatus `json:"responder-flow-status,omitempty"`
	SessionHandle *string `json:"session-handle,omitempty"`
	SourceMac *string `json:"source-mac,omitempty"`
}

// NewSysruntimeHWConnectionStatus instantiates a new SysruntimeHWConnectionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeHWConnectionStatus() *SysruntimeHWConnectionStatus {
	this := SysruntimeHWConnectionStatus{}
	return &this
}

// NewSysruntimeHWConnectionStatusWithDefaults instantiates a new SysruntimeHWConnectionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeHWConnectionStatusWithDefaults() *SysruntimeHWConnectionStatus {
	this := SysruntimeHWConnectionStatus{}
	return &this
}

// GetDestinationMac returns the DestinationMac field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetDestinationMac() string {
	if o == nil || o.DestinationMac == nil {
		var ret string
		return ret
	}
	return *o.DestinationMac
}

// GetDestinationMacOk returns a tuple with the DestinationMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetDestinationMacOk() (*string, bool) {
	if o == nil || o.DestinationMac == nil {
		return nil, false
	}
	return o.DestinationMac, true
}

// HasDestinationMac returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasDestinationMac() bool {
	if o != nil && o.DestinationMac != nil {
		return true
	}

	return false
}

// SetDestinationMac gets a reference to the given string and assigns it to the DestinationMac field.
func (o *SysruntimeHWConnectionStatus) SetDestinationMac(v string) {
	o.DestinationMac = &v
}

// GetFirewallStatus returns the FirewallStatus field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetFirewallStatus() SysruntimeFwStatus {
	if o == nil || o.FirewallStatus == nil {
		var ret SysruntimeFwStatus
		return ret
	}
	return *o.FirewallStatus
}

// GetFirewallStatusOk returns a tuple with the FirewallStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetFirewallStatusOk() (*SysruntimeFwStatus, bool) {
	if o == nil || o.FirewallStatus == nil {
		return nil, false
	}
	return o.FirewallStatus, true
}

// HasFirewallStatus returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasFirewallStatus() bool {
	if o != nil && o.FirewallStatus != nil {
		return true
	}

	return false
}

// SetFirewallStatus gets a reference to the given SysruntimeFwStatus and assigns it to the FirewallStatus field.
func (o *SysruntimeHWConnectionStatus) SetFirewallStatus(v SysruntimeFwStatus) {
	o.FirewallStatus = &v
}

// GetInitiatorFlowStatus returns the InitiatorFlowStatus field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetInitiatorFlowStatus() SysruntimeFlowStatus {
	if o == nil || o.InitiatorFlowStatus == nil {
		var ret SysruntimeFlowStatus
		return ret
	}
	return *o.InitiatorFlowStatus
}

// GetInitiatorFlowStatusOk returns a tuple with the InitiatorFlowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetInitiatorFlowStatusOk() (*SysruntimeFlowStatus, bool) {
	if o == nil || o.InitiatorFlowStatus == nil {
		return nil, false
	}
	return o.InitiatorFlowStatus, true
}

// HasInitiatorFlowStatus returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasInitiatorFlowStatus() bool {
	if o != nil && o.InitiatorFlowStatus != nil {
		return true
	}

	return false
}

// SetInitiatorFlowStatus gets a reference to the given SysruntimeFlowStatus and assigns it to the InitiatorFlowStatus field.
func (o *SysruntimeHWConnectionStatus) SetInitiatorFlowStatus(v SysruntimeFlowStatus) {
	o.InitiatorFlowStatus = &v
}

// GetIpsecStatus returns the IpsecStatus field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetIpsecStatus() SysruntimeIPSecStatus {
	if o == nil || o.IpsecStatus == nil {
		var ret SysruntimeIPSecStatus
		return ret
	}
	return *o.IpsecStatus
}

// GetIpsecStatusOk returns a tuple with the IpsecStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetIpsecStatusOk() (*SysruntimeIPSecStatus, bool) {
	if o == nil || o.IpsecStatus == nil {
		return nil, false
	}
	return o.IpsecStatus, true
}

// HasIpsecStatus returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasIpsecStatus() bool {
	if o != nil && o.IpsecStatus != nil {
		return true
	}

	return false
}

// SetIpsecStatus gets a reference to the given SysruntimeIPSecStatus and assigns it to the IpsecStatus field.
func (o *SysruntimeHWConnectionStatus) SetIpsecStatus(v SysruntimeIPSecStatus) {
	o.IpsecStatus = &v
}

// GetPeerIflowStatus returns the PeerIflowStatus field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetPeerIflowStatus() SysruntimeFlowStatus {
	if o == nil || o.PeerIflowStatus == nil {
		var ret SysruntimeFlowStatus
		return ret
	}
	return *o.PeerIflowStatus
}

// GetPeerIflowStatusOk returns a tuple with the PeerIflowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetPeerIflowStatusOk() (*SysruntimeFlowStatus, bool) {
	if o == nil || o.PeerIflowStatus == nil {
		return nil, false
	}
	return o.PeerIflowStatus, true
}

// HasPeerIflowStatus returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasPeerIflowStatus() bool {
	if o != nil && o.PeerIflowStatus != nil {
		return true
	}

	return false
}

// SetPeerIflowStatus gets a reference to the given SysruntimeFlowStatus and assigns it to the PeerIflowStatus field.
func (o *SysruntimeHWConnectionStatus) SetPeerIflowStatus(v SysruntimeFlowStatus) {
	o.PeerIflowStatus = &v
}

// GetPeerRflowStatus returns the PeerRflowStatus field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetPeerRflowStatus() SysruntimeFlowStatus {
	if o == nil || o.PeerRflowStatus == nil {
		var ret SysruntimeFlowStatus
		return ret
	}
	return *o.PeerRflowStatus
}

// GetPeerRflowStatusOk returns a tuple with the PeerRflowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetPeerRflowStatusOk() (*SysruntimeFlowStatus, bool) {
	if o == nil || o.PeerRflowStatus == nil {
		return nil, false
	}
	return o.PeerRflowStatus, true
}

// HasPeerRflowStatus returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasPeerRflowStatus() bool {
	if o != nil && o.PeerRflowStatus != nil {
		return true
	}

	return false
}

// SetPeerRflowStatus gets a reference to the given SysruntimeFlowStatus and assigns it to the PeerRflowStatus field.
func (o *SysruntimeHWConnectionStatus) SetPeerRflowStatus(v SysruntimeFlowStatus) {
	o.PeerRflowStatus = &v
}

// GetResponderFlowStatus returns the ResponderFlowStatus field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetResponderFlowStatus() SysruntimeFlowStatus {
	if o == nil || o.ResponderFlowStatus == nil {
		var ret SysruntimeFlowStatus
		return ret
	}
	return *o.ResponderFlowStatus
}

// GetResponderFlowStatusOk returns a tuple with the ResponderFlowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetResponderFlowStatusOk() (*SysruntimeFlowStatus, bool) {
	if o == nil || o.ResponderFlowStatus == nil {
		return nil, false
	}
	return o.ResponderFlowStatus, true
}

// HasResponderFlowStatus returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasResponderFlowStatus() bool {
	if o != nil && o.ResponderFlowStatus != nil {
		return true
	}

	return false
}

// SetResponderFlowStatus gets a reference to the given SysruntimeFlowStatus and assigns it to the ResponderFlowStatus field.
func (o *SysruntimeHWConnectionStatus) SetResponderFlowStatus(v SysruntimeFlowStatus) {
	o.ResponderFlowStatus = &v
}

// GetSessionHandle returns the SessionHandle field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetSessionHandle() string {
	if o == nil || o.SessionHandle == nil {
		var ret string
		return ret
	}
	return *o.SessionHandle
}

// GetSessionHandleOk returns a tuple with the SessionHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetSessionHandleOk() (*string, bool) {
	if o == nil || o.SessionHandle == nil {
		return nil, false
	}
	return o.SessionHandle, true
}

// HasSessionHandle returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasSessionHandle() bool {
	if o != nil && o.SessionHandle != nil {
		return true
	}

	return false
}

// SetSessionHandle gets a reference to the given string and assigns it to the SessionHandle field.
func (o *SysruntimeHWConnectionStatus) SetSessionHandle(v string) {
	o.SessionHandle = &v
}

// GetSourceMac returns the SourceMac field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionStatus) GetSourceMac() string {
	if o == nil || o.SourceMac == nil {
		var ret string
		return ret
	}
	return *o.SourceMac
}

// GetSourceMacOk returns a tuple with the SourceMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionStatus) GetSourceMacOk() (*string, bool) {
	if o == nil || o.SourceMac == nil {
		return nil, false
	}
	return o.SourceMac, true
}

// HasSourceMac returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionStatus) HasSourceMac() bool {
	if o != nil && o.SourceMac != nil {
		return true
	}

	return false
}

// SetSourceMac gets a reference to the given string and assigns it to the SourceMac field.
func (o *SysruntimeHWConnectionStatus) SetSourceMac(v string) {
	o.SourceMac = &v
}

func (o SysruntimeHWConnectionStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestinationMac != nil {
		toSerialize["destination-mac"] = o.DestinationMac
	}
	if o.FirewallStatus != nil {
		toSerialize["firewall-status"] = o.FirewallStatus
	}
	if o.InitiatorFlowStatus != nil {
		toSerialize["initiator-flow-status"] = o.InitiatorFlowStatus
	}
	if o.IpsecStatus != nil {
		toSerialize["ipsec-status"] = o.IpsecStatus
	}
	if o.PeerIflowStatus != nil {
		toSerialize["peer-iflow-status"] = o.PeerIflowStatus
	}
	if o.PeerRflowStatus != nil {
		toSerialize["peer-rflow-status"] = o.PeerRflowStatus
	}
	if o.ResponderFlowStatus != nil {
		toSerialize["responder-flow-status"] = o.ResponderFlowStatus
	}
	if o.SessionHandle != nil {
		toSerialize["session-handle"] = o.SessionHandle
	}
	if o.SourceMac != nil {
		toSerialize["source-mac"] = o.SourceMac
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeHWConnectionStatus struct {
	value *SysruntimeHWConnectionStatus
	isSet bool
}

func (v NullableSysruntimeHWConnectionStatus) Get() *SysruntimeHWConnectionStatus {
	return v.value
}

func (v *NullableSysruntimeHWConnectionStatus) Set(val *SysruntimeHWConnectionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeHWConnectionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeHWConnectionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeHWConnectionStatus(val *SysruntimeHWConnectionStatus) *NullableSysruntimeHWConnectionStatus {
	return &NullableSysruntimeHWConnectionStatus{value: val, isSet: true}
}

func (v NullableSysruntimeHWConnectionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeHWConnectionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


