/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkVirtualRouterPeeringRouteTable struct for NetworkVirtualRouterPeeringRouteTable
type NetworkVirtualRouterPeeringRouteTable struct {
	Routes *[]NetworkVirtualRouterPeeringRoute `json:"routes,omitempty"`
}

// NewNetworkVirtualRouterPeeringRouteTable instantiates a new NetworkVirtualRouterPeeringRouteTable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkVirtualRouterPeeringRouteTable() *NetworkVirtualRouterPeeringRouteTable {
	this := NetworkVirtualRouterPeeringRouteTable{}
	return &this
}

// NewNetworkVirtualRouterPeeringRouteTableWithDefaults instantiates a new NetworkVirtualRouterPeeringRouteTable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkVirtualRouterPeeringRouteTableWithDefaults() *NetworkVirtualRouterPeeringRouteTable {
	this := NetworkVirtualRouterPeeringRouteTable{}
	return &this
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *NetworkVirtualRouterPeeringRouteTable) GetRoutes() []NetworkVirtualRouterPeeringRoute {
	if o == nil || o.Routes == nil {
		var ret []NetworkVirtualRouterPeeringRoute
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkVirtualRouterPeeringRouteTable) GetRoutesOk() (*[]NetworkVirtualRouterPeeringRoute, bool) {
	if o == nil || o.Routes == nil {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *NetworkVirtualRouterPeeringRouteTable) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []NetworkVirtualRouterPeeringRoute and assigns it to the Routes field.
func (o *NetworkVirtualRouterPeeringRouteTable) SetRoutes(v []NetworkVirtualRouterPeeringRoute) {
	o.Routes = &v
}

func (o NetworkVirtualRouterPeeringRouteTable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Routes != nil {
		toSerialize["routes"] = o.Routes
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkVirtualRouterPeeringRouteTable struct {
	value *NetworkVirtualRouterPeeringRouteTable
	isSet bool
}

func (v NullableNetworkVirtualRouterPeeringRouteTable) Get() *NetworkVirtualRouterPeeringRouteTable {
	return v.value
}

func (v *NullableNetworkVirtualRouterPeeringRouteTable) Set(val *NetworkVirtualRouterPeeringRouteTable) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkVirtualRouterPeeringRouteTable) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkVirtualRouterPeeringRouteTable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkVirtualRouterPeeringRouteTable(val *NetworkVirtualRouterPeeringRouteTable) *NullableNetworkVirtualRouterPeeringRouteTable {
	return &NullableNetworkVirtualRouterPeeringRouteTable{value: val, isSet: true}
}

func (v NullableNetworkVirtualRouterPeeringRouteTable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkVirtualRouterPeeringRouteTable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


