/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringTroubleshootingSessionStatus Troubleshooting Session Status.
type MonitoringTroubleshootingSessionStatus struct {
	State *string `json:"state,omitempty"`
	// report is generated each time troubleshooting session is activated i.e time-window.
	TroubleshootingResults *[]MonitoringTsResult `json:"troubleshooting-results,omitempty"`
}

// NewMonitoringTroubleshootingSessionStatus instantiates a new MonitoringTroubleshootingSessionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringTroubleshootingSessionStatus() *MonitoringTroubleshootingSessionStatus {
	this := MonitoringTroubleshootingSessionStatus{}
	var state string = "running"
	this.State = &state
	return &this
}

// NewMonitoringTroubleshootingSessionStatusWithDefaults instantiates a new MonitoringTroubleshootingSessionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringTroubleshootingSessionStatusWithDefaults() *MonitoringTroubleshootingSessionStatus {
	this := MonitoringTroubleshootingSessionStatus{}
	var state string = "running"
	this.State = &state
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *MonitoringTroubleshootingSessionStatus) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTroubleshootingSessionStatus) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *MonitoringTroubleshootingSessionStatus) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *MonitoringTroubleshootingSessionStatus) SetState(v string) {
	o.State = &v
}

// GetTroubleshootingResults returns the TroubleshootingResults field value if set, zero value otherwise.
func (o *MonitoringTroubleshootingSessionStatus) GetTroubleshootingResults() []MonitoringTsResult {
	if o == nil || o.TroubleshootingResults == nil {
		var ret []MonitoringTsResult
		return ret
	}
	return *o.TroubleshootingResults
}

// GetTroubleshootingResultsOk returns a tuple with the TroubleshootingResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringTroubleshootingSessionStatus) GetTroubleshootingResultsOk() (*[]MonitoringTsResult, bool) {
	if o == nil || o.TroubleshootingResults == nil {
		return nil, false
	}
	return o.TroubleshootingResults, true
}

// HasTroubleshootingResults returns a boolean if a field has been set.
func (o *MonitoringTroubleshootingSessionStatus) HasTroubleshootingResults() bool {
	if o != nil && o.TroubleshootingResults != nil {
		return true
	}

	return false
}

// SetTroubleshootingResults gets a reference to the given []MonitoringTsResult and assigns it to the TroubleshootingResults field.
func (o *MonitoringTroubleshootingSessionStatus) SetTroubleshootingResults(v []MonitoringTsResult) {
	o.TroubleshootingResults = &v
}

func (o MonitoringTroubleshootingSessionStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.TroubleshootingResults != nil {
		toSerialize["troubleshooting-results"] = o.TroubleshootingResults
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringTroubleshootingSessionStatus struct {
	value *MonitoringTroubleshootingSessionStatus
	isSet bool
}

func (v NullableMonitoringTroubleshootingSessionStatus) Get() *MonitoringTroubleshootingSessionStatus {
	return v.value
}

func (v *NullableMonitoringTroubleshootingSessionStatus) Set(val *MonitoringTroubleshootingSessionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringTroubleshootingSessionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringTroubleshootingSessionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringTroubleshootingSessionStatus(val *MonitoringTroubleshootingSessionStatus) *NullableMonitoringTroubleshootingSessionStatus {
	return &NullableMonitoringTroubleshootingSessionStatus{value: val, isSet: true}
}

func (v NullableMonitoringTroubleshootingSessionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringTroubleshootingSessionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


