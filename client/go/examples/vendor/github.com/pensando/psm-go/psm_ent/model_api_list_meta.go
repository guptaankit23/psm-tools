/*
 * Workload API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ApiListMeta ListMeta contains the metadata for list of objects.
type ApiListMeta struct {
	// Resource version of object store at the time of list generation.
	ResourceVersion *string `json:"resource-version,omitempty"`
	// TotalCount is the total count of results (non paginated) that the server holds.
	TotalCount *int32 `json:"total-count,omitempty"`
}

// NewApiListMeta instantiates a new ApiListMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiListMeta() *ApiListMeta {
	this := ApiListMeta{}
	return &this
}

// NewApiListMetaWithDefaults instantiates a new ApiListMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiListMetaWithDefaults() *ApiListMeta {
	this := ApiListMeta{}
	return &this
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *ApiListMeta) GetResourceVersion() string {
	if o == nil || o.ResourceVersion == nil {
		var ret string
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListMeta) GetResourceVersionOk() (*string, bool) {
	if o == nil || o.ResourceVersion == nil {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *ApiListMeta) HasResourceVersion() bool {
	if o != nil && o.ResourceVersion != nil {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given string and assigns it to the ResourceVersion field.
func (o *ApiListMeta) SetResourceVersion(v string) {
	o.ResourceVersion = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ApiListMeta) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiListMeta) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ApiListMeta) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *ApiListMeta) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o ApiListMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceVersion != nil {
		toSerialize["resource-version"] = o.ResourceVersion
	}
	if o.TotalCount != nil {
		toSerialize["total-count"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullableApiListMeta struct {
	value *ApiListMeta
	isSet bool
}

func (v NullableApiListMeta) Get() *ApiListMeta {
	return v.value
}

func (v *NullableApiListMeta) Set(val *ApiListMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableApiListMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableApiListMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiListMeta(val *ApiListMeta) *NullableApiListMeta {
	return &NullableApiListMeta{value: val, isSet: true}
}

func (v NullableApiListMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiListMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


