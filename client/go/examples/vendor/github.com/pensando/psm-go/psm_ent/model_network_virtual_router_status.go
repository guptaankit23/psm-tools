/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkVirtualRouterStatus struct for NetworkVirtualRouterStatus
type NetworkVirtualRouterStatus struct {
	// Handle allocated in the system.
	Id *string `json:"id,omitempty"`
	PropagationStatus *SecurityPropagationStatus `json:"propagation-status,omitempty"`
	Rd *NetworkRouteDistinguisher `json:"rd,omitempty"`
	RouteTable *string `json:"route-table,omitempty"`
}

// NewNetworkVirtualRouterStatus instantiates a new NetworkVirtualRouterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkVirtualRouterStatus() *NetworkVirtualRouterStatus {
	this := NetworkVirtualRouterStatus{}
	return &this
}

// NewNetworkVirtualRouterStatusWithDefaults instantiates a new NetworkVirtualRouterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkVirtualRouterStatusWithDefaults() *NetworkVirtualRouterStatus {
	this := NetworkVirtualRouterStatus{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkVirtualRouterStatus) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkVirtualRouterStatus) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkVirtualRouterStatus) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NetworkVirtualRouterStatus) SetId(v string) {
	o.Id = &v
}

// GetPropagationStatus returns the PropagationStatus field value if set, zero value otherwise.
func (o *NetworkVirtualRouterStatus) GetPropagationStatus() SecurityPropagationStatus {
	if o == nil || o.PropagationStatus == nil {
		var ret SecurityPropagationStatus
		return ret
	}
	return *o.PropagationStatus
}

// GetPropagationStatusOk returns a tuple with the PropagationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkVirtualRouterStatus) GetPropagationStatusOk() (*SecurityPropagationStatus, bool) {
	if o == nil || o.PropagationStatus == nil {
		return nil, false
	}
	return o.PropagationStatus, true
}

// HasPropagationStatus returns a boolean if a field has been set.
func (o *NetworkVirtualRouterStatus) HasPropagationStatus() bool {
	if o != nil && o.PropagationStatus != nil {
		return true
	}

	return false
}

// SetPropagationStatus gets a reference to the given SecurityPropagationStatus and assigns it to the PropagationStatus field.
func (o *NetworkVirtualRouterStatus) SetPropagationStatus(v SecurityPropagationStatus) {
	o.PropagationStatus = &v
}

// GetRd returns the Rd field value if set, zero value otherwise.
func (o *NetworkVirtualRouterStatus) GetRd() NetworkRouteDistinguisher {
	if o == nil || o.Rd == nil {
		var ret NetworkRouteDistinguisher
		return ret
	}
	return *o.Rd
}

// GetRdOk returns a tuple with the Rd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkVirtualRouterStatus) GetRdOk() (*NetworkRouteDistinguisher, bool) {
	if o == nil || o.Rd == nil {
		return nil, false
	}
	return o.Rd, true
}

// HasRd returns a boolean if a field has been set.
func (o *NetworkVirtualRouterStatus) HasRd() bool {
	if o != nil && o.Rd != nil {
		return true
	}

	return false
}

// SetRd gets a reference to the given NetworkRouteDistinguisher and assigns it to the Rd field.
func (o *NetworkVirtualRouterStatus) SetRd(v NetworkRouteDistinguisher) {
	o.Rd = &v
}

// GetRouteTable returns the RouteTable field value if set, zero value otherwise.
func (o *NetworkVirtualRouterStatus) GetRouteTable() string {
	if o == nil || o.RouteTable == nil {
		var ret string
		return ret
	}
	return *o.RouteTable
}

// GetRouteTableOk returns a tuple with the RouteTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkVirtualRouterStatus) GetRouteTableOk() (*string, bool) {
	if o == nil || o.RouteTable == nil {
		return nil, false
	}
	return o.RouteTable, true
}

// HasRouteTable returns a boolean if a field has been set.
func (o *NetworkVirtualRouterStatus) HasRouteTable() bool {
	if o != nil && o.RouteTable != nil {
		return true
	}

	return false
}

// SetRouteTable gets a reference to the given string and assigns it to the RouteTable field.
func (o *NetworkVirtualRouterStatus) SetRouteTable(v string) {
	o.RouteTable = &v
}

func (o NetworkVirtualRouterStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PropagationStatus != nil {
		toSerialize["propagation-status"] = o.PropagationStatus
	}
	if o.Rd != nil {
		toSerialize["rd"] = o.Rd
	}
	if o.RouteTable != nil {
		toSerialize["route-table"] = o.RouteTable
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkVirtualRouterStatus struct {
	value *NetworkVirtualRouterStatus
	isSet bool
}

func (v NullableNetworkVirtualRouterStatus) Get() *NetworkVirtualRouterStatus {
	return v.value
}

func (v *NullableNetworkVirtualRouterStatus) Set(val *NetworkVirtualRouterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkVirtualRouterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkVirtualRouterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkVirtualRouterStatus(val *NetworkVirtualRouterStatus) *NullableNetworkVirtualRouterStatus {
	return &NullableNetworkVirtualRouterStatus{value: val, isSet: true}
}

func (v NullableNetworkVirtualRouterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkVirtualRouterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


