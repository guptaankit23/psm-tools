/*
 * Telemetry_query API reference
 *
 * Service name  
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
	"time"
)

// TelemetryQueryMetricsQuerySpec MetricsQuerySpec requires a structured body consisting of: -  Object Selector (selects one more more objects of same Kind) -  Time Range (for the time series) -  A set of Metric Specs -  A pagination spec.
type TelemetryQueryMetricsQuerySpec struct {
	ApiVersion *string `json:"api-version,omitempty"`
	BottomParam *TelemetryQueryBottomSpec `json:"bottom-param,omitempty"`
	// EndTime selects all metrics with timestamp less than the EndTime, example 2018-09-18T00:12:00Z.
	EndTime *time.Time `json:"end-time,omitempty"`
	// Fields select the metric fields to be included in the result Empty will include all fields, must contain at least one non-tag field. Must start and end with alpha numeric and can have alphanumeric, -, _, .
	Fields *[]string `json:"fields,omitempty"`
	// Functions specify an operation function to be applied, example mean()/max().
	Function *string `json:"function,omitempty"`
	// GroupbyField groups series based on the field specified. Must start and end with alpha numeric and can have alphanumeric, -, _, . and ,.
	GroupByField *string `json:"group-by-field,omitempty"`
	// GroupbyTime groups series based on the interval specified. Should be a valid time duration.
	GroupByTime *string `json:"group-by-time,omitempty"`
	Kind *string `json:"kind,omitempty"`
	// Name is the name of the API object. Must start and end with alpha numeric and can have alphanumeric, -, _, .
	Name *string `json:"name,omitempty"`
	Pagination *TelemetryQueryPaginationSpec `json:"pagination,omitempty"`
	Selector *FieldsSelector `json:"selector,omitempty"`
	// SortOrder specifies time ordering of results.
	SortOrder *string `json:"sort-order,omitempty"`
	// StartTime selects all metrics with timestamp greater than the StartTime, example 2018-10-18T00:12:00Z.
	StartTime *time.Time `json:"start-time,omitempty"`
	Subquery *TelemetryQueryMetricsQuerySpec `json:"subquery,omitempty"`
	TopParam *TelemetryQueryTopSpec `json:"top-param,omitempty"`
}

// NewTelemetryQueryMetricsQuerySpec instantiates a new TelemetryQueryMetricsQuerySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelemetryQueryMetricsQuerySpec() *TelemetryQueryMetricsQuerySpec {
	this := TelemetryQueryMetricsQuerySpec{}
	var function string = "none"
	this.Function = &function
	var sortOrder string = "ascending"
	this.SortOrder = &sortOrder
	return &this
}

// NewTelemetryQueryMetricsQuerySpecWithDefaults instantiates a new TelemetryQueryMetricsQuerySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelemetryQueryMetricsQuerySpecWithDefaults() *TelemetryQueryMetricsQuerySpec {
	this := TelemetryQueryMetricsQuerySpec{}
	var function string = "none"
	this.Function = &function
	var sortOrder string = "ascending"
	this.SortOrder = &sortOrder
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *TelemetryQueryMetricsQuerySpec) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetBottomParam returns the BottomParam field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetBottomParam() TelemetryQueryBottomSpec {
	if o == nil || o.BottomParam == nil {
		var ret TelemetryQueryBottomSpec
		return ret
	}
	return *o.BottomParam
}

// GetBottomParamOk returns a tuple with the BottomParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetBottomParamOk() (*TelemetryQueryBottomSpec, bool) {
	if o == nil || o.BottomParam == nil {
		return nil, false
	}
	return o.BottomParam, true
}

// HasBottomParam returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasBottomParam() bool {
	if o != nil && o.BottomParam != nil {
		return true
	}

	return false
}

// SetBottomParam gets a reference to the given TelemetryQueryBottomSpec and assigns it to the BottomParam field.
func (o *TelemetryQueryMetricsQuerySpec) SetBottomParam(v TelemetryQueryBottomSpec) {
	o.BottomParam = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *TelemetryQueryMetricsQuerySpec) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetFields() []string {
	if o == nil || o.Fields == nil {
		var ret []string
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetFieldsOk() (*[]string, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []string and assigns it to the Fields field.
func (o *TelemetryQueryMetricsQuerySpec) SetFields(v []string) {
	o.Fields = &v
}

// GetFunction returns the Function field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetFunction() string {
	if o == nil || o.Function == nil {
		var ret string
		return ret
	}
	return *o.Function
}

// GetFunctionOk returns a tuple with the Function field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetFunctionOk() (*string, bool) {
	if o == nil || o.Function == nil {
		return nil, false
	}
	return o.Function, true
}

// HasFunction returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasFunction() bool {
	if o != nil && o.Function != nil {
		return true
	}

	return false
}

// SetFunction gets a reference to the given string and assigns it to the Function field.
func (o *TelemetryQueryMetricsQuerySpec) SetFunction(v string) {
	o.Function = &v
}

// GetGroupByField returns the GroupByField field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetGroupByField() string {
	if o == nil || o.GroupByField == nil {
		var ret string
		return ret
	}
	return *o.GroupByField
}

// GetGroupByFieldOk returns a tuple with the GroupByField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetGroupByFieldOk() (*string, bool) {
	if o == nil || o.GroupByField == nil {
		return nil, false
	}
	return o.GroupByField, true
}

// HasGroupByField returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasGroupByField() bool {
	if o != nil && o.GroupByField != nil {
		return true
	}

	return false
}

// SetGroupByField gets a reference to the given string and assigns it to the GroupByField field.
func (o *TelemetryQueryMetricsQuerySpec) SetGroupByField(v string) {
	o.GroupByField = &v
}

// GetGroupByTime returns the GroupByTime field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetGroupByTime() string {
	if o == nil || o.GroupByTime == nil {
		var ret string
		return ret
	}
	return *o.GroupByTime
}

// GetGroupByTimeOk returns a tuple with the GroupByTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetGroupByTimeOk() (*string, bool) {
	if o == nil || o.GroupByTime == nil {
		return nil, false
	}
	return o.GroupByTime, true
}

// HasGroupByTime returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasGroupByTime() bool {
	if o != nil && o.GroupByTime != nil {
		return true
	}

	return false
}

// SetGroupByTime gets a reference to the given string and assigns it to the GroupByTime field.
func (o *TelemetryQueryMetricsQuerySpec) SetGroupByTime(v string) {
	o.GroupByTime = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *TelemetryQueryMetricsQuerySpec) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TelemetryQueryMetricsQuerySpec) SetName(v string) {
	o.Name = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetPagination() TelemetryQueryPaginationSpec {
	if o == nil || o.Pagination == nil {
		var ret TelemetryQueryPaginationSpec
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetPaginationOk() (*TelemetryQueryPaginationSpec, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given TelemetryQueryPaginationSpec and assigns it to the Pagination field.
func (o *TelemetryQueryMetricsQuerySpec) SetPagination(v TelemetryQueryPaginationSpec) {
	o.Pagination = &v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetSelector() FieldsSelector {
	if o == nil || o.Selector == nil {
		var ret FieldsSelector
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetSelectorOk() (*FieldsSelector, bool) {
	if o == nil || o.Selector == nil {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasSelector() bool {
	if o != nil && o.Selector != nil {
		return true
	}

	return false
}

// SetSelector gets a reference to the given FieldsSelector and assigns it to the Selector field.
func (o *TelemetryQueryMetricsQuerySpec) SetSelector(v FieldsSelector) {
	o.Selector = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetSortOrder() string {
	if o == nil || o.SortOrder == nil {
		var ret string
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetSortOrderOk() (*string, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given string and assigns it to the SortOrder field.
func (o *TelemetryQueryMetricsQuerySpec) SetSortOrder(v string) {
	o.SortOrder = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *TelemetryQueryMetricsQuerySpec) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetSubquery returns the Subquery field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetSubquery() TelemetryQueryMetricsQuerySpec {
	if o == nil || o.Subquery == nil {
		var ret TelemetryQueryMetricsQuerySpec
		return ret
	}
	return *o.Subquery
}

// GetSubqueryOk returns a tuple with the Subquery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetSubqueryOk() (*TelemetryQueryMetricsQuerySpec, bool) {
	if o == nil || o.Subquery == nil {
		return nil, false
	}
	return o.Subquery, true
}

// HasSubquery returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasSubquery() bool {
	if o != nil && o.Subquery != nil {
		return true
	}

	return false
}

// SetSubquery gets a reference to the given TelemetryQueryMetricsQuerySpec and assigns it to the Subquery field.
func (o *TelemetryQueryMetricsQuerySpec) SetSubquery(v TelemetryQueryMetricsQuerySpec) {
	o.Subquery = &v
}

// GetTopParam returns the TopParam field value if set, zero value otherwise.
func (o *TelemetryQueryMetricsQuerySpec) GetTopParam() TelemetryQueryTopSpec {
	if o == nil || o.TopParam == nil {
		var ret TelemetryQueryTopSpec
		return ret
	}
	return *o.TopParam
}

// GetTopParamOk returns a tuple with the TopParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryQueryMetricsQuerySpec) GetTopParamOk() (*TelemetryQueryTopSpec, bool) {
	if o == nil || o.TopParam == nil {
		return nil, false
	}
	return o.TopParam, true
}

// HasTopParam returns a boolean if a field has been set.
func (o *TelemetryQueryMetricsQuerySpec) HasTopParam() bool {
	if o != nil && o.TopParam != nil {
		return true
	}

	return false
}

// SetTopParam gets a reference to the given TelemetryQueryTopSpec and assigns it to the TopParam field.
func (o *TelemetryQueryMetricsQuerySpec) SetTopParam(v TelemetryQueryTopSpec) {
	o.TopParam = &v
}

func (o TelemetryQueryMetricsQuerySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["api-version"] = o.ApiVersion
	}
	if o.BottomParam != nil {
		toSerialize["bottom-param"] = o.BottomParam
	}
	if o.EndTime != nil {
		toSerialize["end-time"] = o.EndTime
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.Function != nil {
		toSerialize["function"] = o.Function
	}
	if o.GroupByField != nil {
		toSerialize["group-by-field"] = o.GroupByField
	}
	if o.GroupByTime != nil {
		toSerialize["group-by-time"] = o.GroupByTime
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	if o.Selector != nil {
		toSerialize["selector"] = o.Selector
	}
	if o.SortOrder != nil {
		toSerialize["sort-order"] = o.SortOrder
	}
	if o.StartTime != nil {
		toSerialize["start-time"] = o.StartTime
	}
	if o.Subquery != nil {
		toSerialize["subquery"] = o.Subquery
	}
	if o.TopParam != nil {
		toSerialize["top-param"] = o.TopParam
	}
	return json.Marshal(toSerialize)
}

type NullableTelemetryQueryMetricsQuerySpec struct {
	value *TelemetryQueryMetricsQuerySpec
	isSet bool
}

func (v NullableTelemetryQueryMetricsQuerySpec) Get() *TelemetryQueryMetricsQuerySpec {
	return v.value
}

func (v *NullableTelemetryQueryMetricsQuerySpec) Set(val *TelemetryQueryMetricsQuerySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableTelemetryQueryMetricsQuerySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableTelemetryQueryMetricsQuerySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelemetryQueryMetricsQuerySpec(val *TelemetryQueryMetricsQuerySpec) *NullableTelemetryQueryMetricsQuerySpec {
	return &NullableTelemetryQueryMetricsQuerySpec{value: val, isSet: true}
}

func (v NullableTelemetryQueryMetricsQuerySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelemetryQueryMetricsQuerySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


