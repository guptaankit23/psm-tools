/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeFlowKeyICMPInfo struct for SysruntimeFlowKeyICMPInfo
type SysruntimeFlowKeyICMPInfo struct {
	Code *int64 `json:"code,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Type *int64 `json:"type,omitempty"`
}

// NewSysruntimeFlowKeyICMPInfo instantiates a new SysruntimeFlowKeyICMPInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeFlowKeyICMPInfo() *SysruntimeFlowKeyICMPInfo {
	this := SysruntimeFlowKeyICMPInfo{}
	return &this
}

// NewSysruntimeFlowKeyICMPInfoWithDefaults instantiates a new SysruntimeFlowKeyICMPInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeFlowKeyICMPInfoWithDefaults() *SysruntimeFlowKeyICMPInfo {
	this := SysruntimeFlowKeyICMPInfo{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *SysruntimeFlowKeyICMPInfo) GetCode() int64 {
	if o == nil || o.Code == nil {
		var ret int64
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowKeyICMPInfo) GetCodeOk() (*int64, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *SysruntimeFlowKeyICMPInfo) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int64 and assigns it to the Code field.
func (o *SysruntimeFlowKeyICMPInfo) SetCode(v int64) {
	o.Code = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SysruntimeFlowKeyICMPInfo) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowKeyICMPInfo) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SysruntimeFlowKeyICMPInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *SysruntimeFlowKeyICMPInfo) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SysruntimeFlowKeyICMPInfo) GetType() int64 {
	if o == nil || o.Type == nil {
		var ret int64
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowKeyICMPInfo) GetTypeOk() (*int64, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SysruntimeFlowKeyICMPInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int64 and assigns it to the Type field.
func (o *SysruntimeFlowKeyICMPInfo) SetType(v int64) {
	o.Type = &v
}

func (o SysruntimeFlowKeyICMPInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeFlowKeyICMPInfo struct {
	value *SysruntimeFlowKeyICMPInfo
	isSet bool
}

func (v NullableSysruntimeFlowKeyICMPInfo) Get() *SysruntimeFlowKeyICMPInfo {
	return v.value
}

func (v *NullableSysruntimeFlowKeyICMPInfo) Set(val *SysruntimeFlowKeyICMPInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeFlowKeyICMPInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeFlowKeyICMPInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeFlowKeyICMPInfo(val *SysruntimeFlowKeyICMPInfo) *NullableSysruntimeFlowKeyICMPInfo {
	return &NullableSysruntimeFlowKeyICMPInfo{value: val, isSet: true}
}

func (v NullableSysruntimeFlowKeyICMPInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeFlowKeyICMPInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


