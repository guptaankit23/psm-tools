/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
	"time"
)

// ClusterSnapshotRestoreStatus struct for ClusterSnapshotRestoreStatus
type ClusterSnapshotRestoreStatus struct {
	BackupSnapshotPath *string `json:"backup-snapshot-path,omitempty"`
	EndTime *time.Time `json:"end-time,omitempty"`
	StartTime *time.Time `json:"start-time,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewClusterSnapshotRestoreStatus instantiates a new ClusterSnapshotRestoreStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSnapshotRestoreStatus() *ClusterSnapshotRestoreStatus {
	this := ClusterSnapshotRestoreStatus{}
	var status string = "unknown"
	this.Status = &status
	return &this
}

// NewClusterSnapshotRestoreStatusWithDefaults instantiates a new ClusterSnapshotRestoreStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSnapshotRestoreStatusWithDefaults() *ClusterSnapshotRestoreStatus {
	this := ClusterSnapshotRestoreStatus{}
	var status string = "unknown"
	this.Status = &status
	return &this
}

// GetBackupSnapshotPath returns the BackupSnapshotPath field value if set, zero value otherwise.
func (o *ClusterSnapshotRestoreStatus) GetBackupSnapshotPath() string {
	if o == nil || o.BackupSnapshotPath == nil {
		var ret string
		return ret
	}
	return *o.BackupSnapshotPath
}

// GetBackupSnapshotPathOk returns a tuple with the BackupSnapshotPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSnapshotRestoreStatus) GetBackupSnapshotPathOk() (*string, bool) {
	if o == nil || o.BackupSnapshotPath == nil {
		return nil, false
	}
	return o.BackupSnapshotPath, true
}

// HasBackupSnapshotPath returns a boolean if a field has been set.
func (o *ClusterSnapshotRestoreStatus) HasBackupSnapshotPath() bool {
	if o != nil && o.BackupSnapshotPath != nil {
		return true
	}

	return false
}

// SetBackupSnapshotPath gets a reference to the given string and assigns it to the BackupSnapshotPath field.
func (o *ClusterSnapshotRestoreStatus) SetBackupSnapshotPath(v string) {
	o.BackupSnapshotPath = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *ClusterSnapshotRestoreStatus) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSnapshotRestoreStatus) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *ClusterSnapshotRestoreStatus) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *ClusterSnapshotRestoreStatus) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ClusterSnapshotRestoreStatus) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSnapshotRestoreStatus) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ClusterSnapshotRestoreStatus) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *ClusterSnapshotRestoreStatus) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterSnapshotRestoreStatus) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSnapshotRestoreStatus) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterSnapshotRestoreStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterSnapshotRestoreStatus) SetStatus(v string) {
	o.Status = &v
}

func (o ClusterSnapshotRestoreStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupSnapshotPath != nil {
		toSerialize["backup-snapshot-path"] = o.BackupSnapshotPath
	}
	if o.EndTime != nil {
		toSerialize["end-time"] = o.EndTime
	}
	if o.StartTime != nil {
		toSerialize["start-time"] = o.StartTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableClusterSnapshotRestoreStatus struct {
	value *ClusterSnapshotRestoreStatus
	isSet bool
}

func (v NullableClusterSnapshotRestoreStatus) Get() *ClusterSnapshotRestoreStatus {
	return v.value
}

func (v *NullableClusterSnapshotRestoreStatus) Set(val *ClusterSnapshotRestoreStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSnapshotRestoreStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSnapshotRestoreStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSnapshotRestoreStatus(val *ClusterSnapshotRestoreStatus) *NullableClusterSnapshotRestoreStatus {
	return &NullableClusterSnapshotRestoreStatus{value: val, isSet: true}
}

func (v NullableClusterSnapshotRestoreStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSnapshotRestoreStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


