/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// RoutingHealthStatus struct for RoutingHealthStatus
type RoutingHealthStatus struct {
	ExternalPeers *HealthStatusPeeringStatus `json:"external-peers,omitempty"`
	InternalPeers *HealthStatusPeeringStatus `json:"internal-peers,omitempty"`
	PendingConfigPeers *[]string `json:"pending-config-peers,omitempty"`
	RouterId *string `json:"router-id,omitempty"`
	UnexpectedPeers *int32 `json:"unexpected-peers,omitempty"`
}

// NewRoutingHealthStatus instantiates a new RoutingHealthStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingHealthStatus() *RoutingHealthStatus {
	this := RoutingHealthStatus{}
	return &this
}

// NewRoutingHealthStatusWithDefaults instantiates a new RoutingHealthStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingHealthStatusWithDefaults() *RoutingHealthStatus {
	this := RoutingHealthStatus{}
	return &this
}

// GetExternalPeers returns the ExternalPeers field value if set, zero value otherwise.
func (o *RoutingHealthStatus) GetExternalPeers() HealthStatusPeeringStatus {
	if o == nil || o.ExternalPeers == nil {
		var ret HealthStatusPeeringStatus
		return ret
	}
	return *o.ExternalPeers
}

// GetExternalPeersOk returns a tuple with the ExternalPeers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingHealthStatus) GetExternalPeersOk() (*HealthStatusPeeringStatus, bool) {
	if o == nil || o.ExternalPeers == nil {
		return nil, false
	}
	return o.ExternalPeers, true
}

// HasExternalPeers returns a boolean if a field has been set.
func (o *RoutingHealthStatus) HasExternalPeers() bool {
	if o != nil && o.ExternalPeers != nil {
		return true
	}

	return false
}

// SetExternalPeers gets a reference to the given HealthStatusPeeringStatus and assigns it to the ExternalPeers field.
func (o *RoutingHealthStatus) SetExternalPeers(v HealthStatusPeeringStatus) {
	o.ExternalPeers = &v
}

// GetInternalPeers returns the InternalPeers field value if set, zero value otherwise.
func (o *RoutingHealthStatus) GetInternalPeers() HealthStatusPeeringStatus {
	if o == nil || o.InternalPeers == nil {
		var ret HealthStatusPeeringStatus
		return ret
	}
	return *o.InternalPeers
}

// GetInternalPeersOk returns a tuple with the InternalPeers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingHealthStatus) GetInternalPeersOk() (*HealthStatusPeeringStatus, bool) {
	if o == nil || o.InternalPeers == nil {
		return nil, false
	}
	return o.InternalPeers, true
}

// HasInternalPeers returns a boolean if a field has been set.
func (o *RoutingHealthStatus) HasInternalPeers() bool {
	if o != nil && o.InternalPeers != nil {
		return true
	}

	return false
}

// SetInternalPeers gets a reference to the given HealthStatusPeeringStatus and assigns it to the InternalPeers field.
func (o *RoutingHealthStatus) SetInternalPeers(v HealthStatusPeeringStatus) {
	o.InternalPeers = &v
}

// GetPendingConfigPeers returns the PendingConfigPeers field value if set, zero value otherwise.
func (o *RoutingHealthStatus) GetPendingConfigPeers() []string {
	if o == nil || o.PendingConfigPeers == nil {
		var ret []string
		return ret
	}
	return *o.PendingConfigPeers
}

// GetPendingConfigPeersOk returns a tuple with the PendingConfigPeers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingHealthStatus) GetPendingConfigPeersOk() (*[]string, bool) {
	if o == nil || o.PendingConfigPeers == nil {
		return nil, false
	}
	return o.PendingConfigPeers, true
}

// HasPendingConfigPeers returns a boolean if a field has been set.
func (o *RoutingHealthStatus) HasPendingConfigPeers() bool {
	if o != nil && o.PendingConfigPeers != nil {
		return true
	}

	return false
}

// SetPendingConfigPeers gets a reference to the given []string and assigns it to the PendingConfigPeers field.
func (o *RoutingHealthStatus) SetPendingConfigPeers(v []string) {
	o.PendingConfigPeers = &v
}

// GetRouterId returns the RouterId field value if set, zero value otherwise.
func (o *RoutingHealthStatus) GetRouterId() string {
	if o == nil || o.RouterId == nil {
		var ret string
		return ret
	}
	return *o.RouterId
}

// GetRouterIdOk returns a tuple with the RouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingHealthStatus) GetRouterIdOk() (*string, bool) {
	if o == nil || o.RouterId == nil {
		return nil, false
	}
	return o.RouterId, true
}

// HasRouterId returns a boolean if a field has been set.
func (o *RoutingHealthStatus) HasRouterId() bool {
	if o != nil && o.RouterId != nil {
		return true
	}

	return false
}

// SetRouterId gets a reference to the given string and assigns it to the RouterId field.
func (o *RoutingHealthStatus) SetRouterId(v string) {
	o.RouterId = &v
}

// GetUnexpectedPeers returns the UnexpectedPeers field value if set, zero value otherwise.
func (o *RoutingHealthStatus) GetUnexpectedPeers() int32 {
	if o == nil || o.UnexpectedPeers == nil {
		var ret int32
		return ret
	}
	return *o.UnexpectedPeers
}

// GetUnexpectedPeersOk returns a tuple with the UnexpectedPeers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingHealthStatus) GetUnexpectedPeersOk() (*int32, bool) {
	if o == nil || o.UnexpectedPeers == nil {
		return nil, false
	}
	return o.UnexpectedPeers, true
}

// HasUnexpectedPeers returns a boolean if a field has been set.
func (o *RoutingHealthStatus) HasUnexpectedPeers() bool {
	if o != nil && o.UnexpectedPeers != nil {
		return true
	}

	return false
}

// SetUnexpectedPeers gets a reference to the given int32 and assigns it to the UnexpectedPeers field.
func (o *RoutingHealthStatus) SetUnexpectedPeers(v int32) {
	o.UnexpectedPeers = &v
}

func (o RoutingHealthStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalPeers != nil {
		toSerialize["external-peers"] = o.ExternalPeers
	}
	if o.InternalPeers != nil {
		toSerialize["internal-peers"] = o.InternalPeers
	}
	if o.PendingConfigPeers != nil {
		toSerialize["pending-config-peers"] = o.PendingConfigPeers
	}
	if o.RouterId != nil {
		toSerialize["router-id"] = o.RouterId
	}
	if o.UnexpectedPeers != nil {
		toSerialize["unexpected-peers"] = o.UnexpectedPeers
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingHealthStatus struct {
	value *RoutingHealthStatus
	isSet bool
}

func (v NullableRoutingHealthStatus) Get() *RoutingHealthStatus {
	return v.value
}

func (v *NullableRoutingHealthStatus) Set(val *RoutingHealthStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingHealthStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingHealthStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingHealthStatus(val *RoutingHealthStatus) *NullableRoutingHealthStatus {
	return &NullableRoutingHealthStatus{value: val, isSet: true}
}

func (v NullableRoutingHealthStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingHealthStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


