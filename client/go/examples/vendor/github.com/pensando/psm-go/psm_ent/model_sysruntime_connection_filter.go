/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeConnectionFilter ConnectionFilter filter to be applied for the query.
type SysruntimeConnectionFilter struct {
	Destination *SysruntimeWorkloadSelector `json:"destination,omitempty"`
	// destination port to be matched. Value should be between 1 and 65535.
	DestinationPort *int64 `json:"destination-port,omitempty"`
	// protocol to be matched.
	Protocol *string `json:"protocol,omitempty"`
	Source *SysruntimeWorkloadSelector `json:"source,omitempty"`
	// source port to be matched. Value should be between 1 and 65535.
	SourcePort *int64 `json:"source-port,omitempty"`
}

// NewSysruntimeConnectionFilter instantiates a new SysruntimeConnectionFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeConnectionFilter() *SysruntimeConnectionFilter {
	this := SysruntimeConnectionFilter{}
	var protocol string = "none"
	this.Protocol = &protocol
	return &this
}

// NewSysruntimeConnectionFilterWithDefaults instantiates a new SysruntimeConnectionFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeConnectionFilterWithDefaults() *SysruntimeConnectionFilter {
	this := SysruntimeConnectionFilter{}
	var protocol string = "none"
	this.Protocol = &protocol
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *SysruntimeConnectionFilter) GetDestination() SysruntimeWorkloadSelector {
	if o == nil || o.Destination == nil {
		var ret SysruntimeWorkloadSelector
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeConnectionFilter) GetDestinationOk() (*SysruntimeWorkloadSelector, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *SysruntimeConnectionFilter) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given SysruntimeWorkloadSelector and assigns it to the Destination field.
func (o *SysruntimeConnectionFilter) SetDestination(v SysruntimeWorkloadSelector) {
	o.Destination = &v
}

// GetDestinationPort returns the DestinationPort field value if set, zero value otherwise.
func (o *SysruntimeConnectionFilter) GetDestinationPort() int64 {
	if o == nil || o.DestinationPort == nil {
		var ret int64
		return ret
	}
	return *o.DestinationPort
}

// GetDestinationPortOk returns a tuple with the DestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeConnectionFilter) GetDestinationPortOk() (*int64, bool) {
	if o == nil || o.DestinationPort == nil {
		return nil, false
	}
	return o.DestinationPort, true
}

// HasDestinationPort returns a boolean if a field has been set.
func (o *SysruntimeConnectionFilter) HasDestinationPort() bool {
	if o != nil && o.DestinationPort != nil {
		return true
	}

	return false
}

// SetDestinationPort gets a reference to the given int64 and assigns it to the DestinationPort field.
func (o *SysruntimeConnectionFilter) SetDestinationPort(v int64) {
	o.DestinationPort = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *SysruntimeConnectionFilter) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeConnectionFilter) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *SysruntimeConnectionFilter) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *SysruntimeConnectionFilter) SetProtocol(v string) {
	o.Protocol = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SysruntimeConnectionFilter) GetSource() SysruntimeWorkloadSelector {
	if o == nil || o.Source == nil {
		var ret SysruntimeWorkloadSelector
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeConnectionFilter) GetSourceOk() (*SysruntimeWorkloadSelector, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SysruntimeConnectionFilter) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given SysruntimeWorkloadSelector and assigns it to the Source field.
func (o *SysruntimeConnectionFilter) SetSource(v SysruntimeWorkloadSelector) {
	o.Source = &v
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise.
func (o *SysruntimeConnectionFilter) GetSourcePort() int64 {
	if o == nil || o.SourcePort == nil {
		var ret int64
		return ret
	}
	return *o.SourcePort
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeConnectionFilter) GetSourcePortOk() (*int64, bool) {
	if o == nil || o.SourcePort == nil {
		return nil, false
	}
	return o.SourcePort, true
}

// HasSourcePort returns a boolean if a field has been set.
func (o *SysruntimeConnectionFilter) HasSourcePort() bool {
	if o != nil && o.SourcePort != nil {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given int64 and assigns it to the SourcePort field.
func (o *SysruntimeConnectionFilter) SetSourcePort(v int64) {
	o.SourcePort = &v
}

func (o SysruntimeConnectionFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.DestinationPort != nil {
		toSerialize["destination-port"] = o.DestinationPort
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.SourcePort != nil {
		toSerialize["source-port"] = o.SourcePort
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeConnectionFilter struct {
	value *SysruntimeConnectionFilter
	isSet bool
}

func (v NullableSysruntimeConnectionFilter) Get() *SysruntimeConnectionFilter {
	return v.value
}

func (v *NullableSysruntimeConnectionFilter) Set(val *SysruntimeConnectionFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeConnectionFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeConnectionFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeConnectionFilter(val *SysruntimeConnectionFilter) *NullableSysruntimeConnectionFilter {
	return &NullableSysruntimeConnectionFilter{value: val, isSet: true}
}

func (v NullableSysruntimeConnectionFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeConnectionFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


