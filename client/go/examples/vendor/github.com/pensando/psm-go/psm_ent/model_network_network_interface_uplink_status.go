/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkNetworkInterfaceUplinkStatus struct for NetworkNetworkInterfaceUplinkStatus
type NetworkNetworkInterfaceUplinkStatus struct {
	IpConfig *ClusterIPConfig `json:"ip-config,omitempty"`
	// LinkSpeed auto-negotiated.
	LinkSpeed *string `json:"link-speed,omitempty"`
	LldpNeighbor *NetworkLLDPNeighbor `json:"lldp-neighbor,omitempty"`
	TransceiverStatus *NetworkTransceiverStatus `json:"transceiver-status,omitempty"`
}

// NewNetworkNetworkInterfaceUplinkStatus instantiates a new NetworkNetworkInterfaceUplinkStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkNetworkInterfaceUplinkStatus() *NetworkNetworkInterfaceUplinkStatus {
	this := NetworkNetworkInterfaceUplinkStatus{}
	return &this
}

// NewNetworkNetworkInterfaceUplinkStatusWithDefaults instantiates a new NetworkNetworkInterfaceUplinkStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkNetworkInterfaceUplinkStatusWithDefaults() *NetworkNetworkInterfaceUplinkStatus {
	this := NetworkNetworkInterfaceUplinkStatus{}
	return &this
}

// GetIpConfig returns the IpConfig field value if set, zero value otherwise.
func (o *NetworkNetworkInterfaceUplinkStatus) GetIpConfig() ClusterIPConfig {
	if o == nil || o.IpConfig == nil {
		var ret ClusterIPConfig
		return ret
	}
	return *o.IpConfig
}

// GetIpConfigOk returns a tuple with the IpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) GetIpConfigOk() (*ClusterIPConfig, bool) {
	if o == nil || o.IpConfig == nil {
		return nil, false
	}
	return o.IpConfig, true
}

// HasIpConfig returns a boolean if a field has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) HasIpConfig() bool {
	if o != nil && o.IpConfig != nil {
		return true
	}

	return false
}

// SetIpConfig gets a reference to the given ClusterIPConfig and assigns it to the IpConfig field.
func (o *NetworkNetworkInterfaceUplinkStatus) SetIpConfig(v ClusterIPConfig) {
	o.IpConfig = &v
}

// GetLinkSpeed returns the LinkSpeed field value if set, zero value otherwise.
func (o *NetworkNetworkInterfaceUplinkStatus) GetLinkSpeed() string {
	if o == nil || o.LinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.LinkSpeed
}

// GetLinkSpeedOk returns a tuple with the LinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) GetLinkSpeedOk() (*string, bool) {
	if o == nil || o.LinkSpeed == nil {
		return nil, false
	}
	return o.LinkSpeed, true
}

// HasLinkSpeed returns a boolean if a field has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) HasLinkSpeed() bool {
	if o != nil && o.LinkSpeed != nil {
		return true
	}

	return false
}

// SetLinkSpeed gets a reference to the given string and assigns it to the LinkSpeed field.
func (o *NetworkNetworkInterfaceUplinkStatus) SetLinkSpeed(v string) {
	o.LinkSpeed = &v
}

// GetLldpNeighbor returns the LldpNeighbor field value if set, zero value otherwise.
func (o *NetworkNetworkInterfaceUplinkStatus) GetLldpNeighbor() NetworkLLDPNeighbor {
	if o == nil || o.LldpNeighbor == nil {
		var ret NetworkLLDPNeighbor
		return ret
	}
	return *o.LldpNeighbor
}

// GetLldpNeighborOk returns a tuple with the LldpNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) GetLldpNeighborOk() (*NetworkLLDPNeighbor, bool) {
	if o == nil || o.LldpNeighbor == nil {
		return nil, false
	}
	return o.LldpNeighbor, true
}

// HasLldpNeighbor returns a boolean if a field has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) HasLldpNeighbor() bool {
	if o != nil && o.LldpNeighbor != nil {
		return true
	}

	return false
}

// SetLldpNeighbor gets a reference to the given NetworkLLDPNeighbor and assigns it to the LldpNeighbor field.
func (o *NetworkNetworkInterfaceUplinkStatus) SetLldpNeighbor(v NetworkLLDPNeighbor) {
	o.LldpNeighbor = &v
}

// GetTransceiverStatus returns the TransceiverStatus field value if set, zero value otherwise.
func (o *NetworkNetworkInterfaceUplinkStatus) GetTransceiverStatus() NetworkTransceiverStatus {
	if o == nil || o.TransceiverStatus == nil {
		var ret NetworkTransceiverStatus
		return ret
	}
	return *o.TransceiverStatus
}

// GetTransceiverStatusOk returns a tuple with the TransceiverStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) GetTransceiverStatusOk() (*NetworkTransceiverStatus, bool) {
	if o == nil || o.TransceiverStatus == nil {
		return nil, false
	}
	return o.TransceiverStatus, true
}

// HasTransceiverStatus returns a boolean if a field has been set.
func (o *NetworkNetworkInterfaceUplinkStatus) HasTransceiverStatus() bool {
	if o != nil && o.TransceiverStatus != nil {
		return true
	}

	return false
}

// SetTransceiverStatus gets a reference to the given NetworkTransceiverStatus and assigns it to the TransceiverStatus field.
func (o *NetworkNetworkInterfaceUplinkStatus) SetTransceiverStatus(v NetworkTransceiverStatus) {
	o.TransceiverStatus = &v
}

func (o NetworkNetworkInterfaceUplinkStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IpConfig != nil {
		toSerialize["ip-config"] = o.IpConfig
	}
	if o.LinkSpeed != nil {
		toSerialize["link-speed"] = o.LinkSpeed
	}
	if o.LldpNeighbor != nil {
		toSerialize["lldp-neighbor"] = o.LldpNeighbor
	}
	if o.TransceiverStatus != nil {
		toSerialize["transceiver-status"] = o.TransceiverStatus
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkNetworkInterfaceUplinkStatus struct {
	value *NetworkNetworkInterfaceUplinkStatus
	isSet bool
}

func (v NullableNetworkNetworkInterfaceUplinkStatus) Get() *NetworkNetworkInterfaceUplinkStatus {
	return v.value
}

func (v *NullableNetworkNetworkInterfaceUplinkStatus) Set(val *NetworkNetworkInterfaceUplinkStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkNetworkInterfaceUplinkStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkNetworkInterfaceUplinkStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkNetworkInterfaceUplinkStatus(val *NetworkNetworkInterfaceUplinkStatus) *NullableNetworkNetworkInterfaceUplinkStatus {
	return &NullableNetworkNetworkInterfaceUplinkStatus{value: val, isSet: true}
}

func (v NullableNetworkNetworkInterfaceUplinkStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkNetworkInterfaceUplinkStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


