/*
 * Workload API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// WorkloadEndpointStatus status part of Endpoint object.
type WorkloadEndpointStatus struct {
	// endpoint FSM state.
	EndpointState *string `json:"EndpointState,omitempty"`
	// security groups.
	SecurityGroups *[]string `json:"SecurityGroups,omitempty"`
	// host address of the host where this endpoint exists.
	HomingHostAddr *string `json:"homing-host-addr,omitempty"`
	// host name of the host where this endpoint exists.
	HomingHostName *string `json:"homing-host-name,omitempty"`
	// IPv4 address of the endpoint.
	Ipv4Address *string `json:"ipv4-address,omitempty"`
	// IPv4 addresses of the endpoint.
	Ipv4Addresses *[]string `json:"ipv4-addresses,omitempty"`
	// IPv4 gateway for the endpoint.
	Ipv4Gateway *string `json:"ipv4-gateway,omitempty"`
	// IPv4 gateways for the endpoint.
	Ipv4Gateways *[]string `json:"ipv4-gateways,omitempty"`
	// IPv6 address for the endpoint.
	Ipv6Address *string `json:"ipv6-address,omitempty"`
	// IPv6 addresses for the endpoint.
	Ipv6Addresses *[]string `json:"ipv6-addresses,omitempty"`
	// IPv6 gateway.
	Ipv6Gateway *string `json:"ipv6-gateway,omitempty"`
	// IPv6 gateways.
	Ipv6Gateways *[]string `json:"ipv6-gateways,omitempty"`
	// Mac address of the endpoint. Should be a valid MAC address.
	MacAddress *string `json:"mac-address,omitempty"`
	// micro-segment VLAN.
	MicroSegmentVlan *int64 `json:"micro-segment-vlan,omitempty"`
	Migration *WorkloadEndpointMigrationStatus `json:"migration,omitempty"`
	// MirrorSessions list of mirror sessions enabled on this endpoint.
	MirrorSessions *[]string `json:"mirror-sessions,omitempty"`
	// network this endpoint belogs to.
	Network *string `json:"network,omitempty"`
	// homing host's UUID.
	NodeUuid *string `json:"node-uuid,omitempty"`
	// NodeUUIDList has the list of DSCs where a EP is supposed to go to.
	NodeUuidList *[]string `json:"node-uuid-list,omitempty"`
	// VM or container attribute/labels.
	WorkloadAttributes *map[string]string `json:"workload-attributes,omitempty"`
	// VM or container name.
	WorkloadName *string `json:"workload-name,omitempty"`
	// WorkloadNames associated with endpoint.
	WorkloadNames *[]string `json:"workload-names,omitempty"`
}

// NewWorkloadEndpointStatus instantiates a new WorkloadEndpointStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadEndpointStatus() *WorkloadEndpointStatus {
	this := WorkloadEndpointStatus{}
	return &this
}

// NewWorkloadEndpointStatusWithDefaults instantiates a new WorkloadEndpointStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadEndpointStatusWithDefaults() *WorkloadEndpointStatus {
	this := WorkloadEndpointStatus{}
	return &this
}

// GetEndpointState returns the EndpointState field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetEndpointState() string {
	if o == nil || o.EndpointState == nil {
		var ret string
		return ret
	}
	return *o.EndpointState
}

// GetEndpointStateOk returns a tuple with the EndpointState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetEndpointStateOk() (*string, bool) {
	if o == nil || o.EndpointState == nil {
		return nil, false
	}
	return o.EndpointState, true
}

// HasEndpointState returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasEndpointState() bool {
	if o != nil && o.EndpointState != nil {
		return true
	}

	return false
}

// SetEndpointState gets a reference to the given string and assigns it to the EndpointState field.
func (o *WorkloadEndpointStatus) SetEndpointState(v string) {
	o.EndpointState = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetSecurityGroups() []string {
	if o == nil || o.SecurityGroups == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetSecurityGroupsOk() (*[]string, bool) {
	if o == nil || o.SecurityGroups == nil {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasSecurityGroups() bool {
	if o != nil && o.SecurityGroups != nil {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *WorkloadEndpointStatus) SetSecurityGroups(v []string) {
	o.SecurityGroups = &v
}

// GetHomingHostAddr returns the HomingHostAddr field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetHomingHostAddr() string {
	if o == nil || o.HomingHostAddr == nil {
		var ret string
		return ret
	}
	return *o.HomingHostAddr
}

// GetHomingHostAddrOk returns a tuple with the HomingHostAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetHomingHostAddrOk() (*string, bool) {
	if o == nil || o.HomingHostAddr == nil {
		return nil, false
	}
	return o.HomingHostAddr, true
}

// HasHomingHostAddr returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasHomingHostAddr() bool {
	if o != nil && o.HomingHostAddr != nil {
		return true
	}

	return false
}

// SetHomingHostAddr gets a reference to the given string and assigns it to the HomingHostAddr field.
func (o *WorkloadEndpointStatus) SetHomingHostAddr(v string) {
	o.HomingHostAddr = &v
}

// GetHomingHostName returns the HomingHostName field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetHomingHostName() string {
	if o == nil || o.HomingHostName == nil {
		var ret string
		return ret
	}
	return *o.HomingHostName
}

// GetHomingHostNameOk returns a tuple with the HomingHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetHomingHostNameOk() (*string, bool) {
	if o == nil || o.HomingHostName == nil {
		return nil, false
	}
	return o.HomingHostName, true
}

// HasHomingHostName returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasHomingHostName() bool {
	if o != nil && o.HomingHostName != nil {
		return true
	}

	return false
}

// SetHomingHostName gets a reference to the given string and assigns it to the HomingHostName field.
func (o *WorkloadEndpointStatus) SetHomingHostName(v string) {
	o.HomingHostName = &v
}

// GetIpv4Address returns the Ipv4Address field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv4Address() string {
	if o == nil || o.Ipv4Address == nil {
		var ret string
		return ret
	}
	return *o.Ipv4Address
}

// GetIpv4AddressOk returns a tuple with the Ipv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv4AddressOk() (*string, bool) {
	if o == nil || o.Ipv4Address == nil {
		return nil, false
	}
	return o.Ipv4Address, true
}

// HasIpv4Address returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv4Address() bool {
	if o != nil && o.Ipv4Address != nil {
		return true
	}

	return false
}

// SetIpv4Address gets a reference to the given string and assigns it to the Ipv4Address field.
func (o *WorkloadEndpointStatus) SetIpv4Address(v string) {
	o.Ipv4Address = &v
}

// GetIpv4Addresses returns the Ipv4Addresses field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv4Addresses() []string {
	if o == nil || o.Ipv4Addresses == nil {
		var ret []string
		return ret
	}
	return *o.Ipv4Addresses
}

// GetIpv4AddressesOk returns a tuple with the Ipv4Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv4AddressesOk() (*[]string, bool) {
	if o == nil || o.Ipv4Addresses == nil {
		return nil, false
	}
	return o.Ipv4Addresses, true
}

// HasIpv4Addresses returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv4Addresses() bool {
	if o != nil && o.Ipv4Addresses != nil {
		return true
	}

	return false
}

// SetIpv4Addresses gets a reference to the given []string and assigns it to the Ipv4Addresses field.
func (o *WorkloadEndpointStatus) SetIpv4Addresses(v []string) {
	o.Ipv4Addresses = &v
}

// GetIpv4Gateway returns the Ipv4Gateway field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv4Gateway() string {
	if o == nil || o.Ipv4Gateway == nil {
		var ret string
		return ret
	}
	return *o.Ipv4Gateway
}

// GetIpv4GatewayOk returns a tuple with the Ipv4Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv4GatewayOk() (*string, bool) {
	if o == nil || o.Ipv4Gateway == nil {
		return nil, false
	}
	return o.Ipv4Gateway, true
}

// HasIpv4Gateway returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv4Gateway() bool {
	if o != nil && o.Ipv4Gateway != nil {
		return true
	}

	return false
}

// SetIpv4Gateway gets a reference to the given string and assigns it to the Ipv4Gateway field.
func (o *WorkloadEndpointStatus) SetIpv4Gateway(v string) {
	o.Ipv4Gateway = &v
}

// GetIpv4Gateways returns the Ipv4Gateways field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv4Gateways() []string {
	if o == nil || o.Ipv4Gateways == nil {
		var ret []string
		return ret
	}
	return *o.Ipv4Gateways
}

// GetIpv4GatewaysOk returns a tuple with the Ipv4Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv4GatewaysOk() (*[]string, bool) {
	if o == nil || o.Ipv4Gateways == nil {
		return nil, false
	}
	return o.Ipv4Gateways, true
}

// HasIpv4Gateways returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv4Gateways() bool {
	if o != nil && o.Ipv4Gateways != nil {
		return true
	}

	return false
}

// SetIpv4Gateways gets a reference to the given []string and assigns it to the Ipv4Gateways field.
func (o *WorkloadEndpointStatus) SetIpv4Gateways(v []string) {
	o.Ipv4Gateways = &v
}

// GetIpv6Address returns the Ipv6Address field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv6Address() string {
	if o == nil || o.Ipv6Address == nil {
		var ret string
		return ret
	}
	return *o.Ipv6Address
}

// GetIpv6AddressOk returns a tuple with the Ipv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv6AddressOk() (*string, bool) {
	if o == nil || o.Ipv6Address == nil {
		return nil, false
	}
	return o.Ipv6Address, true
}

// HasIpv6Address returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv6Address() bool {
	if o != nil && o.Ipv6Address != nil {
		return true
	}

	return false
}

// SetIpv6Address gets a reference to the given string and assigns it to the Ipv6Address field.
func (o *WorkloadEndpointStatus) SetIpv6Address(v string) {
	o.Ipv6Address = &v
}

// GetIpv6Addresses returns the Ipv6Addresses field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv6Addresses() []string {
	if o == nil || o.Ipv6Addresses == nil {
		var ret []string
		return ret
	}
	return *o.Ipv6Addresses
}

// GetIpv6AddressesOk returns a tuple with the Ipv6Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv6AddressesOk() (*[]string, bool) {
	if o == nil || o.Ipv6Addresses == nil {
		return nil, false
	}
	return o.Ipv6Addresses, true
}

// HasIpv6Addresses returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv6Addresses() bool {
	if o != nil && o.Ipv6Addresses != nil {
		return true
	}

	return false
}

// SetIpv6Addresses gets a reference to the given []string and assigns it to the Ipv6Addresses field.
func (o *WorkloadEndpointStatus) SetIpv6Addresses(v []string) {
	o.Ipv6Addresses = &v
}

// GetIpv6Gateway returns the Ipv6Gateway field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv6Gateway() string {
	if o == nil || o.Ipv6Gateway == nil {
		var ret string
		return ret
	}
	return *o.Ipv6Gateway
}

// GetIpv6GatewayOk returns a tuple with the Ipv6Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv6GatewayOk() (*string, bool) {
	if o == nil || o.Ipv6Gateway == nil {
		return nil, false
	}
	return o.Ipv6Gateway, true
}

// HasIpv6Gateway returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv6Gateway() bool {
	if o != nil && o.Ipv6Gateway != nil {
		return true
	}

	return false
}

// SetIpv6Gateway gets a reference to the given string and assigns it to the Ipv6Gateway field.
func (o *WorkloadEndpointStatus) SetIpv6Gateway(v string) {
	o.Ipv6Gateway = &v
}

// GetIpv6Gateways returns the Ipv6Gateways field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetIpv6Gateways() []string {
	if o == nil || o.Ipv6Gateways == nil {
		var ret []string
		return ret
	}
	return *o.Ipv6Gateways
}

// GetIpv6GatewaysOk returns a tuple with the Ipv6Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetIpv6GatewaysOk() (*[]string, bool) {
	if o == nil || o.Ipv6Gateways == nil {
		return nil, false
	}
	return o.Ipv6Gateways, true
}

// HasIpv6Gateways returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasIpv6Gateways() bool {
	if o != nil && o.Ipv6Gateways != nil {
		return true
	}

	return false
}

// SetIpv6Gateways gets a reference to the given []string and assigns it to the Ipv6Gateways field.
func (o *WorkloadEndpointStatus) SetIpv6Gateways(v []string) {
	o.Ipv6Gateways = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *WorkloadEndpointStatus) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetMicroSegmentVlan returns the MicroSegmentVlan field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetMicroSegmentVlan() int64 {
	if o == nil || o.MicroSegmentVlan == nil {
		var ret int64
		return ret
	}
	return *o.MicroSegmentVlan
}

// GetMicroSegmentVlanOk returns a tuple with the MicroSegmentVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetMicroSegmentVlanOk() (*int64, bool) {
	if o == nil || o.MicroSegmentVlan == nil {
		return nil, false
	}
	return o.MicroSegmentVlan, true
}

// HasMicroSegmentVlan returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasMicroSegmentVlan() bool {
	if o != nil && o.MicroSegmentVlan != nil {
		return true
	}

	return false
}

// SetMicroSegmentVlan gets a reference to the given int64 and assigns it to the MicroSegmentVlan field.
func (o *WorkloadEndpointStatus) SetMicroSegmentVlan(v int64) {
	o.MicroSegmentVlan = &v
}

// GetMigration returns the Migration field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetMigration() WorkloadEndpointMigrationStatus {
	if o == nil || o.Migration == nil {
		var ret WorkloadEndpointMigrationStatus
		return ret
	}
	return *o.Migration
}

// GetMigrationOk returns a tuple with the Migration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetMigrationOk() (*WorkloadEndpointMigrationStatus, bool) {
	if o == nil || o.Migration == nil {
		return nil, false
	}
	return o.Migration, true
}

// HasMigration returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasMigration() bool {
	if o != nil && o.Migration != nil {
		return true
	}

	return false
}

// SetMigration gets a reference to the given WorkloadEndpointMigrationStatus and assigns it to the Migration field.
func (o *WorkloadEndpointStatus) SetMigration(v WorkloadEndpointMigrationStatus) {
	o.Migration = &v
}

// GetMirrorSessions returns the MirrorSessions field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetMirrorSessions() []string {
	if o == nil || o.MirrorSessions == nil {
		var ret []string
		return ret
	}
	return *o.MirrorSessions
}

// GetMirrorSessionsOk returns a tuple with the MirrorSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetMirrorSessionsOk() (*[]string, bool) {
	if o == nil || o.MirrorSessions == nil {
		return nil, false
	}
	return o.MirrorSessions, true
}

// HasMirrorSessions returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasMirrorSessions() bool {
	if o != nil && o.MirrorSessions != nil {
		return true
	}

	return false
}

// SetMirrorSessions gets a reference to the given []string and assigns it to the MirrorSessions field.
func (o *WorkloadEndpointStatus) SetMirrorSessions(v []string) {
	o.MirrorSessions = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *WorkloadEndpointStatus) SetNetwork(v string) {
	o.Network = &v
}

// GetNodeUuid returns the NodeUuid field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetNodeUuid() string {
	if o == nil || o.NodeUuid == nil {
		var ret string
		return ret
	}
	return *o.NodeUuid
}

// GetNodeUuidOk returns a tuple with the NodeUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetNodeUuidOk() (*string, bool) {
	if o == nil || o.NodeUuid == nil {
		return nil, false
	}
	return o.NodeUuid, true
}

// HasNodeUuid returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasNodeUuid() bool {
	if o != nil && o.NodeUuid != nil {
		return true
	}

	return false
}

// SetNodeUuid gets a reference to the given string and assigns it to the NodeUuid field.
func (o *WorkloadEndpointStatus) SetNodeUuid(v string) {
	o.NodeUuid = &v
}

// GetNodeUuidList returns the NodeUuidList field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetNodeUuidList() []string {
	if o == nil || o.NodeUuidList == nil {
		var ret []string
		return ret
	}
	return *o.NodeUuidList
}

// GetNodeUuidListOk returns a tuple with the NodeUuidList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetNodeUuidListOk() (*[]string, bool) {
	if o == nil || o.NodeUuidList == nil {
		return nil, false
	}
	return o.NodeUuidList, true
}

// HasNodeUuidList returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasNodeUuidList() bool {
	if o != nil && o.NodeUuidList != nil {
		return true
	}

	return false
}

// SetNodeUuidList gets a reference to the given []string and assigns it to the NodeUuidList field.
func (o *WorkloadEndpointStatus) SetNodeUuidList(v []string) {
	o.NodeUuidList = &v
}

// GetWorkloadAttributes returns the WorkloadAttributes field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetWorkloadAttributes() map[string]string {
	if o == nil || o.WorkloadAttributes == nil {
		var ret map[string]string
		return ret
	}
	return *o.WorkloadAttributes
}

// GetWorkloadAttributesOk returns a tuple with the WorkloadAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetWorkloadAttributesOk() (*map[string]string, bool) {
	if o == nil || o.WorkloadAttributes == nil {
		return nil, false
	}
	return o.WorkloadAttributes, true
}

// HasWorkloadAttributes returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasWorkloadAttributes() bool {
	if o != nil && o.WorkloadAttributes != nil {
		return true
	}

	return false
}

// SetWorkloadAttributes gets a reference to the given map[string]string and assigns it to the WorkloadAttributes field.
func (o *WorkloadEndpointStatus) SetWorkloadAttributes(v map[string]string) {
	o.WorkloadAttributes = &v
}

// GetWorkloadName returns the WorkloadName field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetWorkloadName() string {
	if o == nil || o.WorkloadName == nil {
		var ret string
		return ret
	}
	return *o.WorkloadName
}

// GetWorkloadNameOk returns a tuple with the WorkloadName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetWorkloadNameOk() (*string, bool) {
	if o == nil || o.WorkloadName == nil {
		return nil, false
	}
	return o.WorkloadName, true
}

// HasWorkloadName returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasWorkloadName() bool {
	if o != nil && o.WorkloadName != nil {
		return true
	}

	return false
}

// SetWorkloadName gets a reference to the given string and assigns it to the WorkloadName field.
func (o *WorkloadEndpointStatus) SetWorkloadName(v string) {
	o.WorkloadName = &v
}

// GetWorkloadNames returns the WorkloadNames field value if set, zero value otherwise.
func (o *WorkloadEndpointStatus) GetWorkloadNames() []string {
	if o == nil || o.WorkloadNames == nil {
		var ret []string
		return ret
	}
	return *o.WorkloadNames
}

// GetWorkloadNamesOk returns a tuple with the WorkloadNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEndpointStatus) GetWorkloadNamesOk() (*[]string, bool) {
	if o == nil || o.WorkloadNames == nil {
		return nil, false
	}
	return o.WorkloadNames, true
}

// HasWorkloadNames returns a boolean if a field has been set.
func (o *WorkloadEndpointStatus) HasWorkloadNames() bool {
	if o != nil && o.WorkloadNames != nil {
		return true
	}

	return false
}

// SetWorkloadNames gets a reference to the given []string and assigns it to the WorkloadNames field.
func (o *WorkloadEndpointStatus) SetWorkloadNames(v []string) {
	o.WorkloadNames = &v
}

func (o WorkloadEndpointStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndpointState != nil {
		toSerialize["EndpointState"] = o.EndpointState
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.HomingHostAddr != nil {
		toSerialize["homing-host-addr"] = o.HomingHostAddr
	}
	if o.HomingHostName != nil {
		toSerialize["homing-host-name"] = o.HomingHostName
	}
	if o.Ipv4Address != nil {
		toSerialize["ipv4-address"] = o.Ipv4Address
	}
	if o.Ipv4Addresses != nil {
		toSerialize["ipv4-addresses"] = o.Ipv4Addresses
	}
	if o.Ipv4Gateway != nil {
		toSerialize["ipv4-gateway"] = o.Ipv4Gateway
	}
	if o.Ipv4Gateways != nil {
		toSerialize["ipv4-gateways"] = o.Ipv4Gateways
	}
	if o.Ipv6Address != nil {
		toSerialize["ipv6-address"] = o.Ipv6Address
	}
	if o.Ipv6Addresses != nil {
		toSerialize["ipv6-addresses"] = o.Ipv6Addresses
	}
	if o.Ipv6Gateway != nil {
		toSerialize["ipv6-gateway"] = o.Ipv6Gateway
	}
	if o.Ipv6Gateways != nil {
		toSerialize["ipv6-gateways"] = o.Ipv6Gateways
	}
	if o.MacAddress != nil {
		toSerialize["mac-address"] = o.MacAddress
	}
	if o.MicroSegmentVlan != nil {
		toSerialize["micro-segment-vlan"] = o.MicroSegmentVlan
	}
	if o.Migration != nil {
		toSerialize["migration"] = o.Migration
	}
	if o.MirrorSessions != nil {
		toSerialize["mirror-sessions"] = o.MirrorSessions
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.NodeUuid != nil {
		toSerialize["node-uuid"] = o.NodeUuid
	}
	if o.NodeUuidList != nil {
		toSerialize["node-uuid-list"] = o.NodeUuidList
	}
	if o.WorkloadAttributes != nil {
		toSerialize["workload-attributes"] = o.WorkloadAttributes
	}
	if o.WorkloadName != nil {
		toSerialize["workload-name"] = o.WorkloadName
	}
	if o.WorkloadNames != nil {
		toSerialize["workload-names"] = o.WorkloadNames
	}
	return json.Marshal(toSerialize)
}

type NullableWorkloadEndpointStatus struct {
	value *WorkloadEndpointStatus
	isSet bool
}

func (v NullableWorkloadEndpointStatus) Get() *WorkloadEndpointStatus {
	return v.value
}

func (v *NullableWorkloadEndpointStatus) Set(val *WorkloadEndpointStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadEndpointStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadEndpointStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadEndpointStatus(val *WorkloadEndpointStatus) *NullableWorkloadEndpointStatus {
	return &NullableWorkloadEndpointStatus{value: val, isSet: true}
}

func (v NullableWorkloadEndpointStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadEndpointStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


