/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecurityTrafficEncryptionPolicySpec struct for SecurityTrafficEncryptionPolicySpec
type SecurityTrafficEncryptionPolicySpec struct {
	Ipsec *SecurityIPsecProtocolSpec `json:"ipsec,omitempty"`
	// How often the keys should be rotated, in seconds.
	KeyRotationIntervalSecs *int64 `json:"key-rotation-interval-secs,omitempty"`
	// Possible values: TLS, IPsec.
	Mode *string `json:"mode,omitempty"`
	Tls *SecurityTLSProtocolSpec `json:"tls,omitempty"`
}

// NewSecurityTrafficEncryptionPolicySpec instantiates a new SecurityTrafficEncryptionPolicySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityTrafficEncryptionPolicySpec() *SecurityTrafficEncryptionPolicySpec {
	this := SecurityTrafficEncryptionPolicySpec{}
	return &this
}

// NewSecurityTrafficEncryptionPolicySpecWithDefaults instantiates a new SecurityTrafficEncryptionPolicySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityTrafficEncryptionPolicySpecWithDefaults() *SecurityTrafficEncryptionPolicySpec {
	this := SecurityTrafficEncryptionPolicySpec{}
	return &this
}

// GetIpsec returns the Ipsec field value if set, zero value otherwise.
func (o *SecurityTrafficEncryptionPolicySpec) GetIpsec() SecurityIPsecProtocolSpec {
	if o == nil || o.Ipsec == nil {
		var ret SecurityIPsecProtocolSpec
		return ret
	}
	return *o.Ipsec
}

// GetIpsecOk returns a tuple with the Ipsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityTrafficEncryptionPolicySpec) GetIpsecOk() (*SecurityIPsecProtocolSpec, bool) {
	if o == nil || o.Ipsec == nil {
		return nil, false
	}
	return o.Ipsec, true
}

// HasIpsec returns a boolean if a field has been set.
func (o *SecurityTrafficEncryptionPolicySpec) HasIpsec() bool {
	if o != nil && o.Ipsec != nil {
		return true
	}

	return false
}

// SetIpsec gets a reference to the given SecurityIPsecProtocolSpec and assigns it to the Ipsec field.
func (o *SecurityTrafficEncryptionPolicySpec) SetIpsec(v SecurityIPsecProtocolSpec) {
	o.Ipsec = &v
}

// GetKeyRotationIntervalSecs returns the KeyRotationIntervalSecs field value if set, zero value otherwise.
func (o *SecurityTrafficEncryptionPolicySpec) GetKeyRotationIntervalSecs() int64 {
	if o == nil || o.KeyRotationIntervalSecs == nil {
		var ret int64
		return ret
	}
	return *o.KeyRotationIntervalSecs
}

// GetKeyRotationIntervalSecsOk returns a tuple with the KeyRotationIntervalSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityTrafficEncryptionPolicySpec) GetKeyRotationIntervalSecsOk() (*int64, bool) {
	if o == nil || o.KeyRotationIntervalSecs == nil {
		return nil, false
	}
	return o.KeyRotationIntervalSecs, true
}

// HasKeyRotationIntervalSecs returns a boolean if a field has been set.
func (o *SecurityTrafficEncryptionPolicySpec) HasKeyRotationIntervalSecs() bool {
	if o != nil && o.KeyRotationIntervalSecs != nil {
		return true
	}

	return false
}

// SetKeyRotationIntervalSecs gets a reference to the given int64 and assigns it to the KeyRotationIntervalSecs field.
func (o *SecurityTrafficEncryptionPolicySpec) SetKeyRotationIntervalSecs(v int64) {
	o.KeyRotationIntervalSecs = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *SecurityTrafficEncryptionPolicySpec) GetMode() string {
	if o == nil || o.Mode == nil {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityTrafficEncryptionPolicySpec) GetModeOk() (*string, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *SecurityTrafficEncryptionPolicySpec) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *SecurityTrafficEncryptionPolicySpec) SetMode(v string) {
	o.Mode = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *SecurityTrafficEncryptionPolicySpec) GetTls() SecurityTLSProtocolSpec {
	if o == nil || o.Tls == nil {
		var ret SecurityTLSProtocolSpec
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityTrafficEncryptionPolicySpec) GetTlsOk() (*SecurityTLSProtocolSpec, bool) {
	if o == nil || o.Tls == nil {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *SecurityTrafficEncryptionPolicySpec) HasTls() bool {
	if o != nil && o.Tls != nil {
		return true
	}

	return false
}

// SetTls gets a reference to the given SecurityTLSProtocolSpec and assigns it to the Tls field.
func (o *SecurityTrafficEncryptionPolicySpec) SetTls(v SecurityTLSProtocolSpec) {
	o.Tls = &v
}

func (o SecurityTrafficEncryptionPolicySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ipsec != nil {
		toSerialize["ipsec"] = o.Ipsec
	}
	if o.KeyRotationIntervalSecs != nil {
		toSerialize["key-rotation-interval-secs"] = o.KeyRotationIntervalSecs
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.Tls != nil {
		toSerialize["tls"] = o.Tls
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityTrafficEncryptionPolicySpec struct {
	value *SecurityTrafficEncryptionPolicySpec
	isSet bool
}

func (v NullableSecurityTrafficEncryptionPolicySpec) Get() *SecurityTrafficEncryptionPolicySpec {
	return v.value
}

func (v *NullableSecurityTrafficEncryptionPolicySpec) Set(val *SecurityTrafficEncryptionPolicySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityTrafficEncryptionPolicySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityTrafficEncryptionPolicySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityTrafficEncryptionPolicySpec(val *SecurityTrafficEncryptionPolicySpec) *NullableSecurityTrafficEncryptionPolicySpec {
	return &NullableSecurityTrafficEncryptionPolicySpec{value: val, isSet: true}
}

func (v NullableSecurityTrafficEncryptionPolicySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityTrafficEncryptionPolicySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


