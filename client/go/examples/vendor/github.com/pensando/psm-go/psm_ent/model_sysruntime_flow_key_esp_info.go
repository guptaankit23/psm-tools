/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeFlowKeyESPInfo struct for SysruntimeFlowKeyESPInfo
type SysruntimeFlowKeyESPInfo struct {
	Spi *int64 `json:"spi,omitempty"`
}

// NewSysruntimeFlowKeyESPInfo instantiates a new SysruntimeFlowKeyESPInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeFlowKeyESPInfo() *SysruntimeFlowKeyESPInfo {
	this := SysruntimeFlowKeyESPInfo{}
	return &this
}

// NewSysruntimeFlowKeyESPInfoWithDefaults instantiates a new SysruntimeFlowKeyESPInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeFlowKeyESPInfoWithDefaults() *SysruntimeFlowKeyESPInfo {
	this := SysruntimeFlowKeyESPInfo{}
	return &this
}

// GetSpi returns the Spi field value if set, zero value otherwise.
func (o *SysruntimeFlowKeyESPInfo) GetSpi() int64 {
	if o == nil || o.Spi == nil {
		var ret int64
		return ret
	}
	return *o.Spi
}

// GetSpiOk returns a tuple with the Spi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowKeyESPInfo) GetSpiOk() (*int64, bool) {
	if o == nil || o.Spi == nil {
		return nil, false
	}
	return o.Spi, true
}

// HasSpi returns a boolean if a field has been set.
func (o *SysruntimeFlowKeyESPInfo) HasSpi() bool {
	if o != nil && o.Spi != nil {
		return true
	}

	return false
}

// SetSpi gets a reference to the given int64 and assigns it to the Spi field.
func (o *SysruntimeFlowKeyESPInfo) SetSpi(v int64) {
	o.Spi = &v
}

func (o SysruntimeFlowKeyESPInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Spi != nil {
		toSerialize["spi"] = o.Spi
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeFlowKeyESPInfo struct {
	value *SysruntimeFlowKeyESPInfo
	isSet bool
}

func (v NullableSysruntimeFlowKeyESPInfo) Get() *SysruntimeFlowKeyESPInfo {
	return v.value
}

func (v *NullableSysruntimeFlowKeyESPInfo) Set(val *SysruntimeFlowKeyESPInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeFlowKeyESPInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeFlowKeyESPInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeFlowKeyESPInfo(val *SysruntimeFlowKeyESPInfo) *NullableSysruntimeFlowKeyESPInfo {
	return &NullableSysruntimeFlowKeyESPInfo{value: val, isSet: true}
}

func (v NullableSysruntimeFlowKeyESPInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeFlowKeyESPInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


