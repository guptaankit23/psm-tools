/*
 * Auth API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// AuthLocal struct for AuthLocal
type AuthLocal struct {
	// Failed login attempts after which user is locked. Value should be at least 1.
	AllowedFailedLoginAttempts *int32 `json:"allowed-failed-login-attempts,omitempty"`
	// FailedLoginAttemptsDuration is time duration after number of failed login attempts are cleared for a user. Default is 15 min. Minimum value is 1 sec. A duration string is a sequence of decimal number and a unit suffix, such as \"300ms\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\". Should be a valid time duration of at least 1s.
	FailedLoginAttemptsDuration *string `json:"failed-login-attempts-duration,omitempty"`
	// Minimum password length. Value should be at least 3.
	PasswordLength *int32 `json:"password-length,omitempty"`
}

// NewAuthLocal instantiates a new AuthLocal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthLocal() *AuthLocal {
	this := AuthLocal{}
	var allowedFailedLoginAttempts int32 = 3
	this.AllowedFailedLoginAttempts = &allowedFailedLoginAttempts
	var failedLoginAttemptsDuration string = "15m"
	this.FailedLoginAttemptsDuration = &failedLoginAttemptsDuration
	var passwordLength int32 = 9
	this.PasswordLength = &passwordLength
	return &this
}

// NewAuthLocalWithDefaults instantiates a new AuthLocal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthLocalWithDefaults() *AuthLocal {
	this := AuthLocal{}
	var allowedFailedLoginAttempts int32 = 3
	this.AllowedFailedLoginAttempts = &allowedFailedLoginAttempts
	var failedLoginAttemptsDuration string = "15m"
	this.FailedLoginAttemptsDuration = &failedLoginAttemptsDuration
	var passwordLength int32 = 9
	this.PasswordLength = &passwordLength
	return &this
}

// GetAllowedFailedLoginAttempts returns the AllowedFailedLoginAttempts field value if set, zero value otherwise.
func (o *AuthLocal) GetAllowedFailedLoginAttempts() int32 {
	if o == nil || o.AllowedFailedLoginAttempts == nil {
		var ret int32
		return ret
	}
	return *o.AllowedFailedLoginAttempts
}

// GetAllowedFailedLoginAttemptsOk returns a tuple with the AllowedFailedLoginAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthLocal) GetAllowedFailedLoginAttemptsOk() (*int32, bool) {
	if o == nil || o.AllowedFailedLoginAttempts == nil {
		return nil, false
	}
	return o.AllowedFailedLoginAttempts, true
}

// HasAllowedFailedLoginAttempts returns a boolean if a field has been set.
func (o *AuthLocal) HasAllowedFailedLoginAttempts() bool {
	if o != nil && o.AllowedFailedLoginAttempts != nil {
		return true
	}

	return false
}

// SetAllowedFailedLoginAttempts gets a reference to the given int32 and assigns it to the AllowedFailedLoginAttempts field.
func (o *AuthLocal) SetAllowedFailedLoginAttempts(v int32) {
	o.AllowedFailedLoginAttempts = &v
}

// GetFailedLoginAttemptsDuration returns the FailedLoginAttemptsDuration field value if set, zero value otherwise.
func (o *AuthLocal) GetFailedLoginAttemptsDuration() string {
	if o == nil || o.FailedLoginAttemptsDuration == nil {
		var ret string
		return ret
	}
	return *o.FailedLoginAttemptsDuration
}

// GetFailedLoginAttemptsDurationOk returns a tuple with the FailedLoginAttemptsDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthLocal) GetFailedLoginAttemptsDurationOk() (*string, bool) {
	if o == nil || o.FailedLoginAttemptsDuration == nil {
		return nil, false
	}
	return o.FailedLoginAttemptsDuration, true
}

// HasFailedLoginAttemptsDuration returns a boolean if a field has been set.
func (o *AuthLocal) HasFailedLoginAttemptsDuration() bool {
	if o != nil && o.FailedLoginAttemptsDuration != nil {
		return true
	}

	return false
}

// SetFailedLoginAttemptsDuration gets a reference to the given string and assigns it to the FailedLoginAttemptsDuration field.
func (o *AuthLocal) SetFailedLoginAttemptsDuration(v string) {
	o.FailedLoginAttemptsDuration = &v
}

// GetPasswordLength returns the PasswordLength field value if set, zero value otherwise.
func (o *AuthLocal) GetPasswordLength() int32 {
	if o == nil || o.PasswordLength == nil {
		var ret int32
		return ret
	}
	return *o.PasswordLength
}

// GetPasswordLengthOk returns a tuple with the PasswordLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthLocal) GetPasswordLengthOk() (*int32, bool) {
	if o == nil || o.PasswordLength == nil {
		return nil, false
	}
	return o.PasswordLength, true
}

// HasPasswordLength returns a boolean if a field has been set.
func (o *AuthLocal) HasPasswordLength() bool {
	if o != nil && o.PasswordLength != nil {
		return true
	}

	return false
}

// SetPasswordLength gets a reference to the given int32 and assigns it to the PasswordLength field.
func (o *AuthLocal) SetPasswordLength(v int32) {
	o.PasswordLength = &v
}

func (o AuthLocal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedFailedLoginAttempts != nil {
		toSerialize["allowed-failed-login-attempts"] = o.AllowedFailedLoginAttempts
	}
	if o.FailedLoginAttemptsDuration != nil {
		toSerialize["failed-login-attempts-duration"] = o.FailedLoginAttemptsDuration
	}
	if o.PasswordLength != nil {
		toSerialize["password-length"] = o.PasswordLength
	}
	return json.Marshal(toSerialize)
}

type NullableAuthLocal struct {
	value *AuthLocal
	isSet bool
}

func (v NullableAuthLocal) Get() *AuthLocal {
	return v.value
}

func (v *NullableAuthLocal) Set(val *AuthLocal) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthLocal) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthLocal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthLocal(val *AuthLocal) *NullableAuthLocal {
	return &NullableAuthLocal{value: val, isSet: true}
}

func (v NullableAuthLocal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthLocal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


