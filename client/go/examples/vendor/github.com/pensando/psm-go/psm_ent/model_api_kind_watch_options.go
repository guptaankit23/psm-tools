/*
 * Workload API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ApiKindWatchOptions struct for ApiKindWatchOptions
type ApiKindWatchOptions struct {
	Group *string `json:"group,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Options *ApiListWatchOptions `json:"options,omitempty"`
}

// NewApiKindWatchOptions instantiates a new ApiKindWatchOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKindWatchOptions() *ApiKindWatchOptions {
	this := ApiKindWatchOptions{}
	return &this
}

// NewApiKindWatchOptionsWithDefaults instantiates a new ApiKindWatchOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKindWatchOptionsWithDefaults() *ApiKindWatchOptions {
	this := ApiKindWatchOptions{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ApiKindWatchOptions) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKindWatchOptions) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ApiKindWatchOptions) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *ApiKindWatchOptions) SetGroup(v string) {
	o.Group = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ApiKindWatchOptions) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKindWatchOptions) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ApiKindWatchOptions) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ApiKindWatchOptions) SetKind(v string) {
	o.Kind = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ApiKindWatchOptions) GetOptions() ApiListWatchOptions {
	if o == nil || o.Options == nil {
		var ret ApiListWatchOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKindWatchOptions) GetOptionsOk() (*ApiListWatchOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ApiKindWatchOptions) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given ApiListWatchOptions and assigns it to the Options field.
func (o *ApiKindWatchOptions) SetOptions(v ApiListWatchOptions) {
	o.Options = &v
}

func (o ApiKindWatchOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableApiKindWatchOptions struct {
	value *ApiKindWatchOptions
	isSet bool
}

func (v NullableApiKindWatchOptions) Get() *ApiKindWatchOptions {
	return v.value
}

func (v *NullableApiKindWatchOptions) Set(val *ApiKindWatchOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKindWatchOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKindWatchOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKindWatchOptions(val *ApiKindWatchOptions) *NullableApiKindWatchOptions {
	return &NullableApiKindWatchOptions{value: val, isSet: true}
}

func (v NullableApiKindWatchOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKindWatchOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


