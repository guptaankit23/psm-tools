/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecuritySGRule struct for SecuritySGRule
type SecuritySGRule struct {
	// SGRule action, either PERMIT, DENY or REJECT.
	Action *string `json:"action,omitempty"`
	// list of apps objects to which the rule applies to.
	Apps *[]string `json:"apps,omitempty"`
	// describes rule. Length of string should be between 0 and 256.
	Description *string `json:"description,omitempty"`
	// is rule disabled.
	Disable *bool `json:"disable,omitempty"`
	// inbound rule from a given ip-address/ip-mask/ip-range. Use any to refer to all ipaddresses cli-tags: id=from-ip.
	FromIpAddresses *[]string `json:"from-ip-addresses,omitempty"`
	// inbound rule from a given workload group.
	FromWorkloadGroups *[]string `json:"from-workload-groups,omitempty"`
	// rule name. Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 0 and 64.
	Name *string `json:"name,omitempty"`
	// list of (protocol, ports) pairs to which the rule applies to, in addition to apps.
	ProtoPorts *[]SecurityProtoPort `json:"proto-ports,omitempty"`
	// outbound rule from a given ip-address/ip-mask/ip-range. Use any to refer to all ipaddresses cli-tags: id=to-ip.
	ToIpAddresses *[]string `json:"to-ip-addresses,omitempty"`
	// outbound rule from a given workload group.
	ToWorkloadGroups *[]string `json:"to-workload-groups,omitempty"`
}

// NewSecuritySGRule instantiates a new SecuritySGRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySGRule() *SecuritySGRule {
	this := SecuritySGRule{}
	var action string = "permit"
	this.Action = &action
	return &this
}

// NewSecuritySGRuleWithDefaults instantiates a new SecuritySGRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySGRuleWithDefaults() *SecuritySGRule {
	this := SecuritySGRule{}
	var action string = "permit"
	this.Action = &action
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *SecuritySGRule) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *SecuritySGRule) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *SecuritySGRule) SetAction(v string) {
	o.Action = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *SecuritySGRule) GetApps() []string {
	if o == nil || o.Apps == nil {
		var ret []string
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetAppsOk() (*[]string, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *SecuritySGRule) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []string and assigns it to the Apps field.
func (o *SecuritySGRule) SetApps(v []string) {
	o.Apps = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SecuritySGRule) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SecuritySGRule) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SecuritySGRule) SetDescription(v string) {
	o.Description = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *SecuritySGRule) GetDisable() bool {
	if o == nil || o.Disable == nil {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetDisableOk() (*bool, bool) {
	if o == nil || o.Disable == nil {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *SecuritySGRule) HasDisable() bool {
	if o != nil && o.Disable != nil {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *SecuritySGRule) SetDisable(v bool) {
	o.Disable = &v
}

// GetFromIpAddresses returns the FromIpAddresses field value if set, zero value otherwise.
func (o *SecuritySGRule) GetFromIpAddresses() []string {
	if o == nil || o.FromIpAddresses == nil {
		var ret []string
		return ret
	}
	return *o.FromIpAddresses
}

// GetFromIpAddressesOk returns a tuple with the FromIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetFromIpAddressesOk() (*[]string, bool) {
	if o == nil || o.FromIpAddresses == nil {
		return nil, false
	}
	return o.FromIpAddresses, true
}

// HasFromIpAddresses returns a boolean if a field has been set.
func (o *SecuritySGRule) HasFromIpAddresses() bool {
	if o != nil && o.FromIpAddresses != nil {
		return true
	}

	return false
}

// SetFromIpAddresses gets a reference to the given []string and assigns it to the FromIpAddresses field.
func (o *SecuritySGRule) SetFromIpAddresses(v []string) {
	o.FromIpAddresses = &v
}

// GetFromWorkloadGroups returns the FromWorkloadGroups field value if set, zero value otherwise.
func (o *SecuritySGRule) GetFromWorkloadGroups() []string {
	if o == nil || o.FromWorkloadGroups == nil {
		var ret []string
		return ret
	}
	return *o.FromWorkloadGroups
}

// GetFromWorkloadGroupsOk returns a tuple with the FromWorkloadGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetFromWorkloadGroupsOk() (*[]string, bool) {
	if o == nil || o.FromWorkloadGroups == nil {
		return nil, false
	}
	return o.FromWorkloadGroups, true
}

// HasFromWorkloadGroups returns a boolean if a field has been set.
func (o *SecuritySGRule) HasFromWorkloadGroups() bool {
	if o != nil && o.FromWorkloadGroups != nil {
		return true
	}

	return false
}

// SetFromWorkloadGroups gets a reference to the given []string and assigns it to the FromWorkloadGroups field.
func (o *SecuritySGRule) SetFromWorkloadGroups(v []string) {
	o.FromWorkloadGroups = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecuritySGRule) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SecuritySGRule) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecuritySGRule) SetName(v string) {
	o.Name = &v
}

// GetProtoPorts returns the ProtoPorts field value if set, zero value otherwise.
func (o *SecuritySGRule) GetProtoPorts() []SecurityProtoPort {
	if o == nil || o.ProtoPorts == nil {
		var ret []SecurityProtoPort
		return ret
	}
	return *o.ProtoPorts
}

// GetProtoPortsOk returns a tuple with the ProtoPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetProtoPortsOk() (*[]SecurityProtoPort, bool) {
	if o == nil || o.ProtoPorts == nil {
		return nil, false
	}
	return o.ProtoPorts, true
}

// HasProtoPorts returns a boolean if a field has been set.
func (o *SecuritySGRule) HasProtoPorts() bool {
	if o != nil && o.ProtoPorts != nil {
		return true
	}

	return false
}

// SetProtoPorts gets a reference to the given []SecurityProtoPort and assigns it to the ProtoPorts field.
func (o *SecuritySGRule) SetProtoPorts(v []SecurityProtoPort) {
	o.ProtoPorts = &v
}

// GetToIpAddresses returns the ToIpAddresses field value if set, zero value otherwise.
func (o *SecuritySGRule) GetToIpAddresses() []string {
	if o == nil || o.ToIpAddresses == nil {
		var ret []string
		return ret
	}
	return *o.ToIpAddresses
}

// GetToIpAddressesOk returns a tuple with the ToIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetToIpAddressesOk() (*[]string, bool) {
	if o == nil || o.ToIpAddresses == nil {
		return nil, false
	}
	return o.ToIpAddresses, true
}

// HasToIpAddresses returns a boolean if a field has been set.
func (o *SecuritySGRule) HasToIpAddresses() bool {
	if o != nil && o.ToIpAddresses != nil {
		return true
	}

	return false
}

// SetToIpAddresses gets a reference to the given []string and assigns it to the ToIpAddresses field.
func (o *SecuritySGRule) SetToIpAddresses(v []string) {
	o.ToIpAddresses = &v
}

// GetToWorkloadGroups returns the ToWorkloadGroups field value if set, zero value otherwise.
func (o *SecuritySGRule) GetToWorkloadGroups() []string {
	if o == nil || o.ToWorkloadGroups == nil {
		var ret []string
		return ret
	}
	return *o.ToWorkloadGroups
}

// GetToWorkloadGroupsOk returns a tuple with the ToWorkloadGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRule) GetToWorkloadGroupsOk() (*[]string, bool) {
	if o == nil || o.ToWorkloadGroups == nil {
		return nil, false
	}
	return o.ToWorkloadGroups, true
}

// HasToWorkloadGroups returns a boolean if a field has been set.
func (o *SecuritySGRule) HasToWorkloadGroups() bool {
	if o != nil && o.ToWorkloadGroups != nil {
		return true
	}

	return false
}

// SetToWorkloadGroups gets a reference to the given []string and assigns it to the ToWorkloadGroups field.
func (o *SecuritySGRule) SetToWorkloadGroups(v []string) {
	o.ToWorkloadGroups = &v
}

func (o SecuritySGRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Disable != nil {
		toSerialize["disable"] = o.Disable
	}
	if o.FromIpAddresses != nil {
		toSerialize["from-ip-addresses"] = o.FromIpAddresses
	}
	if o.FromWorkloadGroups != nil {
		toSerialize["from-workload-groups"] = o.FromWorkloadGroups
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ProtoPorts != nil {
		toSerialize["proto-ports"] = o.ProtoPorts
	}
	if o.ToIpAddresses != nil {
		toSerialize["to-ip-addresses"] = o.ToIpAddresses
	}
	if o.ToWorkloadGroups != nil {
		toSerialize["to-workload-groups"] = o.ToWorkloadGroups
	}
	return json.Marshal(toSerialize)
}

type NullableSecuritySGRule struct {
	value *SecuritySGRule
	isSet bool
}

func (v NullableSecuritySGRule) Get() *SecuritySGRule {
	return v.value
}

func (v *NullableSecuritySGRule) Set(val *SecuritySGRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySGRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySGRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySGRule(val *SecuritySGRule) *NullableSecuritySGRule {
	return &NullableSecuritySGRule{value: val, isSet: true}
}

func (v NullableSecuritySGRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySGRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


