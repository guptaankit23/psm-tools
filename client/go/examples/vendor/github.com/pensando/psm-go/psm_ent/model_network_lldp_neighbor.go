/*
 * Network API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// NetworkLLDPNeighbor struct for NetworkLLDPNeighbor
type NetworkLLDPNeighbor struct {
	// Chassis  ID.
	ChassisId *string `json:"chassis-id,omitempty"`
	// Mgmt IP.
	MgmtAddress *string `json:"mgmt-address,omitempty"`
	// Port Description.
	PortDescription *string `json:"port-description,omitempty"`
	// Port Name.
	PortId *string `json:"port-id,omitempty"`
	// System Description.
	SysDescription *string `json:"sys-description,omitempty"`
	// System Name.
	SysName *string `json:"sys-name,omitempty"`
}

// NewNetworkLLDPNeighbor instantiates a new NetworkLLDPNeighbor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkLLDPNeighbor() *NetworkLLDPNeighbor {
	this := NetworkLLDPNeighbor{}
	return &this
}

// NewNetworkLLDPNeighborWithDefaults instantiates a new NetworkLLDPNeighbor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkLLDPNeighborWithDefaults() *NetworkLLDPNeighbor {
	this := NetworkLLDPNeighbor{}
	return &this
}

// GetChassisId returns the ChassisId field value if set, zero value otherwise.
func (o *NetworkLLDPNeighbor) GetChassisId() string {
	if o == nil || o.ChassisId == nil {
		var ret string
		return ret
	}
	return *o.ChassisId
}

// GetChassisIdOk returns a tuple with the ChassisId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLLDPNeighbor) GetChassisIdOk() (*string, bool) {
	if o == nil || o.ChassisId == nil {
		return nil, false
	}
	return o.ChassisId, true
}

// HasChassisId returns a boolean if a field has been set.
func (o *NetworkLLDPNeighbor) HasChassisId() bool {
	if o != nil && o.ChassisId != nil {
		return true
	}

	return false
}

// SetChassisId gets a reference to the given string and assigns it to the ChassisId field.
func (o *NetworkLLDPNeighbor) SetChassisId(v string) {
	o.ChassisId = &v
}

// GetMgmtAddress returns the MgmtAddress field value if set, zero value otherwise.
func (o *NetworkLLDPNeighbor) GetMgmtAddress() string {
	if o == nil || o.MgmtAddress == nil {
		var ret string
		return ret
	}
	return *o.MgmtAddress
}

// GetMgmtAddressOk returns a tuple with the MgmtAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLLDPNeighbor) GetMgmtAddressOk() (*string, bool) {
	if o == nil || o.MgmtAddress == nil {
		return nil, false
	}
	return o.MgmtAddress, true
}

// HasMgmtAddress returns a boolean if a field has been set.
func (o *NetworkLLDPNeighbor) HasMgmtAddress() bool {
	if o != nil && o.MgmtAddress != nil {
		return true
	}

	return false
}

// SetMgmtAddress gets a reference to the given string and assigns it to the MgmtAddress field.
func (o *NetworkLLDPNeighbor) SetMgmtAddress(v string) {
	o.MgmtAddress = &v
}

// GetPortDescription returns the PortDescription field value if set, zero value otherwise.
func (o *NetworkLLDPNeighbor) GetPortDescription() string {
	if o == nil || o.PortDescription == nil {
		var ret string
		return ret
	}
	return *o.PortDescription
}

// GetPortDescriptionOk returns a tuple with the PortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLLDPNeighbor) GetPortDescriptionOk() (*string, bool) {
	if o == nil || o.PortDescription == nil {
		return nil, false
	}
	return o.PortDescription, true
}

// HasPortDescription returns a boolean if a field has been set.
func (o *NetworkLLDPNeighbor) HasPortDescription() bool {
	if o != nil && o.PortDescription != nil {
		return true
	}

	return false
}

// SetPortDescription gets a reference to the given string and assigns it to the PortDescription field.
func (o *NetworkLLDPNeighbor) SetPortDescription(v string) {
	o.PortDescription = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *NetworkLLDPNeighbor) GetPortId() string {
	if o == nil || o.PortId == nil {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLLDPNeighbor) GetPortIdOk() (*string, bool) {
	if o == nil || o.PortId == nil {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *NetworkLLDPNeighbor) HasPortId() bool {
	if o != nil && o.PortId != nil {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *NetworkLLDPNeighbor) SetPortId(v string) {
	o.PortId = &v
}

// GetSysDescription returns the SysDescription field value if set, zero value otherwise.
func (o *NetworkLLDPNeighbor) GetSysDescription() string {
	if o == nil || o.SysDescription == nil {
		var ret string
		return ret
	}
	return *o.SysDescription
}

// GetSysDescriptionOk returns a tuple with the SysDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLLDPNeighbor) GetSysDescriptionOk() (*string, bool) {
	if o == nil || o.SysDescription == nil {
		return nil, false
	}
	return o.SysDescription, true
}

// HasSysDescription returns a boolean if a field has been set.
func (o *NetworkLLDPNeighbor) HasSysDescription() bool {
	if o != nil && o.SysDescription != nil {
		return true
	}

	return false
}

// SetSysDescription gets a reference to the given string and assigns it to the SysDescription field.
func (o *NetworkLLDPNeighbor) SetSysDescription(v string) {
	o.SysDescription = &v
}

// GetSysName returns the SysName field value if set, zero value otherwise.
func (o *NetworkLLDPNeighbor) GetSysName() string {
	if o == nil || o.SysName == nil {
		var ret string
		return ret
	}
	return *o.SysName
}

// GetSysNameOk returns a tuple with the SysName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkLLDPNeighbor) GetSysNameOk() (*string, bool) {
	if o == nil || o.SysName == nil {
		return nil, false
	}
	return o.SysName, true
}

// HasSysName returns a boolean if a field has been set.
func (o *NetworkLLDPNeighbor) HasSysName() bool {
	if o != nil && o.SysName != nil {
		return true
	}

	return false
}

// SetSysName gets a reference to the given string and assigns it to the SysName field.
func (o *NetworkLLDPNeighbor) SetSysName(v string) {
	o.SysName = &v
}

func (o NetworkLLDPNeighbor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChassisId != nil {
		toSerialize["chassis-id"] = o.ChassisId
	}
	if o.MgmtAddress != nil {
		toSerialize["mgmt-address"] = o.MgmtAddress
	}
	if o.PortDescription != nil {
		toSerialize["port-description"] = o.PortDescription
	}
	if o.PortId != nil {
		toSerialize["port-id"] = o.PortId
	}
	if o.SysDescription != nil {
		toSerialize["sys-description"] = o.SysDescription
	}
	if o.SysName != nil {
		toSerialize["sys-name"] = o.SysName
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkLLDPNeighbor struct {
	value *NetworkLLDPNeighbor
	isSet bool
}

func (v NullableNetworkLLDPNeighbor) Get() *NetworkLLDPNeighbor {
	return v.value
}

func (v *NullableNetworkLLDPNeighbor) Set(val *NetworkLLDPNeighbor) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkLLDPNeighbor) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkLLDPNeighbor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkLLDPNeighbor(val *NetworkLLDPNeighbor) *NullableNetworkLLDPNeighbor {
	return &NullableNetworkLLDPNeighbor{value: val, isSet: true}
}

func (v NullableNetworkLLDPNeighbor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkLLDPNeighbor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


