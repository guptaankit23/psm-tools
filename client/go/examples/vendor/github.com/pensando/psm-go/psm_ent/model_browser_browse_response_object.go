/*
 * Browser API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// BrowserBrowseResponseObject BrowseResponse is the response to a query request.
type BrowserBrowseResponseObject struct {
	// MaxDepth that the response explored. Reflects the value specified in the query.
	MaxDepth *int64 `json:"max-depth,omitempty"`
	// map of results. Key to the map is the URI of the  Object.
	Objects *map[string]BrowserObject `json:"objects,omitempty"`
	// QueryType is the direction of the query.
	QueryType *string `json:"query-type,omitempty"`
	// RootURI is the root node for the response.
	RootUri *string `json:"root-uri,omitempty"`
	// TotalCount of objects in the response.
	TotalCount *int64 `json:"total-count,omitempty"`
}

// NewBrowserBrowseResponseObject instantiates a new BrowserBrowseResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrowserBrowseResponseObject() *BrowserBrowseResponseObject {
	this := BrowserBrowseResponseObject{}
	return &this
}

// NewBrowserBrowseResponseObjectWithDefaults instantiates a new BrowserBrowseResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrowserBrowseResponseObjectWithDefaults() *BrowserBrowseResponseObject {
	this := BrowserBrowseResponseObject{}
	return &this
}

// GetMaxDepth returns the MaxDepth field value if set, zero value otherwise.
func (o *BrowserBrowseResponseObject) GetMaxDepth() int64 {
	if o == nil || o.MaxDepth == nil {
		var ret int64
		return ret
	}
	return *o.MaxDepth
}

// GetMaxDepthOk returns a tuple with the MaxDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseResponseObject) GetMaxDepthOk() (*int64, bool) {
	if o == nil || o.MaxDepth == nil {
		return nil, false
	}
	return o.MaxDepth, true
}

// HasMaxDepth returns a boolean if a field has been set.
func (o *BrowserBrowseResponseObject) HasMaxDepth() bool {
	if o != nil && o.MaxDepth != nil {
		return true
	}

	return false
}

// SetMaxDepth gets a reference to the given int64 and assigns it to the MaxDepth field.
func (o *BrowserBrowseResponseObject) SetMaxDepth(v int64) {
	o.MaxDepth = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *BrowserBrowseResponseObject) GetObjects() map[string]BrowserObject {
	if o == nil || o.Objects == nil {
		var ret map[string]BrowserObject
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseResponseObject) GetObjectsOk() (*map[string]BrowserObject, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *BrowserBrowseResponseObject) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given map[string]BrowserObject and assigns it to the Objects field.
func (o *BrowserBrowseResponseObject) SetObjects(v map[string]BrowserObject) {
	o.Objects = &v
}

// GetQueryType returns the QueryType field value if set, zero value otherwise.
func (o *BrowserBrowseResponseObject) GetQueryType() string {
	if o == nil || o.QueryType == nil {
		var ret string
		return ret
	}
	return *o.QueryType
}

// GetQueryTypeOk returns a tuple with the QueryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseResponseObject) GetQueryTypeOk() (*string, bool) {
	if o == nil || o.QueryType == nil {
		return nil, false
	}
	return o.QueryType, true
}

// HasQueryType returns a boolean if a field has been set.
func (o *BrowserBrowseResponseObject) HasQueryType() bool {
	if o != nil && o.QueryType != nil {
		return true
	}

	return false
}

// SetQueryType gets a reference to the given string and assigns it to the QueryType field.
func (o *BrowserBrowseResponseObject) SetQueryType(v string) {
	o.QueryType = &v
}

// GetRootUri returns the RootUri field value if set, zero value otherwise.
func (o *BrowserBrowseResponseObject) GetRootUri() string {
	if o == nil || o.RootUri == nil {
		var ret string
		return ret
	}
	return *o.RootUri
}

// GetRootUriOk returns a tuple with the RootUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseResponseObject) GetRootUriOk() (*string, bool) {
	if o == nil || o.RootUri == nil {
		return nil, false
	}
	return o.RootUri, true
}

// HasRootUri returns a boolean if a field has been set.
func (o *BrowserBrowseResponseObject) HasRootUri() bool {
	if o != nil && o.RootUri != nil {
		return true
	}

	return false
}

// SetRootUri gets a reference to the given string and assigns it to the RootUri field.
func (o *BrowserBrowseResponseObject) SetRootUri(v string) {
	o.RootUri = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *BrowserBrowseResponseObject) GetTotalCount() int64 {
	if o == nil || o.TotalCount == nil {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseResponseObject) GetTotalCountOk() (*int64, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *BrowserBrowseResponseObject) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *BrowserBrowseResponseObject) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o BrowserBrowseResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxDepth != nil {
		toSerialize["max-depth"] = o.MaxDepth
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.QueryType != nil {
		toSerialize["query-type"] = o.QueryType
	}
	if o.RootUri != nil {
		toSerialize["root-uri"] = o.RootUri
	}
	if o.TotalCount != nil {
		toSerialize["total-count"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullableBrowserBrowseResponseObject struct {
	value *BrowserBrowseResponseObject
	isSet bool
}

func (v NullableBrowserBrowseResponseObject) Get() *BrowserBrowseResponseObject {
	return v.value
}

func (v *NullableBrowserBrowseResponseObject) Set(val *BrowserBrowseResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableBrowserBrowseResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableBrowserBrowseResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrowserBrowseResponseObject(val *BrowserBrowseResponseObject) *NullableBrowserBrowseResponseObject {
	return &NullableBrowserBrowseResponseObject{value: val, isSet: true}
}

func (v NullableBrowserBrowseResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrowserBrowseResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


