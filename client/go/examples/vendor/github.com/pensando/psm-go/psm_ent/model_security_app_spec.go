/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecurityAppSpec AppSpec - spec part of App object.
type SecurityAppSpec struct {
	Alg *SecurityALG `json:"alg,omitempty"`
	// list of (protocol, ports) pairs.
	ProtoPorts *[]SecurityProtoPort `json:"proto-ports,omitempty"`
	// Timeout specifies for how long the connection be kept before removing the flow entry, specified in string as '200s', '5m', etc. Should be a valid time duration.
	Timeout *string `json:"timeout,omitempty"`
}

// NewSecurityAppSpec instantiates a new SecurityAppSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityAppSpec() *SecurityAppSpec {
	this := SecurityAppSpec{}
	return &this
}

// NewSecurityAppSpecWithDefaults instantiates a new SecurityAppSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityAppSpecWithDefaults() *SecurityAppSpec {
	this := SecurityAppSpec{}
	return &this
}

// GetAlg returns the Alg field value if set, zero value otherwise.
func (o *SecurityAppSpec) GetAlg() SecurityALG {
	if o == nil || o.Alg == nil {
		var ret SecurityALG
		return ret
	}
	return *o.Alg
}

// GetAlgOk returns a tuple with the Alg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAppSpec) GetAlgOk() (*SecurityALG, bool) {
	if o == nil || o.Alg == nil {
		return nil, false
	}
	return o.Alg, true
}

// HasAlg returns a boolean if a field has been set.
func (o *SecurityAppSpec) HasAlg() bool {
	if o != nil && o.Alg != nil {
		return true
	}

	return false
}

// SetAlg gets a reference to the given SecurityALG and assigns it to the Alg field.
func (o *SecurityAppSpec) SetAlg(v SecurityALG) {
	o.Alg = &v
}

// GetProtoPorts returns the ProtoPorts field value if set, zero value otherwise.
func (o *SecurityAppSpec) GetProtoPorts() []SecurityProtoPort {
	if o == nil || o.ProtoPorts == nil {
		var ret []SecurityProtoPort
		return ret
	}
	return *o.ProtoPorts
}

// GetProtoPortsOk returns a tuple with the ProtoPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAppSpec) GetProtoPortsOk() (*[]SecurityProtoPort, bool) {
	if o == nil || o.ProtoPorts == nil {
		return nil, false
	}
	return o.ProtoPorts, true
}

// HasProtoPorts returns a boolean if a field has been set.
func (o *SecurityAppSpec) HasProtoPorts() bool {
	if o != nil && o.ProtoPorts != nil {
		return true
	}

	return false
}

// SetProtoPorts gets a reference to the given []SecurityProtoPort and assigns it to the ProtoPorts field.
func (o *SecurityAppSpec) SetProtoPorts(v []SecurityProtoPort) {
	o.ProtoPorts = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *SecurityAppSpec) GetTimeout() string {
	if o == nil || o.Timeout == nil {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAppSpec) GetTimeoutOk() (*string, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *SecurityAppSpec) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *SecurityAppSpec) SetTimeout(v string) {
	o.Timeout = &v
}

func (o SecurityAppSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Alg != nil {
		toSerialize["alg"] = o.Alg
	}
	if o.ProtoPorts != nil {
		toSerialize["proto-ports"] = o.ProtoPorts
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityAppSpec struct {
	value *SecurityAppSpec
	isSet bool
}

func (v NullableSecurityAppSpec) Get() *SecurityAppSpec {
	return v.value
}

func (v *NullableSecurityAppSpec) Set(val *SecurityAppSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityAppSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityAppSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityAppSpec(val *SecurityAppSpec) *NullableSecurityAppSpec {
	return &NullableSecurityAppSpec{value: val, isSet: true}
}

func (v NullableSecurityAppSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityAppSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


