/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringThresholds List of threshold values.
type MonitoringThresholds struct {
	// Operator to be applied when comparing metric values against the threshold values.
	Operator *string `json:"operator,omitempty"`
	// List of threshold values to be acted against. Key should be one of the alert severity.
	Values *[]MonitoringThreshold `json:"values,omitempty"`
}

// NewMonitoringThresholds instantiates a new MonitoringThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringThresholds() *MonitoringThresholds {
	this := MonitoringThresholds{}
	var operator string = "less_or_equal_than"
	this.Operator = &operator
	return &this
}

// NewMonitoringThresholdsWithDefaults instantiates a new MonitoringThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringThresholdsWithDefaults() *MonitoringThresholds {
	this := MonitoringThresholds{}
	var operator string = "less_or_equal_than"
	this.Operator = &operator
	return &this
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *MonitoringThresholds) GetOperator() string {
	if o == nil || o.Operator == nil {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringThresholds) GetOperatorOk() (*string, bool) {
	if o == nil || o.Operator == nil {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *MonitoringThresholds) HasOperator() bool {
	if o != nil && o.Operator != nil {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *MonitoringThresholds) SetOperator(v string) {
	o.Operator = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *MonitoringThresholds) GetValues() []MonitoringThreshold {
	if o == nil || o.Values == nil {
		var ret []MonitoringThreshold
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringThresholds) GetValuesOk() (*[]MonitoringThreshold, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *MonitoringThresholds) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []MonitoringThreshold and assigns it to the Values field.
func (o *MonitoringThresholds) SetValues(v []MonitoringThreshold) {
	o.Values = &v
}

func (o MonitoringThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Operator != nil {
		toSerialize["operator"] = o.Operator
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringThresholds struct {
	value *MonitoringThresholds
	isSet bool
}

func (v NullableMonitoringThresholds) Get() *MonitoringThresholds {
	return v.value
}

func (v *NullableMonitoringThresholds) Set(val *MonitoringThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringThresholds(val *MonitoringThresholds) *NullableMonitoringThresholds {
	return &NullableMonitoringThresholds{value: val, isSet: true}
}

func (v NullableMonitoringThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


