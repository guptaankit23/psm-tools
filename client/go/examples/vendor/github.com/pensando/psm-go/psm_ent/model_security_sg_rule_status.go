/*
 * Security API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SecuritySGRuleStatus struct for SecuritySGRuleStatus
type SecuritySGRuleStatus struct {
	RuleHash *string `json:"rule-hash,omitempty"`
}

// NewSecuritySGRuleStatus instantiates a new SecuritySGRuleStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySGRuleStatus() *SecuritySGRuleStatus {
	this := SecuritySGRuleStatus{}
	return &this
}

// NewSecuritySGRuleStatusWithDefaults instantiates a new SecuritySGRuleStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySGRuleStatusWithDefaults() *SecuritySGRuleStatus {
	this := SecuritySGRuleStatus{}
	return &this
}

// GetRuleHash returns the RuleHash field value if set, zero value otherwise.
func (o *SecuritySGRuleStatus) GetRuleHash() string {
	if o == nil || o.RuleHash == nil {
		var ret string
		return ret
	}
	return *o.RuleHash
}

// GetRuleHashOk returns a tuple with the RuleHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySGRuleStatus) GetRuleHashOk() (*string, bool) {
	if o == nil || o.RuleHash == nil {
		return nil, false
	}
	return o.RuleHash, true
}

// HasRuleHash returns a boolean if a field has been set.
func (o *SecuritySGRuleStatus) HasRuleHash() bool {
	if o != nil && o.RuleHash != nil {
		return true
	}

	return false
}

// SetRuleHash gets a reference to the given string and assigns it to the RuleHash field.
func (o *SecuritySGRuleStatus) SetRuleHash(v string) {
	o.RuleHash = &v
}

func (o SecuritySGRuleStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RuleHash != nil {
		toSerialize["rule-hash"] = o.RuleHash
	}
	return json.Marshal(toSerialize)
}

type NullableSecuritySGRuleStatus struct {
	value *SecuritySGRuleStatus
	isSet bool
}

func (v NullableSecuritySGRuleStatus) Get() *SecuritySGRuleStatus {
	return v.value
}

func (v *NullableSecuritySGRuleStatus) Set(val *SecuritySGRuleStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySGRuleStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySGRuleStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySGRuleStatus(val *SecuritySGRuleStatus) *NullableSecuritySGRuleStatus {
	return &NullableSecuritySGRuleStatus{value: val, isSet: true}
}

func (v NullableSecuritySGRuleStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySGRuleStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


