/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterDSSInfo Distributed service switch (DSS) information.
type ClusterDSSInfo struct {
	// Distributed service module information.
	Dsms *[]ClusterDSM `json:"dsms,omitempty"`
	FaultInfo *ClusterFault `json:"fault-info,omitempty"`
	HaPeer *ClusterPeer `json:"ha-peer,omitempty"`
	// Hostname of the switch.
	HostName *string `json:"host-name,omitempty"`
	// Information of the remote port mac amd local port of a link.
	LinkInfo *[]ClusterNeighborPortInfo `json:"link-info,omitempty"`
	// switch software version.
	Version *string `json:"version,omitempty"`
}

// NewClusterDSSInfo instantiates a new ClusterDSSInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterDSSInfo() *ClusterDSSInfo {
	this := ClusterDSSInfo{}
	return &this
}

// NewClusterDSSInfoWithDefaults instantiates a new ClusterDSSInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterDSSInfoWithDefaults() *ClusterDSSInfo {
	this := ClusterDSSInfo{}
	return &this
}

// GetDsms returns the Dsms field value if set, zero value otherwise.
func (o *ClusterDSSInfo) GetDsms() []ClusterDSM {
	if o == nil || o.Dsms == nil {
		var ret []ClusterDSM
		return ret
	}
	return *o.Dsms
}

// GetDsmsOk returns a tuple with the Dsms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSSInfo) GetDsmsOk() (*[]ClusterDSM, bool) {
	if o == nil || o.Dsms == nil {
		return nil, false
	}
	return o.Dsms, true
}

// HasDsms returns a boolean if a field has been set.
func (o *ClusterDSSInfo) HasDsms() bool {
	if o != nil && o.Dsms != nil {
		return true
	}

	return false
}

// SetDsms gets a reference to the given []ClusterDSM and assigns it to the Dsms field.
func (o *ClusterDSSInfo) SetDsms(v []ClusterDSM) {
	o.Dsms = &v
}

// GetFaultInfo returns the FaultInfo field value if set, zero value otherwise.
func (o *ClusterDSSInfo) GetFaultInfo() ClusterFault {
	if o == nil || o.FaultInfo == nil {
		var ret ClusterFault
		return ret
	}
	return *o.FaultInfo
}

// GetFaultInfoOk returns a tuple with the FaultInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSSInfo) GetFaultInfoOk() (*ClusterFault, bool) {
	if o == nil || o.FaultInfo == nil {
		return nil, false
	}
	return o.FaultInfo, true
}

// HasFaultInfo returns a boolean if a field has been set.
func (o *ClusterDSSInfo) HasFaultInfo() bool {
	if o != nil && o.FaultInfo != nil {
		return true
	}

	return false
}

// SetFaultInfo gets a reference to the given ClusterFault and assigns it to the FaultInfo field.
func (o *ClusterDSSInfo) SetFaultInfo(v ClusterFault) {
	o.FaultInfo = &v
}

// GetHaPeer returns the HaPeer field value if set, zero value otherwise.
func (o *ClusterDSSInfo) GetHaPeer() ClusterPeer {
	if o == nil || o.HaPeer == nil {
		var ret ClusterPeer
		return ret
	}
	return *o.HaPeer
}

// GetHaPeerOk returns a tuple with the HaPeer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSSInfo) GetHaPeerOk() (*ClusterPeer, bool) {
	if o == nil || o.HaPeer == nil {
		return nil, false
	}
	return o.HaPeer, true
}

// HasHaPeer returns a boolean if a field has been set.
func (o *ClusterDSSInfo) HasHaPeer() bool {
	if o != nil && o.HaPeer != nil {
		return true
	}

	return false
}

// SetHaPeer gets a reference to the given ClusterPeer and assigns it to the HaPeer field.
func (o *ClusterDSSInfo) SetHaPeer(v ClusterPeer) {
	o.HaPeer = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *ClusterDSSInfo) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSSInfo) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *ClusterDSSInfo) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *ClusterDSSInfo) SetHostName(v string) {
	o.HostName = &v
}

// GetLinkInfo returns the LinkInfo field value if set, zero value otherwise.
func (o *ClusterDSSInfo) GetLinkInfo() []ClusterNeighborPortInfo {
	if o == nil || o.LinkInfo == nil {
		var ret []ClusterNeighborPortInfo
		return ret
	}
	return *o.LinkInfo
}

// GetLinkInfoOk returns a tuple with the LinkInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSSInfo) GetLinkInfoOk() (*[]ClusterNeighborPortInfo, bool) {
	if o == nil || o.LinkInfo == nil {
		return nil, false
	}
	return o.LinkInfo, true
}

// HasLinkInfo returns a boolean if a field has been set.
func (o *ClusterDSSInfo) HasLinkInfo() bool {
	if o != nil && o.LinkInfo != nil {
		return true
	}

	return false
}

// SetLinkInfo gets a reference to the given []ClusterNeighborPortInfo and assigns it to the LinkInfo field.
func (o *ClusterDSSInfo) SetLinkInfo(v []ClusterNeighborPortInfo) {
	o.LinkInfo = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ClusterDSSInfo) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDSSInfo) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ClusterDSSInfo) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ClusterDSSInfo) SetVersion(v string) {
	o.Version = &v
}

func (o ClusterDSSInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dsms != nil {
		toSerialize["dsms"] = o.Dsms
	}
	if o.FaultInfo != nil {
		toSerialize["fault-info"] = o.FaultInfo
	}
	if o.HaPeer != nil {
		toSerialize["ha-peer"] = o.HaPeer
	}
	if o.HostName != nil {
		toSerialize["host-name"] = o.HostName
	}
	if o.LinkInfo != nil {
		toSerialize["link-info"] = o.LinkInfo
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableClusterDSSInfo struct {
	value *ClusterDSSInfo
	isSet bool
}

func (v NullableClusterDSSInfo) Get() *ClusterDSSInfo {
	return v.value
}

func (v *NullableClusterDSSInfo) Set(val *ClusterDSSInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterDSSInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterDSSInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterDSSInfo(val *ClusterDSSInfo) *NullableClusterDSSInfo {
	return &NullableClusterDSSInfo{value: val, isSet: true}
}

func (v NullableClusterDSSInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterDSSInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


