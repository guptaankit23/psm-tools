/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringMirrorExportConfig struct for MonitoringMirrorExportConfig
type MonitoringMirrorExportConfig struct {
	// IP address of the collector/entity to which the data is to be exported. Should be a valid IPv4 address.
	Destination *string `json:"destination,omitempty"`
	// IP address of the gateway to reach the collector.
	Gateway *string `json:"gateway,omitempty"`
	// Destination VirtualRouter/VRF for mirror session. If not specified, the value is populated as \"default\". For underlay Vrf, the VrfName should be \"underlay-vpc\".
	VirtualRouter *string `json:"virtual-router,omitempty"`
}

// NewMonitoringMirrorExportConfig instantiates a new MonitoringMirrorExportConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringMirrorExportConfig() *MonitoringMirrorExportConfig {
	this := MonitoringMirrorExportConfig{}
	return &this
}

// NewMonitoringMirrorExportConfigWithDefaults instantiates a new MonitoringMirrorExportConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringMirrorExportConfigWithDefaults() *MonitoringMirrorExportConfig {
	this := MonitoringMirrorExportConfig{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *MonitoringMirrorExportConfig) GetDestination() string {
	if o == nil || o.Destination == nil {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringMirrorExportConfig) GetDestinationOk() (*string, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *MonitoringMirrorExportConfig) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *MonitoringMirrorExportConfig) SetDestination(v string) {
	o.Destination = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *MonitoringMirrorExportConfig) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringMirrorExportConfig) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *MonitoringMirrorExportConfig) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *MonitoringMirrorExportConfig) SetGateway(v string) {
	o.Gateway = &v
}

// GetVirtualRouter returns the VirtualRouter field value if set, zero value otherwise.
func (o *MonitoringMirrorExportConfig) GetVirtualRouter() string {
	if o == nil || o.VirtualRouter == nil {
		var ret string
		return ret
	}
	return *o.VirtualRouter
}

// GetVirtualRouterOk returns a tuple with the VirtualRouter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringMirrorExportConfig) GetVirtualRouterOk() (*string, bool) {
	if o == nil || o.VirtualRouter == nil {
		return nil, false
	}
	return o.VirtualRouter, true
}

// HasVirtualRouter returns a boolean if a field has been set.
func (o *MonitoringMirrorExportConfig) HasVirtualRouter() bool {
	if o != nil && o.VirtualRouter != nil {
		return true
	}

	return false
}

// SetVirtualRouter gets a reference to the given string and assigns it to the VirtualRouter field.
func (o *MonitoringMirrorExportConfig) SetVirtualRouter(v string) {
	o.VirtualRouter = &v
}

func (o MonitoringMirrorExportConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	if o.VirtualRouter != nil {
		toSerialize["virtual-router"] = o.VirtualRouter
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringMirrorExportConfig struct {
	value *MonitoringMirrorExportConfig
	isSet bool
}

func (v NullableMonitoringMirrorExportConfig) Get() *MonitoringMirrorExportConfig {
	return v.value
}

func (v *NullableMonitoringMirrorExportConfig) Set(val *MonitoringMirrorExportConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringMirrorExportConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringMirrorExportConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringMirrorExportConfig(val *MonitoringMirrorExportConfig) *NullableMonitoringMirrorExportConfig {
	return &NullableMonitoringMirrorExportConfig{value: val, isSet: true}
}

func (v NullableMonitoringMirrorExportConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringMirrorExportConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


