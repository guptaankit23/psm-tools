/*
 * Cluster API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// ClusterMemInfo Memory/RAM information.
type ClusterMemInfo struct {
	// Memory size in bytes, eg: 274760318976.
	Size *string `json:"size,omitempty"`
	// Type.
	Type *string `json:"type,omitempty"`
}

// NewClusterMemInfo instantiates a new ClusterMemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterMemInfo() *ClusterMemInfo {
	this := ClusterMemInfo{}
	var type_ string = "unknown"
	this.Type = &type_
	return &this
}

// NewClusterMemInfoWithDefaults instantiates a new ClusterMemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterMemInfoWithDefaults() *ClusterMemInfo {
	this := ClusterMemInfo{}
	var type_ string = "unknown"
	this.Type = &type_
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ClusterMemInfo) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterMemInfo) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ClusterMemInfo) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *ClusterMemInfo) SetSize(v string) {
	o.Size = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterMemInfo) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterMemInfo) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClusterMemInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ClusterMemInfo) SetType(v string) {
	o.Type = &v
}

func (o ClusterMemInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableClusterMemInfo struct {
	value *ClusterMemInfo
	isSet bool
}

func (v NullableClusterMemInfo) Get() *ClusterMemInfo {
	return v.value
}

func (v *NullableClusterMemInfo) Set(val *ClusterMemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterMemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterMemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterMemInfo(val *ClusterMemInfo) *NullableClusterMemInfo {
	return &NullableClusterMemInfo{value: val, isSet: true}
}

func (v NullableClusterMemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterMemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


