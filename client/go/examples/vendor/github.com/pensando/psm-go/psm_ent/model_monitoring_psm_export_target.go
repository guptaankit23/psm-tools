/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringPSMExportTarget PSMExportTarget represents PSM used as a log export target.
type MonitoringPSMExportTarget struct {
	// Enable is for enabling the log export. Its default value is false.
	Enable *bool `json:"enable,omitempty"`
}

// NewMonitoringPSMExportTarget instantiates a new MonitoringPSMExportTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringPSMExportTarget() *MonitoringPSMExportTarget {
	this := MonitoringPSMExportTarget{}
	return &this
}

// NewMonitoringPSMExportTargetWithDefaults instantiates a new MonitoringPSMExportTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringPSMExportTargetWithDefaults() *MonitoringPSMExportTarget {
	this := MonitoringPSMExportTarget{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *MonitoringPSMExportTarget) GetEnable() bool {
	if o == nil || o.Enable == nil {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringPSMExportTarget) GetEnableOk() (*bool, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *MonitoringPSMExportTarget) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *MonitoringPSMExportTarget) SetEnable(v bool) {
	o.Enable = &v
}

func (o MonitoringPSMExportTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringPSMExportTarget struct {
	value *MonitoringPSMExportTarget
	isSet bool
}

func (v NullableMonitoringPSMExportTarget) Get() *MonitoringPSMExportTarget {
	return v.value
}

func (v *NullableMonitoringPSMExportTarget) Set(val *MonitoringPSMExportTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringPSMExportTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringPSMExportTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringPSMExportTarget(val *MonitoringPSMExportTarget) *NullableMonitoringPSMExportTarget {
	return &NullableMonitoringPSMExportTarget{value: val, isSet: true}
}

func (v NullableMonitoringPSMExportTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringPSMExportTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


