/*
 * Routing API reference
 *
 *  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// RoutingRouteStatus struct for RoutingRouteStatus
type RoutingRouteStatus struct {
	Aspath *string `json:"aspath,omitempty"`
	Bestroute *bool `json:"bestroute,omitempty"`
	Ecmproute *bool `json:"ecmproute,omitempty"`
	Extcomm *[]string `json:"extcomm,omitempty"`
	FlapStartTime *int64 `json:"flap_start_time,omitempty"`
	FlapStatsFlapcnt *int64 `json:"flap_stats_flapcnt,omitempty"`
	FlapStatsSupprsd *bool `json:"flap_stats_supprsd,omitempty"`
	Isactive *string `json:"isactive,omitempty"`
	Nexthopaddr *string `json:"nexthopaddr,omitempty"`
	Pathorigid *string `json:"pathorigid,omitempty"`
	Prefix *RoutingEVPNRoute `json:"prefix,omitempty"`
	Reasonnotbest *string `json:"reasonnotbest,omitempty"`
	RemoteAddr *string `json:"remote_addr,omitempty"`
	Routesource *string `json:"routesource,omitempty"`
	Stale *bool `json:"stale,omitempty"`
}

// NewRoutingRouteStatus instantiates a new RoutingRouteStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingRouteStatus() *RoutingRouteStatus {
	this := RoutingRouteStatus{}
	return &this
}

// NewRoutingRouteStatusWithDefaults instantiates a new RoutingRouteStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingRouteStatusWithDefaults() *RoutingRouteStatus {
	this := RoutingRouteStatus{}
	return &this
}

// GetAspath returns the Aspath field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetAspath() string {
	if o == nil || o.Aspath == nil {
		var ret string
		return ret
	}
	return *o.Aspath
}

// GetAspathOk returns a tuple with the Aspath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetAspathOk() (*string, bool) {
	if o == nil || o.Aspath == nil {
		return nil, false
	}
	return o.Aspath, true
}

// HasAspath returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasAspath() bool {
	if o != nil && o.Aspath != nil {
		return true
	}

	return false
}

// SetAspath gets a reference to the given string and assigns it to the Aspath field.
func (o *RoutingRouteStatus) SetAspath(v string) {
	o.Aspath = &v
}

// GetBestroute returns the Bestroute field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetBestroute() bool {
	if o == nil || o.Bestroute == nil {
		var ret bool
		return ret
	}
	return *o.Bestroute
}

// GetBestrouteOk returns a tuple with the Bestroute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetBestrouteOk() (*bool, bool) {
	if o == nil || o.Bestroute == nil {
		return nil, false
	}
	return o.Bestroute, true
}

// HasBestroute returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasBestroute() bool {
	if o != nil && o.Bestroute != nil {
		return true
	}

	return false
}

// SetBestroute gets a reference to the given bool and assigns it to the Bestroute field.
func (o *RoutingRouteStatus) SetBestroute(v bool) {
	o.Bestroute = &v
}

// GetEcmproute returns the Ecmproute field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetEcmproute() bool {
	if o == nil || o.Ecmproute == nil {
		var ret bool
		return ret
	}
	return *o.Ecmproute
}

// GetEcmprouteOk returns a tuple with the Ecmproute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetEcmprouteOk() (*bool, bool) {
	if o == nil || o.Ecmproute == nil {
		return nil, false
	}
	return o.Ecmproute, true
}

// HasEcmproute returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasEcmproute() bool {
	if o != nil && o.Ecmproute != nil {
		return true
	}

	return false
}

// SetEcmproute gets a reference to the given bool and assigns it to the Ecmproute field.
func (o *RoutingRouteStatus) SetEcmproute(v bool) {
	o.Ecmproute = &v
}

// GetExtcomm returns the Extcomm field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetExtcomm() []string {
	if o == nil || o.Extcomm == nil {
		var ret []string
		return ret
	}
	return *o.Extcomm
}

// GetExtcommOk returns a tuple with the Extcomm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetExtcommOk() (*[]string, bool) {
	if o == nil || o.Extcomm == nil {
		return nil, false
	}
	return o.Extcomm, true
}

// HasExtcomm returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasExtcomm() bool {
	if o != nil && o.Extcomm != nil {
		return true
	}

	return false
}

// SetExtcomm gets a reference to the given []string and assigns it to the Extcomm field.
func (o *RoutingRouteStatus) SetExtcomm(v []string) {
	o.Extcomm = &v
}

// GetFlapStartTime returns the FlapStartTime field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetFlapStartTime() int64 {
	if o == nil || o.FlapStartTime == nil {
		var ret int64
		return ret
	}
	return *o.FlapStartTime
}

// GetFlapStartTimeOk returns a tuple with the FlapStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetFlapStartTimeOk() (*int64, bool) {
	if o == nil || o.FlapStartTime == nil {
		return nil, false
	}
	return o.FlapStartTime, true
}

// HasFlapStartTime returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasFlapStartTime() bool {
	if o != nil && o.FlapStartTime != nil {
		return true
	}

	return false
}

// SetFlapStartTime gets a reference to the given int64 and assigns it to the FlapStartTime field.
func (o *RoutingRouteStatus) SetFlapStartTime(v int64) {
	o.FlapStartTime = &v
}

// GetFlapStatsFlapcnt returns the FlapStatsFlapcnt field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetFlapStatsFlapcnt() int64 {
	if o == nil || o.FlapStatsFlapcnt == nil {
		var ret int64
		return ret
	}
	return *o.FlapStatsFlapcnt
}

// GetFlapStatsFlapcntOk returns a tuple with the FlapStatsFlapcnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetFlapStatsFlapcntOk() (*int64, bool) {
	if o == nil || o.FlapStatsFlapcnt == nil {
		return nil, false
	}
	return o.FlapStatsFlapcnt, true
}

// HasFlapStatsFlapcnt returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasFlapStatsFlapcnt() bool {
	if o != nil && o.FlapStatsFlapcnt != nil {
		return true
	}

	return false
}

// SetFlapStatsFlapcnt gets a reference to the given int64 and assigns it to the FlapStatsFlapcnt field.
func (o *RoutingRouteStatus) SetFlapStatsFlapcnt(v int64) {
	o.FlapStatsFlapcnt = &v
}

// GetFlapStatsSupprsd returns the FlapStatsSupprsd field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetFlapStatsSupprsd() bool {
	if o == nil || o.FlapStatsSupprsd == nil {
		var ret bool
		return ret
	}
	return *o.FlapStatsSupprsd
}

// GetFlapStatsSupprsdOk returns a tuple with the FlapStatsSupprsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetFlapStatsSupprsdOk() (*bool, bool) {
	if o == nil || o.FlapStatsSupprsd == nil {
		return nil, false
	}
	return o.FlapStatsSupprsd, true
}

// HasFlapStatsSupprsd returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasFlapStatsSupprsd() bool {
	if o != nil && o.FlapStatsSupprsd != nil {
		return true
	}

	return false
}

// SetFlapStatsSupprsd gets a reference to the given bool and assigns it to the FlapStatsSupprsd field.
func (o *RoutingRouteStatus) SetFlapStatsSupprsd(v bool) {
	o.FlapStatsSupprsd = &v
}

// GetIsactive returns the Isactive field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetIsactive() string {
	if o == nil || o.Isactive == nil {
		var ret string
		return ret
	}
	return *o.Isactive
}

// GetIsactiveOk returns a tuple with the Isactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetIsactiveOk() (*string, bool) {
	if o == nil || o.Isactive == nil {
		return nil, false
	}
	return o.Isactive, true
}

// HasIsactive returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasIsactive() bool {
	if o != nil && o.Isactive != nil {
		return true
	}

	return false
}

// SetIsactive gets a reference to the given string and assigns it to the Isactive field.
func (o *RoutingRouteStatus) SetIsactive(v string) {
	o.Isactive = &v
}

// GetNexthopaddr returns the Nexthopaddr field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetNexthopaddr() string {
	if o == nil || o.Nexthopaddr == nil {
		var ret string
		return ret
	}
	return *o.Nexthopaddr
}

// GetNexthopaddrOk returns a tuple with the Nexthopaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetNexthopaddrOk() (*string, bool) {
	if o == nil || o.Nexthopaddr == nil {
		return nil, false
	}
	return o.Nexthopaddr, true
}

// HasNexthopaddr returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasNexthopaddr() bool {
	if o != nil && o.Nexthopaddr != nil {
		return true
	}

	return false
}

// SetNexthopaddr gets a reference to the given string and assigns it to the Nexthopaddr field.
func (o *RoutingRouteStatus) SetNexthopaddr(v string) {
	o.Nexthopaddr = &v
}

// GetPathorigid returns the Pathorigid field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetPathorigid() string {
	if o == nil || o.Pathorigid == nil {
		var ret string
		return ret
	}
	return *o.Pathorigid
}

// GetPathorigidOk returns a tuple with the Pathorigid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetPathorigidOk() (*string, bool) {
	if o == nil || o.Pathorigid == nil {
		return nil, false
	}
	return o.Pathorigid, true
}

// HasPathorigid returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasPathorigid() bool {
	if o != nil && o.Pathorigid != nil {
		return true
	}

	return false
}

// SetPathorigid gets a reference to the given string and assigns it to the Pathorigid field.
func (o *RoutingRouteStatus) SetPathorigid(v string) {
	o.Pathorigid = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetPrefix() RoutingEVPNRoute {
	if o == nil || o.Prefix == nil {
		var ret RoutingEVPNRoute
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetPrefixOk() (*RoutingEVPNRoute, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given RoutingEVPNRoute and assigns it to the Prefix field.
func (o *RoutingRouteStatus) SetPrefix(v RoutingEVPNRoute) {
	o.Prefix = &v
}

// GetReasonnotbest returns the Reasonnotbest field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetReasonnotbest() string {
	if o == nil || o.Reasonnotbest == nil {
		var ret string
		return ret
	}
	return *o.Reasonnotbest
}

// GetReasonnotbestOk returns a tuple with the Reasonnotbest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetReasonnotbestOk() (*string, bool) {
	if o == nil || o.Reasonnotbest == nil {
		return nil, false
	}
	return o.Reasonnotbest, true
}

// HasReasonnotbest returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasReasonnotbest() bool {
	if o != nil && o.Reasonnotbest != nil {
		return true
	}

	return false
}

// SetReasonnotbest gets a reference to the given string and assigns it to the Reasonnotbest field.
func (o *RoutingRouteStatus) SetReasonnotbest(v string) {
	o.Reasonnotbest = &v
}

// GetRemoteAddr returns the RemoteAddr field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetRemoteAddr() string {
	if o == nil || o.RemoteAddr == nil {
		var ret string
		return ret
	}
	return *o.RemoteAddr
}

// GetRemoteAddrOk returns a tuple with the RemoteAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetRemoteAddrOk() (*string, bool) {
	if o == nil || o.RemoteAddr == nil {
		return nil, false
	}
	return o.RemoteAddr, true
}

// HasRemoteAddr returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasRemoteAddr() bool {
	if o != nil && o.RemoteAddr != nil {
		return true
	}

	return false
}

// SetRemoteAddr gets a reference to the given string and assigns it to the RemoteAddr field.
func (o *RoutingRouteStatus) SetRemoteAddr(v string) {
	o.RemoteAddr = &v
}

// GetRoutesource returns the Routesource field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetRoutesource() string {
	if o == nil || o.Routesource == nil {
		var ret string
		return ret
	}
	return *o.Routesource
}

// GetRoutesourceOk returns a tuple with the Routesource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetRoutesourceOk() (*string, bool) {
	if o == nil || o.Routesource == nil {
		return nil, false
	}
	return o.Routesource, true
}

// HasRoutesource returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasRoutesource() bool {
	if o != nil && o.Routesource != nil {
		return true
	}

	return false
}

// SetRoutesource gets a reference to the given string and assigns it to the Routesource field.
func (o *RoutingRouteStatus) SetRoutesource(v string) {
	o.Routesource = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *RoutingRouteStatus) GetStale() bool {
	if o == nil || o.Stale == nil {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRouteStatus) GetStaleOk() (*bool, bool) {
	if o == nil || o.Stale == nil {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *RoutingRouteStatus) HasStale() bool {
	if o != nil && o.Stale != nil {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *RoutingRouteStatus) SetStale(v bool) {
	o.Stale = &v
}

func (o RoutingRouteStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aspath != nil {
		toSerialize["aspath"] = o.Aspath
	}
	if o.Bestroute != nil {
		toSerialize["bestroute"] = o.Bestroute
	}
	if o.Ecmproute != nil {
		toSerialize["ecmproute"] = o.Ecmproute
	}
	if o.Extcomm != nil {
		toSerialize["extcomm"] = o.Extcomm
	}
	if o.FlapStartTime != nil {
		toSerialize["flap_start_time"] = o.FlapStartTime
	}
	if o.FlapStatsFlapcnt != nil {
		toSerialize["flap_stats_flapcnt"] = o.FlapStatsFlapcnt
	}
	if o.FlapStatsSupprsd != nil {
		toSerialize["flap_stats_supprsd"] = o.FlapStatsSupprsd
	}
	if o.Isactive != nil {
		toSerialize["isactive"] = o.Isactive
	}
	if o.Nexthopaddr != nil {
		toSerialize["nexthopaddr"] = o.Nexthopaddr
	}
	if o.Pathorigid != nil {
		toSerialize["pathorigid"] = o.Pathorigid
	}
	if o.Prefix != nil {
		toSerialize["prefix"] = o.Prefix
	}
	if o.Reasonnotbest != nil {
		toSerialize["reasonnotbest"] = o.Reasonnotbest
	}
	if o.RemoteAddr != nil {
		toSerialize["remote_addr"] = o.RemoteAddr
	}
	if o.Routesource != nil {
		toSerialize["routesource"] = o.Routesource
	}
	if o.Stale != nil {
		toSerialize["stale"] = o.Stale
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingRouteStatus struct {
	value *RoutingRouteStatus
	isSet bool
}

func (v NullableRoutingRouteStatus) Get() *RoutingRouteStatus {
	return v.value
}

func (v *NullableRoutingRouteStatus) Set(val *RoutingRouteStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingRouteStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingRouteStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingRouteStatus(val *RoutingRouteStatus) *NullableRoutingRouteStatus {
	return &NullableRoutingRouteStatus{value: val, isSet: true}
}

func (v NullableRoutingRouteStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingRouteStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


