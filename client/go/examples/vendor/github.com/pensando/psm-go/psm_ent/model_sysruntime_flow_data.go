/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeFlowData FlowData captures all the flow information.
type SysruntimeFlowData struct {
	ConnectionTracking *SysruntimeConnTrackInfo `json:"connection-tracking,omitempty"`
	FlowInfo *SysruntimeFlowInfo `json:"flow-info,omitempty"`
	TelemetryInfo *SysruntimeTelemetryInfo `json:"telemetry-info,omitempty"`
}

// NewSysruntimeFlowData instantiates a new SysruntimeFlowData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeFlowData() *SysruntimeFlowData {
	this := SysruntimeFlowData{}
	return &this
}

// NewSysruntimeFlowDataWithDefaults instantiates a new SysruntimeFlowData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeFlowDataWithDefaults() *SysruntimeFlowData {
	this := SysruntimeFlowData{}
	return &this
}

// GetConnectionTracking returns the ConnectionTracking field value if set, zero value otherwise.
func (o *SysruntimeFlowData) GetConnectionTracking() SysruntimeConnTrackInfo {
	if o == nil || o.ConnectionTracking == nil {
		var ret SysruntimeConnTrackInfo
		return ret
	}
	return *o.ConnectionTracking
}

// GetConnectionTrackingOk returns a tuple with the ConnectionTracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowData) GetConnectionTrackingOk() (*SysruntimeConnTrackInfo, bool) {
	if o == nil || o.ConnectionTracking == nil {
		return nil, false
	}
	return o.ConnectionTracking, true
}

// HasConnectionTracking returns a boolean if a field has been set.
func (o *SysruntimeFlowData) HasConnectionTracking() bool {
	if o != nil && o.ConnectionTracking != nil {
		return true
	}

	return false
}

// SetConnectionTracking gets a reference to the given SysruntimeConnTrackInfo and assigns it to the ConnectionTracking field.
func (o *SysruntimeFlowData) SetConnectionTracking(v SysruntimeConnTrackInfo) {
	o.ConnectionTracking = &v
}

// GetFlowInfo returns the FlowInfo field value if set, zero value otherwise.
func (o *SysruntimeFlowData) GetFlowInfo() SysruntimeFlowInfo {
	if o == nil || o.FlowInfo == nil {
		var ret SysruntimeFlowInfo
		return ret
	}
	return *o.FlowInfo
}

// GetFlowInfoOk returns a tuple with the FlowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowData) GetFlowInfoOk() (*SysruntimeFlowInfo, bool) {
	if o == nil || o.FlowInfo == nil {
		return nil, false
	}
	return o.FlowInfo, true
}

// HasFlowInfo returns a boolean if a field has been set.
func (o *SysruntimeFlowData) HasFlowInfo() bool {
	if o != nil && o.FlowInfo != nil {
		return true
	}

	return false
}

// SetFlowInfo gets a reference to the given SysruntimeFlowInfo and assigns it to the FlowInfo field.
func (o *SysruntimeFlowData) SetFlowInfo(v SysruntimeFlowInfo) {
	o.FlowInfo = &v
}

// GetTelemetryInfo returns the TelemetryInfo field value if set, zero value otherwise.
func (o *SysruntimeFlowData) GetTelemetryInfo() SysruntimeTelemetryInfo {
	if o == nil || o.TelemetryInfo == nil {
		var ret SysruntimeTelemetryInfo
		return ret
	}
	return *o.TelemetryInfo
}

// GetTelemetryInfoOk returns a tuple with the TelemetryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeFlowData) GetTelemetryInfoOk() (*SysruntimeTelemetryInfo, bool) {
	if o == nil || o.TelemetryInfo == nil {
		return nil, false
	}
	return o.TelemetryInfo, true
}

// HasTelemetryInfo returns a boolean if a field has been set.
func (o *SysruntimeFlowData) HasTelemetryInfo() bool {
	if o != nil && o.TelemetryInfo != nil {
		return true
	}

	return false
}

// SetTelemetryInfo gets a reference to the given SysruntimeTelemetryInfo and assigns it to the TelemetryInfo field.
func (o *SysruntimeFlowData) SetTelemetryInfo(v SysruntimeTelemetryInfo) {
	o.TelemetryInfo = &v
}

func (o SysruntimeFlowData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionTracking != nil {
		toSerialize["connection-tracking"] = o.ConnectionTracking
	}
	if o.FlowInfo != nil {
		toSerialize["flow-info"] = o.FlowInfo
	}
	if o.TelemetryInfo != nil {
		toSerialize["telemetry-info"] = o.TelemetryInfo
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeFlowData struct {
	value *SysruntimeFlowData
	isSet bool
}

func (v NullableSysruntimeFlowData) Get() *SysruntimeFlowData {
	return v.value
}

func (v *NullableSysruntimeFlowData) Set(val *SysruntimeFlowData) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeFlowData) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeFlowData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeFlowData(val *SysruntimeFlowData) *NullableSysruntimeFlowData {
	return &NullableSysruntimeFlowData{value: val, isSet: true}
}

func (v NullableSysruntimeFlowData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeFlowData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


