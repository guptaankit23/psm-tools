/*
 * Monitoring API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// MonitoringAlertPolicySpec struct for MonitoringAlertPolicySpec
type MonitoringAlertPolicySpec struct {
	// name of the alert destinations to be used to send out notification when an alert gets generated.
	Destinations *[]string `json:"destinations,omitempty"`
	// User can disable the policy by setting this field. Disabled policies will not generate any more alerts but the outstanding ones will remain as is.
	Enable *bool `json:"enable,omitempty"`
	// Message to be used while generating the alert.
	Message *string `json:"message,omitempty"`
	// List of requirements that needs to be met to trigger an alert.
	Requirements *[]FieldsRequirement `json:"requirements,omitempty"`
	// Resource type - target resource to run this policy. e.g. Network, Endpoint - object based alert policy Event - event based alert policy EndpointMetrics - metric based alert policy based on the resource type, the policy gets interpreted.
	Resource *string `json:"resource,omitempty"`
	// Severity to be set for an alert that gets triggered from this rule.
	Severity *string `json:"severity,omitempty"`
}

// NewMonitoringAlertPolicySpec instantiates a new MonitoringAlertPolicySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringAlertPolicySpec() *MonitoringAlertPolicySpec {
	this := MonitoringAlertPolicySpec{}
	var enable bool = true
	this.Enable = &enable
	var severity string = "info"
	this.Severity = &severity
	return &this
}

// NewMonitoringAlertPolicySpecWithDefaults instantiates a new MonitoringAlertPolicySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringAlertPolicySpecWithDefaults() *MonitoringAlertPolicySpec {
	this := MonitoringAlertPolicySpec{}
	var enable bool = true
	this.Enable = &enable
	var severity string = "info"
	this.Severity = &severity
	return &this
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *MonitoringAlertPolicySpec) GetDestinations() []string {
	if o == nil || o.Destinations == nil {
		var ret []string
		return ret
	}
	return *o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertPolicySpec) GetDestinationsOk() (*[]string, bool) {
	if o == nil || o.Destinations == nil {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *MonitoringAlertPolicySpec) HasDestinations() bool {
	if o != nil && o.Destinations != nil {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []string and assigns it to the Destinations field.
func (o *MonitoringAlertPolicySpec) SetDestinations(v []string) {
	o.Destinations = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *MonitoringAlertPolicySpec) GetEnable() bool {
	if o == nil || o.Enable == nil {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertPolicySpec) GetEnableOk() (*bool, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *MonitoringAlertPolicySpec) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *MonitoringAlertPolicySpec) SetEnable(v bool) {
	o.Enable = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *MonitoringAlertPolicySpec) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertPolicySpec) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *MonitoringAlertPolicySpec) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *MonitoringAlertPolicySpec) SetMessage(v string) {
	o.Message = &v
}

// GetRequirements returns the Requirements field value if set, zero value otherwise.
func (o *MonitoringAlertPolicySpec) GetRequirements() []FieldsRequirement {
	if o == nil || o.Requirements == nil {
		var ret []FieldsRequirement
		return ret
	}
	return *o.Requirements
}

// GetRequirementsOk returns a tuple with the Requirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertPolicySpec) GetRequirementsOk() (*[]FieldsRequirement, bool) {
	if o == nil || o.Requirements == nil {
		return nil, false
	}
	return o.Requirements, true
}

// HasRequirements returns a boolean if a field has been set.
func (o *MonitoringAlertPolicySpec) HasRequirements() bool {
	if o != nil && o.Requirements != nil {
		return true
	}

	return false
}

// SetRequirements gets a reference to the given []FieldsRequirement and assigns it to the Requirements field.
func (o *MonitoringAlertPolicySpec) SetRequirements(v []FieldsRequirement) {
	o.Requirements = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *MonitoringAlertPolicySpec) GetResource() string {
	if o == nil || o.Resource == nil {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertPolicySpec) GetResourceOk() (*string, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *MonitoringAlertPolicySpec) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *MonitoringAlertPolicySpec) SetResource(v string) {
	o.Resource = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *MonitoringAlertPolicySpec) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringAlertPolicySpec) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *MonitoringAlertPolicySpec) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *MonitoringAlertPolicySpec) SetSeverity(v string) {
	o.Severity = &v
}

func (o MonitoringAlertPolicySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Destinations != nil {
		toSerialize["destinations"] = o.Destinations
	}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Requirements != nil {
		toSerialize["requirements"] = o.Requirements
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	return json.Marshal(toSerialize)
}

type NullableMonitoringAlertPolicySpec struct {
	value *MonitoringAlertPolicySpec
	isSet bool
}

func (v NullableMonitoringAlertPolicySpec) Get() *MonitoringAlertPolicySpec {
	return v.value
}

func (v *NullableMonitoringAlertPolicySpec) Set(val *MonitoringAlertPolicySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringAlertPolicySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringAlertPolicySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringAlertPolicySpec(val *MonitoringAlertPolicySpec) *NullableMonitoringAlertPolicySpec {
	return &NullableMonitoringAlertPolicySpec{value: val, isSet: true}
}

func (v NullableMonitoringAlertPolicySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringAlertPolicySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


