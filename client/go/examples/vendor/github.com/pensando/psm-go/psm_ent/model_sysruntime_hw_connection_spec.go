/*
 * Sysruntime API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// SysruntimeHWConnectionSpec HWConnectionSpec represents a full session with forward and reverse flow It is possible to have a session with just one flow (for L2 mcast/bcast).
type SysruntimeHWConnectionSpec struct {
	InitiatorFlow *SysruntimeFlowSpec `json:"initiator-flow,omitempty"`
	PeerInitiatorFlow *SysruntimeFlowSpec `json:"peer-initiator-flow,omitempty"`
	PeerResponderFlow *SysruntimeFlowSpec `json:"peer-responder-flow,omitempty"`
	ResponderFlow *SysruntimeFlowSpec `json:"responder-flow,omitempty"`
	// sessionId is unique session identifier.
	SessionId *string `json:"session-id,omitempty"`
}

// NewSysruntimeHWConnectionSpec instantiates a new SysruntimeHWConnectionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSysruntimeHWConnectionSpec() *SysruntimeHWConnectionSpec {
	this := SysruntimeHWConnectionSpec{}
	return &this
}

// NewSysruntimeHWConnectionSpecWithDefaults instantiates a new SysruntimeHWConnectionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSysruntimeHWConnectionSpecWithDefaults() *SysruntimeHWConnectionSpec {
	this := SysruntimeHWConnectionSpec{}
	return &this
}

// GetInitiatorFlow returns the InitiatorFlow field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionSpec) GetInitiatorFlow() SysruntimeFlowSpec {
	if o == nil || o.InitiatorFlow == nil {
		var ret SysruntimeFlowSpec
		return ret
	}
	return *o.InitiatorFlow
}

// GetInitiatorFlowOk returns a tuple with the InitiatorFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionSpec) GetInitiatorFlowOk() (*SysruntimeFlowSpec, bool) {
	if o == nil || o.InitiatorFlow == nil {
		return nil, false
	}
	return o.InitiatorFlow, true
}

// HasInitiatorFlow returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionSpec) HasInitiatorFlow() bool {
	if o != nil && o.InitiatorFlow != nil {
		return true
	}

	return false
}

// SetInitiatorFlow gets a reference to the given SysruntimeFlowSpec and assigns it to the InitiatorFlow field.
func (o *SysruntimeHWConnectionSpec) SetInitiatorFlow(v SysruntimeFlowSpec) {
	o.InitiatorFlow = &v
}

// GetPeerInitiatorFlow returns the PeerInitiatorFlow field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionSpec) GetPeerInitiatorFlow() SysruntimeFlowSpec {
	if o == nil || o.PeerInitiatorFlow == nil {
		var ret SysruntimeFlowSpec
		return ret
	}
	return *o.PeerInitiatorFlow
}

// GetPeerInitiatorFlowOk returns a tuple with the PeerInitiatorFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionSpec) GetPeerInitiatorFlowOk() (*SysruntimeFlowSpec, bool) {
	if o == nil || o.PeerInitiatorFlow == nil {
		return nil, false
	}
	return o.PeerInitiatorFlow, true
}

// HasPeerInitiatorFlow returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionSpec) HasPeerInitiatorFlow() bool {
	if o != nil && o.PeerInitiatorFlow != nil {
		return true
	}

	return false
}

// SetPeerInitiatorFlow gets a reference to the given SysruntimeFlowSpec and assigns it to the PeerInitiatorFlow field.
func (o *SysruntimeHWConnectionSpec) SetPeerInitiatorFlow(v SysruntimeFlowSpec) {
	o.PeerInitiatorFlow = &v
}

// GetPeerResponderFlow returns the PeerResponderFlow field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionSpec) GetPeerResponderFlow() SysruntimeFlowSpec {
	if o == nil || o.PeerResponderFlow == nil {
		var ret SysruntimeFlowSpec
		return ret
	}
	return *o.PeerResponderFlow
}

// GetPeerResponderFlowOk returns a tuple with the PeerResponderFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionSpec) GetPeerResponderFlowOk() (*SysruntimeFlowSpec, bool) {
	if o == nil || o.PeerResponderFlow == nil {
		return nil, false
	}
	return o.PeerResponderFlow, true
}

// HasPeerResponderFlow returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionSpec) HasPeerResponderFlow() bool {
	if o != nil && o.PeerResponderFlow != nil {
		return true
	}

	return false
}

// SetPeerResponderFlow gets a reference to the given SysruntimeFlowSpec and assigns it to the PeerResponderFlow field.
func (o *SysruntimeHWConnectionSpec) SetPeerResponderFlow(v SysruntimeFlowSpec) {
	o.PeerResponderFlow = &v
}

// GetResponderFlow returns the ResponderFlow field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionSpec) GetResponderFlow() SysruntimeFlowSpec {
	if o == nil || o.ResponderFlow == nil {
		var ret SysruntimeFlowSpec
		return ret
	}
	return *o.ResponderFlow
}

// GetResponderFlowOk returns a tuple with the ResponderFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionSpec) GetResponderFlowOk() (*SysruntimeFlowSpec, bool) {
	if o == nil || o.ResponderFlow == nil {
		return nil, false
	}
	return o.ResponderFlow, true
}

// HasResponderFlow returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionSpec) HasResponderFlow() bool {
	if o != nil && o.ResponderFlow != nil {
		return true
	}

	return false
}

// SetResponderFlow gets a reference to the given SysruntimeFlowSpec and assigns it to the ResponderFlow field.
func (o *SysruntimeHWConnectionSpec) SetResponderFlow(v SysruntimeFlowSpec) {
	o.ResponderFlow = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *SysruntimeHWConnectionSpec) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SysruntimeHWConnectionSpec) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *SysruntimeHWConnectionSpec) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *SysruntimeHWConnectionSpec) SetSessionId(v string) {
	o.SessionId = &v
}

func (o SysruntimeHWConnectionSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InitiatorFlow != nil {
		toSerialize["initiator-flow"] = o.InitiatorFlow
	}
	if o.PeerInitiatorFlow != nil {
		toSerialize["peer-initiator-flow"] = o.PeerInitiatorFlow
	}
	if o.PeerResponderFlow != nil {
		toSerialize["peer-responder-flow"] = o.PeerResponderFlow
	}
	if o.ResponderFlow != nil {
		toSerialize["responder-flow"] = o.ResponderFlow
	}
	if o.SessionId != nil {
		toSerialize["session-id"] = o.SessionId
	}
	return json.Marshal(toSerialize)
}

type NullableSysruntimeHWConnectionSpec struct {
	value *SysruntimeHWConnectionSpec
	isSet bool
}

func (v NullableSysruntimeHWConnectionSpec) Get() *SysruntimeHWConnectionSpec {
	return v.value
}

func (v *NullableSysruntimeHWConnectionSpec) Set(val *SysruntimeHWConnectionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSysruntimeHWConnectionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSysruntimeHWConnectionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSysruntimeHWConnectionSpec(val *SysruntimeHWConnectionSpec) *NullableSysruntimeHWConnectionSpec {
	return &NullableSysruntimeHWConnectionSpec{value: val, isSet: true}
}

func (v NullableSysruntimeHWConnectionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSysruntimeHWConnectionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


