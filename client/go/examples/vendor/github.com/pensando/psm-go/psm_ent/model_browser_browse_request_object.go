/*
 * Browser API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// BrowserBrowseRequestObject struct for BrowserBrowseRequestObject
type BrowserBrowseRequestObject struct {
	// When CountOnly is set the response only contains counts and not the actual objects.
	CountOnly *bool `json:"count-only,omitempty"`
	// KindFilters Specify the kind types to match/filter (for links only) on when returning the response.
	KindFilters *[]string `json:"kind-filters,omitempty"`
	// Max-Depth specifies how deep the query should explore. By default depth is set to 1 which means immediate relations 0 means to maximum depth.
	MaxDepth *int64 `json:"max-depth,omitempty"`
	// QueryType is the direction of the query.
	QueryType *string `json:"query-type,omitempty"`
	// URI is the root node from where to query. Length of string should be between 2 and 512.
	Uri *string `json:"uri,omitempty"`
}

// NewBrowserBrowseRequestObject instantiates a new BrowserBrowseRequestObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrowserBrowseRequestObject() *BrowserBrowseRequestObject {
	this := BrowserBrowseRequestObject{}
	var maxDepth int64 = 1
	this.MaxDepth = &maxDepth
	var queryType string = "dependencies"
	this.QueryType = &queryType
	return &this
}

// NewBrowserBrowseRequestObjectWithDefaults instantiates a new BrowserBrowseRequestObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrowserBrowseRequestObjectWithDefaults() *BrowserBrowseRequestObject {
	this := BrowserBrowseRequestObject{}
	var maxDepth int64 = 1
	this.MaxDepth = &maxDepth
	var queryType string = "dependencies"
	this.QueryType = &queryType
	return &this
}

// GetCountOnly returns the CountOnly field value if set, zero value otherwise.
func (o *BrowserBrowseRequestObject) GetCountOnly() bool {
	if o == nil || o.CountOnly == nil {
		var ret bool
		return ret
	}
	return *o.CountOnly
}

// GetCountOnlyOk returns a tuple with the CountOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequestObject) GetCountOnlyOk() (*bool, bool) {
	if o == nil || o.CountOnly == nil {
		return nil, false
	}
	return o.CountOnly, true
}

// HasCountOnly returns a boolean if a field has been set.
func (o *BrowserBrowseRequestObject) HasCountOnly() bool {
	if o != nil && o.CountOnly != nil {
		return true
	}

	return false
}

// SetCountOnly gets a reference to the given bool and assigns it to the CountOnly field.
func (o *BrowserBrowseRequestObject) SetCountOnly(v bool) {
	o.CountOnly = &v
}

// GetKindFilters returns the KindFilters field value if set, zero value otherwise.
func (o *BrowserBrowseRequestObject) GetKindFilters() []string {
	if o == nil || o.KindFilters == nil {
		var ret []string
		return ret
	}
	return *o.KindFilters
}

// GetKindFiltersOk returns a tuple with the KindFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequestObject) GetKindFiltersOk() (*[]string, bool) {
	if o == nil || o.KindFilters == nil {
		return nil, false
	}
	return o.KindFilters, true
}

// HasKindFilters returns a boolean if a field has been set.
func (o *BrowserBrowseRequestObject) HasKindFilters() bool {
	if o != nil && o.KindFilters != nil {
		return true
	}

	return false
}

// SetKindFilters gets a reference to the given []string and assigns it to the KindFilters field.
func (o *BrowserBrowseRequestObject) SetKindFilters(v []string) {
	o.KindFilters = &v
}

// GetMaxDepth returns the MaxDepth field value if set, zero value otherwise.
func (o *BrowserBrowseRequestObject) GetMaxDepth() int64 {
	if o == nil || o.MaxDepth == nil {
		var ret int64
		return ret
	}
	return *o.MaxDepth
}

// GetMaxDepthOk returns a tuple with the MaxDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequestObject) GetMaxDepthOk() (*int64, bool) {
	if o == nil || o.MaxDepth == nil {
		return nil, false
	}
	return o.MaxDepth, true
}

// HasMaxDepth returns a boolean if a field has been set.
func (o *BrowserBrowseRequestObject) HasMaxDepth() bool {
	if o != nil && o.MaxDepth != nil {
		return true
	}

	return false
}

// SetMaxDepth gets a reference to the given int64 and assigns it to the MaxDepth field.
func (o *BrowserBrowseRequestObject) SetMaxDepth(v int64) {
	o.MaxDepth = &v
}

// GetQueryType returns the QueryType field value if set, zero value otherwise.
func (o *BrowserBrowseRequestObject) GetQueryType() string {
	if o == nil || o.QueryType == nil {
		var ret string
		return ret
	}
	return *o.QueryType
}

// GetQueryTypeOk returns a tuple with the QueryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequestObject) GetQueryTypeOk() (*string, bool) {
	if o == nil || o.QueryType == nil {
		return nil, false
	}
	return o.QueryType, true
}

// HasQueryType returns a boolean if a field has been set.
func (o *BrowserBrowseRequestObject) HasQueryType() bool {
	if o != nil && o.QueryType != nil {
		return true
	}

	return false
}

// SetQueryType gets a reference to the given string and assigns it to the QueryType field.
func (o *BrowserBrowseRequestObject) SetQueryType(v string) {
	o.QueryType = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *BrowserBrowseRequestObject) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowserBrowseRequestObject) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *BrowserBrowseRequestObject) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *BrowserBrowseRequestObject) SetUri(v string) {
	o.Uri = &v
}

func (o BrowserBrowseRequestObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CountOnly != nil {
		toSerialize["count-only"] = o.CountOnly
	}
	if o.KindFilters != nil {
		toSerialize["kind-filters"] = o.KindFilters
	}
	if o.MaxDepth != nil {
		toSerialize["max-depth"] = o.MaxDepth
	}
	if o.QueryType != nil {
		toSerialize["query-type"] = o.QueryType
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableBrowserBrowseRequestObject struct {
	value *BrowserBrowseRequestObject
	isSet bool
}

func (v NullableBrowserBrowseRequestObject) Get() *BrowserBrowseRequestObject {
	return v.value
}

func (v *NullableBrowserBrowseRequestObject) Set(val *BrowserBrowseRequestObject) {
	v.value = val
	v.isSet = true
}

func (v NullableBrowserBrowseRequestObject) IsSet() bool {
	return v.isSet
}

func (v *NullableBrowserBrowseRequestObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrowserBrowseRequestObject(val *BrowserBrowseRequestObject) *NullableBrowserBrowseRequestObject {
	return &NullableBrowserBrowseRequestObject{value: val, isSet: true}
}

func (v NullableBrowserBrowseRequestObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrowserBrowseRequestObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


