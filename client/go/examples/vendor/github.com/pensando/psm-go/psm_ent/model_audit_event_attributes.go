/*
 * Audit API reference
 *
 * Service name  
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psm_ent

import (
	"encoding/json"
)

// AuditEventAttributes Attributes contains all the audit log attributes.
type AuditEventAttributes struct {
	// Action that was requested/performed on the referred object. For non API server resources, it is the http method.
	Action *string `json:"action,omitempty"`
	// IP addresses of client and intermediate proxies from where API request was made.
	ClientIps *[]string `json:"client-ips,omitempty"`
	// Data is unstructured key value map stored with audit log that may be set by hooks in API Gateway. We can store Signature in JWS compact serialization format in this map. Data in this map will not be signed.
	Data *map[string]string `json:"data,omitempty"`
	// ID passed in by an external application to link audit event to the request. It should be AlphaNumeric and can contain -. Maximum length supported is 64. Length of string should be between 0 and 64. Must be alpha numeric and can have -.
	ExternalId *string `json:"external-id,omitempty"`
	// IP address of API Gateway where action was observed.
	GatewayIp *string `json:"gateway-ip,omitempty"`
	// Name of the venice node where action was observed.
	GatewayNode *string `json:"gateway-node,omitempty"`
	// Level to control amount of audit information logged.
	Level *string `json:"level,omitempty"`
	// Outcome represents the outcome of action on resource.
	Outcome *string `json:"outcome,omitempty"`
	// Object from the request in JSON format.
	RequestObject *string `json:"request-object,omitempty"`
	// RequestURI is the request URI as sent by the client. Should be a valid URI.
	RequestUri *string `json:"request-uri,omitempty"`
	Resource *ApiObjectRef `json:"resource,omitempty"`
	// Object from the response in JSON format to be sent to the client.
	ResponseObject *string `json:"response-object,omitempty"`
	// Name of service that handled the request and performed the requested operation for ex: search, events etc.
	ServiceName *string `json:"service-name,omitempty"`
	// Request handling stage at which audit log was generated.
	Stage *string `json:"stage,omitempty"`
	User *ApiObjectRef `json:"user,omitempty"`
}

// NewAuditEventAttributes instantiates a new AuditEventAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditEventAttributes() *AuditEventAttributes {
	this := AuditEventAttributes{}
	var level string = "basic"
	this.Level = &level
	var outcome string = "success"
	this.Outcome = &outcome
	var stage string = "requestauthorization"
	this.Stage = &stage
	return &this
}

// NewAuditEventAttributesWithDefaults instantiates a new AuditEventAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditEventAttributesWithDefaults() *AuditEventAttributes {
	this := AuditEventAttributes{}
	var level string = "basic"
	this.Level = &level
	var outcome string = "success"
	this.Outcome = &outcome
	var stage string = "requestauthorization"
	this.Stage = &stage
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *AuditEventAttributes) SetAction(v string) {
	o.Action = &v
}

// GetClientIps returns the ClientIps field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetClientIps() []string {
	if o == nil || o.ClientIps == nil {
		var ret []string
		return ret
	}
	return *o.ClientIps
}

// GetClientIpsOk returns a tuple with the ClientIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetClientIpsOk() (*[]string, bool) {
	if o == nil || o.ClientIps == nil {
		return nil, false
	}
	return o.ClientIps, true
}

// HasClientIps returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasClientIps() bool {
	if o != nil && o.ClientIps != nil {
		return true
	}

	return false
}

// SetClientIps gets a reference to the given []string and assigns it to the ClientIps field.
func (o *AuditEventAttributes) SetClientIps(v []string) {
	o.ClientIps = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetData() map[string]string {
	if o == nil || o.Data == nil {
		var ret map[string]string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetDataOk() (*map[string]string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]string and assigns it to the Data field.
func (o *AuditEventAttributes) SetData(v map[string]string) {
	o.Data = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *AuditEventAttributes) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetGatewayIp returns the GatewayIp field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetGatewayIp() string {
	if o == nil || o.GatewayIp == nil {
		var ret string
		return ret
	}
	return *o.GatewayIp
}

// GetGatewayIpOk returns a tuple with the GatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetGatewayIpOk() (*string, bool) {
	if o == nil || o.GatewayIp == nil {
		return nil, false
	}
	return o.GatewayIp, true
}

// HasGatewayIp returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasGatewayIp() bool {
	if o != nil && o.GatewayIp != nil {
		return true
	}

	return false
}

// SetGatewayIp gets a reference to the given string and assigns it to the GatewayIp field.
func (o *AuditEventAttributes) SetGatewayIp(v string) {
	o.GatewayIp = &v
}

// GetGatewayNode returns the GatewayNode field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetGatewayNode() string {
	if o == nil || o.GatewayNode == nil {
		var ret string
		return ret
	}
	return *o.GatewayNode
}

// GetGatewayNodeOk returns a tuple with the GatewayNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetGatewayNodeOk() (*string, bool) {
	if o == nil || o.GatewayNode == nil {
		return nil, false
	}
	return o.GatewayNode, true
}

// HasGatewayNode returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasGatewayNode() bool {
	if o != nil && o.GatewayNode != nil {
		return true
	}

	return false
}

// SetGatewayNode gets a reference to the given string and assigns it to the GatewayNode field.
func (o *AuditEventAttributes) SetGatewayNode(v string) {
	o.GatewayNode = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetLevel() string {
	if o == nil || o.Level == nil {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetLevelOk() (*string, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *AuditEventAttributes) SetLevel(v string) {
	o.Level = &v
}

// GetOutcome returns the Outcome field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetOutcome() string {
	if o == nil || o.Outcome == nil {
		var ret string
		return ret
	}
	return *o.Outcome
}

// GetOutcomeOk returns a tuple with the Outcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetOutcomeOk() (*string, bool) {
	if o == nil || o.Outcome == nil {
		return nil, false
	}
	return o.Outcome, true
}

// HasOutcome returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasOutcome() bool {
	if o != nil && o.Outcome != nil {
		return true
	}

	return false
}

// SetOutcome gets a reference to the given string and assigns it to the Outcome field.
func (o *AuditEventAttributes) SetOutcome(v string) {
	o.Outcome = &v
}

// GetRequestObject returns the RequestObject field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetRequestObject() string {
	if o == nil || o.RequestObject == nil {
		var ret string
		return ret
	}
	return *o.RequestObject
}

// GetRequestObjectOk returns a tuple with the RequestObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetRequestObjectOk() (*string, bool) {
	if o == nil || o.RequestObject == nil {
		return nil, false
	}
	return o.RequestObject, true
}

// HasRequestObject returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasRequestObject() bool {
	if o != nil && o.RequestObject != nil {
		return true
	}

	return false
}

// SetRequestObject gets a reference to the given string and assigns it to the RequestObject field.
func (o *AuditEventAttributes) SetRequestObject(v string) {
	o.RequestObject = &v
}

// GetRequestUri returns the RequestUri field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetRequestUri() string {
	if o == nil || o.RequestUri == nil {
		var ret string
		return ret
	}
	return *o.RequestUri
}

// GetRequestUriOk returns a tuple with the RequestUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetRequestUriOk() (*string, bool) {
	if o == nil || o.RequestUri == nil {
		return nil, false
	}
	return o.RequestUri, true
}

// HasRequestUri returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasRequestUri() bool {
	if o != nil && o.RequestUri != nil {
		return true
	}

	return false
}

// SetRequestUri gets a reference to the given string and assigns it to the RequestUri field.
func (o *AuditEventAttributes) SetRequestUri(v string) {
	o.RequestUri = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetResource() ApiObjectRef {
	if o == nil || o.Resource == nil {
		var ret ApiObjectRef
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetResourceOk() (*ApiObjectRef, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given ApiObjectRef and assigns it to the Resource field.
func (o *AuditEventAttributes) SetResource(v ApiObjectRef) {
	o.Resource = &v
}

// GetResponseObject returns the ResponseObject field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetResponseObject() string {
	if o == nil || o.ResponseObject == nil {
		var ret string
		return ret
	}
	return *o.ResponseObject
}

// GetResponseObjectOk returns a tuple with the ResponseObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetResponseObjectOk() (*string, bool) {
	if o == nil || o.ResponseObject == nil {
		return nil, false
	}
	return o.ResponseObject, true
}

// HasResponseObject returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasResponseObject() bool {
	if o != nil && o.ResponseObject != nil {
		return true
	}

	return false
}

// SetResponseObject gets a reference to the given string and assigns it to the ResponseObject field.
func (o *AuditEventAttributes) SetResponseObject(v string) {
	o.ResponseObject = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetServiceName() string {
	if o == nil || o.ServiceName == nil {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetServiceNameOk() (*string, bool) {
	if o == nil || o.ServiceName == nil {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasServiceName() bool {
	if o != nil && o.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *AuditEventAttributes) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetStage() string {
	if o == nil || o.Stage == nil {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetStageOk() (*string, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *AuditEventAttributes) SetStage(v string) {
	o.Stage = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuditEventAttributes) GetUser() ApiObjectRef {
	if o == nil || o.User == nil {
		var ret ApiObjectRef
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventAttributes) GetUserOk() (*ApiObjectRef, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuditEventAttributes) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given ApiObjectRef and assigns it to the User field.
func (o *AuditEventAttributes) SetUser(v ApiObjectRef) {
	o.User = &v
}

func (o AuditEventAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.ClientIps != nil {
		toSerialize["client-ips"] = o.ClientIps
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.ExternalId != nil {
		toSerialize["external-id"] = o.ExternalId
	}
	if o.GatewayIp != nil {
		toSerialize["gateway-ip"] = o.GatewayIp
	}
	if o.GatewayNode != nil {
		toSerialize["gateway-node"] = o.GatewayNode
	}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.Outcome != nil {
		toSerialize["outcome"] = o.Outcome
	}
	if o.RequestObject != nil {
		toSerialize["request-object"] = o.RequestObject
	}
	if o.RequestUri != nil {
		toSerialize["request-uri"] = o.RequestUri
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.ResponseObject != nil {
		toSerialize["response-object"] = o.ResponseObject
	}
	if o.ServiceName != nil {
		toSerialize["service-name"] = o.ServiceName
	}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableAuditEventAttributes struct {
	value *AuditEventAttributes
	isSet bool
}

func (v NullableAuditEventAttributes) Get() *AuditEventAttributes {
	return v.value
}

func (v *NullableAuditEventAttributes) Set(val *AuditEventAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditEventAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditEventAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditEventAttributes(val *AuditEventAttributes) *NullableAuditEventAttributes {
	return &NullableAuditEventAttributes{value: val, isSet: true}
}

func (v NullableAuditEventAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditEventAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


